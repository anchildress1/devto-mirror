name: Dev.to Mirror (Static, Hourly)

on:
  schedule:
    - cron: "15 14 * * *"   # runs daily at 14:15 UTC, 10:15 AM EDT, 9:15 AM EST
  workflow_dispatch: {}
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  build:
    if: ${{ github.ref != 'refs/heads/gh-pages' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install requests jinja2 python-slugify

      - name: Generate site
        env:
          DEVTO_USERNAME: ${{ vars.DEVTO_USERNAME }}  # single variable only
          PAGES_REPO: ${{ github.repository }}        # "username/repo"
          FORCE_FULL_REGEN: "true"                    # Force full regeneration to ensure all files are created
        run: python scripts/generate_site.py

      # API is now used inside the generator; no separate probe needed

      - name: Commit & push
        env:
          DEVTO_USERNAME: ${{ vars.DEVTO_USERNAME }}
          PAGES_REPO: ${{ github.repository }}
        run: |
          git config user.name "ci-bot"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          git commit -m "chore: auto-publish dev.to mirror" || echo "No changes"
          # Safer publish flow: copy generated site to a temp dir, switch to gh-pages
          # branch (create if missing), copy generated files (only posts/comments),
          # merge posts_data.json, regenerate index/sitemap, commit and push.
          set -e
          TMPDIR="$(mktemp -d)"
          echo "Copying generated site to temporary dir: $TMPDIR"
          # Copy required artifacts; fail loudly if required ones are missing
          cp -R .nojekyll index.html comments.txt robots.txt sitemap.xml posts posts_data.json scripts "$TMPDIR/"
          # Optional artifacts
          if [ -d comments ]; then cp -R comments "$TMPDIR/"; fi
          if [ -f last_run.txt ]; then cp last_run.txt "$TMPDIR/"; fi
          echo "TMPDIR contents:"
          ls -la "$TMPDIR" || true

          # Ensure we have the remote branch info
          git fetch --all --prune || true

          if git rev-parse --verify origin/gh-pages >/dev/null 2>&1; then
            echo "gh-pages exists on remote, checking out"
            git checkout gh-pages
            git reset --hard origin/gh-pages
          else
            echo "gh-pages does not exist, creating orphan branch"
            git checkout --orphan gh-pages
            # leave working tree empty for now
            git rm -rf .
          fi

          # Copy the generated posts and comment pages only; do NOT overwrite index.html or sitemap.xml
          # This preserves older posts that no longer appear in the RSS feed.
          cp -R "$TMPDIR"/posts ./
          cp -R "$TMPDIR"/comments ./
          # Persist last_run.txt so incremental updates work across runs
          if [ -f "$TMPDIR/last_run.txt" ]; then
            cp "$TMPDIR/last_run.txt" ./last_run.txt
          fi

          # Save the freshly-generated posts_data.json as a separate file so we can merge
          if [ -f "$TMPDIR/posts_data.json" ]; then
            cp "$TMPDIR/posts_data.json" posts_data_new.json
          fi

          # Copy helper scripts into the gh-pages working tree and run the renderer from the checkout root.
          # Running from the checkout root ensures the renderer's ROOT (.) points at the gh-pages tree
          # so posts/ and comments/ are resolved correctly and we don't accidentally run code from TMPDIR.
          if [ -d "$TMPDIR/scripts" ]; then
            cp -R "$TMPDIR/scripts" ./
          fi

          if [ -f "scripts/render_index_sitemap.py" ]; then
            python scripts/render_index_sitemap.py
          else
            echo "Warning: scripts/render_index_sitemap.py not found in working tree; skipping index/sitemap regeneration" >&2
          fi

          git add -A
          git commit -m "chore: publish generated site to gh-pages" || echo "No changes to commit"
          git push origin gh-pages

# Generated with the help of ChatGPT and GitHub Copilot.
