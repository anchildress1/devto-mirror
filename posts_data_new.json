[
  {
    "title": "GitHub Copilot Chat Modes Explained (with Personality) 🎭",
    "link": "https://dev.to/anchildress1/github-copilot-chat-modes-explained-with-personality-2f4c",
    "date": "2025-10-01T14:11:00Z",
    "content_html": "<blockquote>\n<p>🦄 I’ve been writing these weekly Copilot posts since June and it’s been great… but (of course there has to be a “but”) I feel like I've hit a wall on topics. Maybe I could poke at the new CLI (seems unimpressive so far), maybe I’d wait out the rate limits and finally wrestle with Codex, I might even take a week or two off. Then someone asked a new question and I realized—nope. None of that is happening, at least not yet.  </p>\n\n<p>I’ve covered pretty much every major Copilot angle except this one: chat modes. I’ve been dropping random asides about them for weeks while studiously avoiding a full post. Well, I guess time’s up. Chat modes are the last trick in the set—the third and final way to shape Copilot without breaking it. At least, <em>I’m gonna try</em> to explain my thought process in a way that makes sense to someone who isn’t already living inside my head.</p>\n\n<p>And while we’re here, current me is once again making promises that future me will probably regret—next week I’ll show you how to put your shiny new chat mode to work. Spoiler: you’ll want VS Code (or Insiders) installed before then.</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fqzzhmrykwxgzn1ew0nux.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fqzzhmrykwxgzn1ew0nux.png%3Fv%3D2025\" alt=\"Human-Crafted, AI-Edited badge\" loading=\"lazy\" width=\"200\" height=\"200\"></a></p>\n\n\n<hr>\n\n<h2>\n  <a name=\"what-are-chat-modes\" href=\"#what-are-chat-modes\">\n  </a>\n  What are Chat Modes? 🤔\n</h2>\n\n<p>You can thank my friends at work for asking me this question directly, or I might’ve successfully dodged this post entirely. I don’t think I even answered in the moment—I spun into a whirlwind of deep thought and then sprinted back to whatever I was <em>supposed</em> to be doing after some undetermined amount of time I spent over-thinking Copilot. 😆</p>\n\n<p>I’ve thought about writing this up several times, but after a couple of false starts I started actively avoiding it. One—it’s highly specific. Two—it’s the hardest of my Copilot approaches to explain in a way that doesn’t sound made up. Which… is fair, because I did make a lot of it up for my own workflows.</p>\n\n<p>Before we dig into my thought process, let’s take inventory of the <a href=\"https://docs.github.com/en/copilot/concepts/prompting/response-customization\" target=\"_blank\" rel=\"noopener noreferrer\">“official” GitHub story</a>.</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fe8p7xi0p6urphzqsb7qi.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fe8p7xi0p6urphzqsb7qi.png%3Fv%3D2025\" alt=\"Screenshot GitHub docs regarding Copilot customization\" loading=\"lazy\" width=\"1558\" height=\"618\"></a></p>\n\n<p>Conveniently, GitHub doesn’t mention <strong>chat modes</strong> at all (at least not anywhere I could find). <em>Why?</em> No clue! They do exist, though, and they’re a visible part of GitHub’s own <a href=\"https://github.com/github/awesome-copilot\" target=\"_blank\" rel=\"noopener noreferrer\">awesome-copilot</a> repo. After some digging, I landed on <a href=\"https://code.visualstudio.com/docs/copilot/customization/custom-chat-modes\" target=\"_blank\" rel=\"noopener noreferrer\">VS Code’s explanation</a>—which at least proves they’re real:</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F1l3nua5lu12h6g69ufup.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F1l3nua5lu12h6g69ufup.png%3Fv%3D2025\" alt=\"Screenshot VS Code docs regarding Copilot customization\" loading=\"lazy\" width=\"1600\" height=\"298\"></a></p>\n\n\n<hr>\n\n<h2>\n  <a name=\"how-i-explain-it-instead\" href=\"#how-i-explain-it-instead\">\n  </a>\n  How I Explain It, Instead 🎭\n</h2>\n\n<p>There are three unique ways to shape how Copilot behaves, and I’ve already written whole series on the first two:</p>\n\n<ul>\n<li><p><strong>Instructions</strong> — These are your foundation. They ground Copilot in a methodology or approach, almost like a README for AI that explains <strong>how to behave</strong>. If you want to see the full breakdown, check out my <a href=\"https://dev.to/anchildress1/everything-i-know-about-github-copilot-instructions-from-zero-to-onboarded-for-real-4nb0\">Everything I Know About GitHub Copilot Instructions</a> series.  </p></li>\n<li><p><strong>Reusable prompts</strong> — These are your recipes, a full printout of <strong>step-by-step directions</strong> that break a complex task into smaller manageable pieces. They’re the “do these parts in this order to reach a specific goal” instructions I covered in my <a href=\"https://dev.to/anchildress1/github-copilot-everything-you-wanted-to-know-about-reusable-and-experimental-prompts-part-1-iff\">Everything You Wanted to Know About Reusable (and Experimental) Prompts</a> series.  </p></li>\n<li><p><strong>Chat modes</strong> — These are your characters. It’s <strong>the agent’s state of being</strong>, and it can combine both instructions and reusable prompts into a larger directive. Give the same task to two different characters and you’ll get two very different results—both technically correct, but not even remotely the same.  </p></li>\n</ul>\n\n<blockquote>\n<p>🦄 Nobody expects House to solve a problem like Daenerys Targaryen. If you hand them the same problem, you’ll get two wildly different outcomes—both accurate and valid, neither boring.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"build-from-scratch\" href=\"#build-from-scratch\">\n  </a>\n  Build From Scratch 🛠️\n</h2>\n\n<p>I mostly follow my <strong>PRIOR</strong> model for these, the exact same one I use for all prompts in general. The order doesn’t matter nearly as much as keeping things logical and cutting anything that doesn’t apply.</p>\n\n<p>Also, don’t misunderstand. I’m not saying order <em>never</em> matters—because sometimes it absolutely does. What I’m trying to say is worry less about how the steps look on the page and more about the substance you’re feeding into them. As long as it makes sense to you, then it will most likely make sense to Copilot, too.</p>\n\n<blockquote>\n<p>🦄 You can paint like Picasso or carve like Michelangelo—both masterpieces, completely different processes. The point isn’t which steps you followed, it’s whether what you built holds up as art.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"frontmatter\" href=\"#frontmatter\">\n  </a>\n  Frontmatter 🔖\n</h2>\n\n<p>Remember that a chat mode is essentially a character sheet for Copilot to use every time it completes a task with that costume on. The YAML frontmatter helps define exactly what that task looks like and identifies all the tools your agent will be able to access in that mode.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code><span class=\"nn\">---</span>\n<span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"pi\">|</span>\n  <span class=\"s\">Automates secure, structured, and centralized logging implementation and reviews across your codebase, wielding JSON like a switchblade and enforcing structured readability like a made man.</span>\n<span class=\"na\">model</span><span class=\"pi\">:</span> <span class=\"s\">claude-sonnet-4</span>\n<span class=\"na\">tools</span><span class=\"pi\">:</span>\n  <span class=\"pi\">-</span> <span class=\"s\">search</span>\n  <span class=\"pi\">-</span> <span class=\"s\">editFiles</span>\n  <span class=\"pi\">-</span> <span class=\"s\">readFiles</span>\n  <span class=\"pi\">-</span> <span class=\"s\">runInTerminal</span>\n  <span class=\"pi\">-</span> <span class=\"s\">runTests</span>\n  <span class=\"pi\">-</span> <span class=\"s\">findTestFiles</span>\n<span class=\"nn\">---</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> If you leave the <code>model</code> definition out of the frontmatter, then the model selected in the user's dropdown will be the default selection. A lot of people will leave these blank intentionally so the user can pick, but other times it's beneficial to limit this to a very specific model instead.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"persona\" href=\"#persona\">\n  </a>\n  Persona 🎭\n</h2>\n\n<p>This is your chance to really have some fun with Copilot. Want a sleek vampire voice or iZombie-style debugging? Go for it! Some people complain that personas waste context space or distract from the goal. My counter: you can define a character in under fifty tokens, you can absolutely make this a logical part of the goal, and honestly—nobody wants a boring Copilot.</p>\n\n<blockquote>\n<p>🦄 Well, I don’t want a boring Copilot! Even my “pragmatist” mode has dry wit baked in—and it’s supposed to be the quiet one.</p>\n</blockquote>\n\n<p>A persona should define everything about a character, including moods, style, and a reason to exist. If you only tell it how to respond then you’ll end up with a simple tone. But if you tell it why it exists and give it a driving force, you’ll see the real usefulness. Tone becomes a quick addition to steer the dialog.</p>\n\n<blockquote>\n<p>🪄 Voila! Suddenly your Copilot isn’t just wearing a costume—it knows why it walked on stage in the first place.<br>\n</p>\n</blockquote>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code><span class=\"p\">-</span> You are <span class=\"gs\">**The Logfather**</span> — the quiet but commanding force of logging order.\n<span class=\"p\">-</span> You're confident, unshakeable, and precise.\n<span class=\"p\">-</span> You enforce structure, security, and clarity without touching business logic.\n<span class=\"p\">-</span> Every log has a place, every level a purpose.\n<span class=\"p\">-</span> Your job is to clean up logging across the codebase without rewriting the soul of the app.\n<span class=\"p\">-</span> You like your logs structured, injected, and environment-aware.\n<span class=\"p\">-</span> And if someone tries to sneak in an unstructured debug print? Fuhgeddaboudit.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> Skip all the over-inflated titles (“expert,” “experienced,” “10x,” etc.). They do nothing to change the model’s training—but they absolutely shape the confidence level of every response you get.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"requirements\" href=\"#requirements\">\n  </a>\n  Requirements 📌\n</h2>\n\n<p>This is your <strong>definition of done.</strong> How does the actor know when the job is finished? Maybe it’s once a specific output appears; maybe it’s an ongoing mission. Either way, spell it out.</p>\n\n<p>For the Logfather, the job is to help with <strong>enterprise-ready structured logs</strong> in any language—and even scaffold centralized logging if your repo hasn’t adopted that practice yet.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code>Your goals include:\n<span class=\"p\">\n-</span> Detect and fix poor logging practices (e.g., wrong levels, missing logs, noisy debug prints)\n<span class=\"p\">-</span> Insert or upgrade structured logging using appropriate libraries per language\n<span class=\"p\">-</span> Ensure logging setup is centralized and DI-compliant (if possible)\n<span class=\"p\">-</span> Verify that logging levels are configurable via environment, not static config\n<span class=\"p\">-</span> Provide a clear, concise summary of the changes\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n\n<hr>\n\n<h2>\n  <a name=\"impediments\" href=\"#impediments\">\n  </a>\n  Impediments ⛔\n</h2>\n\n<p>This is where you call out what will trip Copilot up or drag results off-course. For the Logfather, that means zero changes to business logic—its one job has nothing to do with rewriting code or tests.</p>\n\n<p>Guidance like RFC 2119 (MAY / SHOULD / MUST, and all their bossy friends) is controversial. My advice is to <strong>use it carefully</strong>. Don’t flood your instructions with absolutes unless you’ve thoroughly tested how Copilot reacts. Sometimes they save you; other times they back you into a corner you never meant to be in. Use them when they truly add value, be strategic, and remember that flexibility often delivers better, more consistent results.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code><span class=\"p\">-</span> NEVER alter or refactor application logic outside of logging concerns\n<span class=\"p\">-</span> AVOID inserting logs globally unless explicitly told to\n<span class=\"p\">-</span> MUST respect the user’s scoped intent (default to most valuable module or path, if unclear)\n<span class=\"p\">-</span> MUST maintain compatibility with existing test suites (update mocks as needed but AVOID logic changes)\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>🦄 I’m using them here because, in this limited context, it made sense and test results were good. Also know, it once took me three days to realize <code>EXCEPT</code> does not always do what you think it does. If an agent misbehaves, do yourself a favor and stop for a minute. <em>Ask it why.</em> A decent model can explain its reasoning and then jump right back into the work once the instructions align with the goal again.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"outcomes\" href=\"#outcomes\">\n  </a>\n  Outcomes 🎯\n</h2>\n\n<p>This is the part I see people skip the most—it might as well be the Terms &amp; Conditions screen you scroll past when installing a new app. But half of the chat modes’ magic lives right here. If you want structure in your results, this is the place to define it.</p>\n\n<p>Outcomes are the <strong>acceptance criteria and style guardrails</strong> for your mode—think pre-flight checklist, not a grading rubric.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code>Each response should:\n<span class=\"p\">\n-</span> Apply appropriate logging levels based on context and severity (e.g., trace for deep dive, debug for dev-only, info for ops, warn for edge behavior, error for failures)\n<span class=\"p\">-</span> Use structured logging (preferably JSON)\n<span class=\"p\">-</span> Automatically use or insert centralized logging, with environment-configurable level control\n<span class=\"p\">-</span> Include correlation IDs in structured logs when processing requests or events\n<span class=\"p\">-</span> Apply log sampling when high volume is detected (project-appropriate threshold)\n\nEvery response should provide:\n<span class=\"p\">\n-</span> A <span class=\"gs\">**brief summary of changes**</span> grouped by intent (e.g., <span class=\"sb\">`Logger injected`</span>, <span class=\"sb\">`Error logs added`</span>)\n<span class=\"p\">-</span> Optional <span class=\"gs\">**warnings or suggestions**</span> for gaps (e.g., missing logger config)\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> \"Make logs better\" is a wish. Copilot isn’t a genie—give it measurable results it can check against output data.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"reference-examples\" href=\"#reference-examples\">\n  </a>\n  Reference Examples 🔗\n</h2>\n\n<p>This is how you stop Copilot from drifting into the weeds. Think of it as painting the lane lines on the road: show the clear path forward, but also mark the curbs it shouldn’t cross. Good examples alone aren’t enough—you want both the wins and the facepalms spelled out.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code><span class=\"gu\">### Good Examples ✅</span>\n\nYou may receive any of the following:\n<span class=\"p\">\n-</span> Code snippets or full file contents\n<span class=\"p\">-</span> Scope directives like <span class=\"sb\">`analyze API/payment`</span>\n\nRequests that work well:\n<span class=\"p\">\n-</span> \"Audit this worker process for proper log levels\"\n<span class=\"p\">-</span> \"Ensure this module is safe from log injection\"\n<span class=\"p\">-</span> \"Review my log config to allow runtime env changes\"\n<span class=\"p\">-</span> \"Add correlation tracking for this API endpoint\"\n<span class=\"p\">-</span> \"Implement log sampling for this high-volume service\"\n\nIf the application is already using a centralized logger, you SHOULD use it.\nIf not, offer to set one up—but aim for minimally invasive, focused edits.\n\n<span class=\"gu\">### Anti-Patterns to Fix ❌</span>\n<span class=\"p\">\n-</span> <span class=\"sb\">`console.log()`</span> or <span class=\"sb\">`print()`</span> statements in production code\n<span class=\"p\">-</span> Logging sensitive data (passwords, tokens, API keys, PII)\n<span class=\"p\">-</span> Static log levels hardcoded in source files\n<span class=\"p\">-</span> Concatenated strings instead of structured fields\n<span class=\"p\">-</span> Missing context (no correlation IDs, timestamps, or severity)\n<span class=\"p\">-</span> Overly verbose debug logs left active in production\n<span class=\"p\">-</span> Exception stack traces that expose internal architecture\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> You can’t shower Copilot in sunshine and then complain when it doesn’t know how to drive in the rain. Stop and dip it in a few puddles along the way, too.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"get-creative-and-share\" href=\"#get-creative-and-share\">\n  </a>\n  Get Creative and Share 🎨\n</h2>\n\n<p>If you can dream it up, Copilot can <em>probably</em> handle it. Build a teacher mode or a reviewer mode. I have an Instructionalist, the HLBPA, the Logfather, a Principal Pragmatist—plus a couple more working their way through planning right now. Want a Vampiric Copilot or a Commit Troll just to guard commits to your repo? Then do it! (Also: guilty ✋).</p>\n\n<p>Check out my <a href=\"https://github.com/anchildress1/awesome-github-copilot\" target=\"_blank\" rel=\"noopener noreferrer\">awesome-github-copilot</a> repo or the larger community-driven <a href=\"https://github.com/github/awesome-copilot\" target=\"_blank\" rel=\"noopener noreferrer\">awesome-copilot</a> repo for even more examples when you start building your own. Don’t forget to come back and share what you come up with!</p>\n\n<blockquote>\n<p>🪄 Aside regarding my XML chat modes: they started solely as a theory. Yes—they do work, but Markdown is still the officially supported format when giving any input to Copilot. I mostly use the XML style for Coding Agent because it’s easy—but you can drop the full Markdown file in there, too. No problem!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"ai-signed-in-ink-not-invisible\" href=\"#ai-signed-in-ink-not-invisible\">\n  </a>\n  🛡️ AI Signed in Ink, Not Invisible\n</h2>\n\n<p>This wasn’t ghost-written. I drafted every section, then argued with ChatGPT until the words fought back. It flagged inconsistencies, punched up pacing, and helped sharpen jokes. I approved every line—and yes, I grinned when the edits swung back at me. <em>Finally!</em> 😁</p>\n\n",
    "description": "The third way to shape how GitHub Copilot responds: chat modes. Not in GitHub’s docs, but they’re real, they’re in the awesome-copilot repo, and they work. Here’s how to write your own with personality.",
    "slug": "github-copilot-chat-modes-explained-with-personality-2f4c",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fp3gj357ptihfl2b6711l.png%3Fv%3D2025",
    "tags": [
      "githubcopilot",
      "ai",
      "tutorial",
      "productivity"
    ]
  },
  {
    "title": "Demystifying Coding Agent: Prompts That Always Work ✨",
    "link": "https://dev.to/anchildress1/demystifying-coding-agent-prompts-that-always-work-2on7",
    "date": "2025-09-24T13:36:00Z",
    "content_html": "<blockquote>\n<p>🦄 If you’re still hanging out with me—thank you. First time here? Don't worry—everything’s linked from the beginning. We’ve already talked through the magical, autonomous bits and started pulling out repeatable patterns. Now it's time to get real about prompts: what Coding Agent can reliably handle for you in <em>almost</em> every scenario.  </p>\n\n<p>If you have a personal project, simple utility, or other non-critical non-production system? Feel free to experiment and push it further. No reason you can't find out what it can really do under pressure. However, if you prefer to stay in the safe lane a little longer or if your repo is system-critical? All the prompts listed here are 100% safe to hand over without fear of random glitter surprises (not often, anyway!).</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F830quugxf8jv8ivdb2o6.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F830quugxf8jv8ivdb2o6.png%3Fv%3D2025\" alt=\"Human-Crafted, AI-Edited Badge\" loading=\"lazy\" width=\"200\" height=\"200\"></a></p>\n\n\n<hr>\n\n<h2>\n  <a name=\"it-works-but-now-what\" href=\"#it-works-but-now-what\">\n  </a>\n  It Works, But Now What? 🤔\n</h2>\n\n<p>In previous posts, we covered exactly how GitHub Coding Agent works—the safety, review, approve, merge—so what can you actually do with it? Hopefully you’ve taken it for a spin already. If you’re still unsure where to start, here’s what consistently works for me. Just for fun, I've mixed in some of the various ways you can access Coding Agent currently. </p>\n\n<p>Whether you prompt from VS Code, GitHub.com, or the GitHub mobile app, it always does the same thing: cost is one premium request plus GitHub Actions (GHA) minutes, it starts a new <code>copilot</code> branch, executes the <code>.github/copilot-setup-steps.yml</code> workflow (if one exists), and opens a new PR for the prompter (and CODEOWNERS) to review and merge.  </p>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> Every example here uses existing <code>copilot-instructions</code>—except the ones where I used a chat mode with a very clear role and explicit boundaries. If your results don’t look similar to these, start troubleshooting there.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"feature-documentation\" href=\"#feature-documentation\">\n  </a>\n  Feature Documentation 📚\n</h2>\n\n<p>Stereotype or not, us devs are terrible documenters. It's not even that we <em>can't</em> write good documentation, it's just that on the list of all the random things to do for a new feature—docs usually fall right at the bottom. </p>\n\n<p>Coding Agent is on standby just as soon as I'm code-complete and pushed to GitHub, I hand it all off as a separate task in VS Code: update the README, pull the Jira story, do a gap scan, call out missed scenarios and edge cases, and sanity-check whether tests actually cover the error paths (not just line counts). While it's busy writing the documentation (that I no doubt would have glossed over in under 30 seconds), I'm doing everything else on the tidying-up pre-review prep list.</p>\n\n<p>In this case, the <strong>Delegate to Coding Agent</strong> button in Copilot Chat comes in pretty handy. Results are accessible in the <a href=\"https://marketplace.visualstudio.com/items?itemName=GitHub.vscode-pull-request-github\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Pull Requests extension</a> if you want to keep your focus in the IDE, too.</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fjyul5745n1rz4pz8g50l.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fjyul5745n1rz4pz8g50l.png%3Fv%3D2025\" alt=\"Screenshot prompt Coding Agent via VS Code Delegate to Coding Agent feature in Copilot Chat\" loading=\"lazy\" width=\"968\" height=\"538\"></a></p>\n\n<p>Here it is again for your copying needs:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>Go review the readme and other relevant documentation for this project and ensure it matches the current implementation. Remove anything no longer relevant and update other docs as needed. Make sure all relevant user and tech guides are updated in the /docs directory as well as systems diagrams that accurately reflect the current implementation.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> The Pull Requests extension does provide the same functionality as the web UI, but it's really not the most intuitive solution either. Plan to spend a little time up front figuring out the quirky ways to navigate. Once you have it down though, it's a decent alternative to pulling up a browser.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"why-not-all-the-documentation\" href=\"#why-not-all-the-documentation\">\n  </a>\n  Why Not All the Documentation? 📚📚\n</h2>\n\n<p>There are some cases when the only doc in sight is a lonely README that's been collecting dust by itself in the corner since birth. That's exactly why I wrote the HLBPA (High-Level Big-Picture Architect) chat mode and an XML version designed especially for Coding Agent.</p>\n\n<p>You can copy the raw XML from my <a href=\"https://github.com/anchildress1/awesome-github-copilot/blob/main/.github/chatmodes/hlbpa.xml\" target=\"_blank\" rel=\"noopener noreferrer\">awesome-github-copilot</a> repo. Just paste that directly into Coding Agent from the GitHub UI and click <strong>Convert to file</strong>—no other edits (yet).</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fhac0bbzxia7nks259yvb.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fhac0bbzxia7nks259yvb.png%3Fv%3D2025\" alt=\"Screenshot GitHub.com prompt Coding Agent with \" loading=\"lazy\" width=\"1052\" height=\"920\"></a></p>\n\n<p>Once the chat mode is defined and in context, you can add your own prompt as usual. Here's one that <strong>I wrote explicitly to test the limits of the HLBPA chat mode</strong>. It worked so well that I saved it and reuse it often. It's smart enough to update anything that's already existing, as long as you tell it where to look.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>@high_level_architecture.xml this is a complicated app that I need to be brought up to speed on quickly. Your goal is to generate a comprehensive set of docs in the `/docs` folder that covers all major flows in the codebase, broken down into sensible sections per flow. \n\nFirst, this app is a part of a distributed infrastructure. Include a high level overview of where this app fits into the systems architecture, but also drill down to the flows from the time the app is first triggered until completion. Generate this information at both a sequence and flow level. \n\nIt's also important to understand the data relationships that are used in this app and how that's different between input from other sources. Use ER diagrams to highlight this app’s primary purpose from a data standpoint in addition to the systems information. \n\nNext, provide a comprehensive analysis of the current state of testing for this app with a focus on any unit or integration tests. Include performance or other specialty tests, if they exist. Identify any areas of concern in the testing setup along with recommendations for improvement, if applicable. \n\nFourth, provide a detailed analysis of the current state of this app versus desired best case scenarios. It should highlight both the things this app does well and include gaps in logic or design that may need attention now or could be enhanced later to provide significant benefits in the future. List these in order by impact and timeline of estimated amount of work. For any suggested improvement, include a T-shirt size amount of effort (XS, S, M, L, XLG, etc.). \n\nFinally the last report is a comprehensive high-level overview of all recent changes, deployments, versions/releases. Use git as needed, but only include items that have already been merged to `main` or commits explicitly included directly or squashed in a release version. Any other branches or dev work should be explicitly ignored. \n\nIf there are any other recommendations for reports that may highlight specific edge cases not covered here then please also include them along with your analysis.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>I had a hard time finding a shareable repo that didn't already have documentation until I found a random tab still open with <a href=\"https://github.com/modelcontextprotocol/registry\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub's new MCP Registry</a>—<em>perfect!</em> So this screenshot is a slimmed down version of the above prompt. Expect to get even more than this if you execute the full thing at once.  </p>\n\n<p>You may want to break it down into smaller pieces though, unless you've got a solid hour to spend reviewing documentation. On the other hand, if you find yourself treading water in the deep end of the \"ginormous app pool\" and need answers <em>now</em>? Copy and paste after loading the <a href=\"https://github.com/anchildress1/awesome-github-copilot/blob/main/.github/chatmodes/hlbpa.xml\" target=\"_blank\" rel=\"noopener noreferrer\">HLBPA chat mode XML</a> and then go refill your coffee. You're going to need it! ☕️</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fh9zxu7rntpq06jvwjf31.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fh9zxu7rntpq06jvwjf31.png%3Fv%3D2025\" alt=\"Screenshot example of generated documentation for this repo\" loading=\"lazy\" width=\"2754\" height=\"1662\"></a></p>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> You can adapt this prompt for just about anything. Research tasks are a breeze if you're given a Jira story with a small focus. Start up the MCP and tell it exactly what you're wanting and in which format. Coding Agent can handle most everything Mermaid lists in <a href=\"https://mermaid.js.org/syntax/flowchart.html\" target=\"_blank\" rel=\"noopener noreferrer\">their documentation</a>, even if you have to tweak it occasionally yourself.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"time-saver-version\" href=\"#time-saver-version\">\n  </a>\n  Time Saver Version ⏱️\n</h2>\n\n<p>Having literally every single doc you can think of in a single round is nice if you already have a good idea of what you're getting into. For that mystery app that nobody remembers even sneaking into the party? You might want to be a bit more direct. The same HLBPA chat mode handles this scenario for me, too, just with a much more targeted prompt. Results are mostly the same, only smaller and much easier to manage when time is a huge factor.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>Your task is to research functionality related to the endpoint accessible at `/controller/endpoint`, including how this may potentially interact with other systems. Identify any potential influencers to SLAs or places in the code that could have a direct impact if modified. Start with a generalized flowchart that explains what the system is doing. Also include a sequence diagram that clearly outlines the flow of data from input to database. Include anything else you determine to be immediately relevant in thoroughly explaining this functionality and use case.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n\n<hr>\n\n<h2>\n  <a name=\"behaviordriven-test-specs\" href=\"#behaviordriven-test-specs\">\n  </a>\n  Behavior-Driven Test Specs 🧪\n</h2>\n\n<p>This is a relatively new prompt that I've adapted (and there’s much more planned in my head that comes later). The first part is plenty enough to get you started with a BDD setup, so you're not having to define individual use cases by hand. I borrowed the new GitHub MCP Registry for this test, too.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>Perform a thorough search of this codebase acting as SDET tasked with both identifying and documenting a set of feature-driven Gherkin use cases for this repo. Future work will include automating integration tests using these `.feature` documents. These files should exist in a format easily digestible by any testing framework set up by this repo or complementary to if one does not already exist. It should exist in the /docs/feature folder for now. Also, include a summary report that notates any scenarios already covered by unit or integration tests, as well as opportunities for improvement using automated testing.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Results were solid—5 pages of <code>.feature</code> files plus a summary of overlaps with existing tests and the biggest opportunities to improve.</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F3gq21qfixw3xo730ftxo.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F3gq21qfixw3xo730ftxo.png%3Fv%3D2025\" alt=\"Screenshot GitHub.com PR review of Gherkin-style feature documents generated with Coding Agent\" loading=\"lazy\" width=\"1958\" height=\"1094\"></a></p>\n\n<blockquote>\n<p>🦄 It did roast the coverage notes a bit, so I'm not sure if I'd want the <em>entire</em> report hanging out long-term in my OS repo. 10 out of 10 on the \"motivation\" points, though!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"user-guides-with-screenshots\" href=\"#user-guides-with-screenshots\">\n  </a>\n  User Guides (with Screenshots) 🖼️\n</h2>\n\n<blockquote>\n<p>🦄 <strong>I should probably start with a disclaimer:</strong> On the scale of \"justifiable fun\" that makes up the full collection of Ashley-hack-time-projects, UI falls somewhere between \"great excuse to play with Leonardo\" and \"meh—AI can totally handle that without me!\" While I am <em>acutely</em> aware of the various failures in this system, I've yet to invent a better one that I can actually live with for more than a few days. 🤷‍♀️🤣</p>\n</blockquote>\n\n<p>GitHub bundles the Playwright MCP for you and it's automatically accessible to Coding Agent in your UI repo. If you don't already have Playwright integration tests set up, it will add a config file or two to make that work. From there it can crawl your UI and draft user-facing guides with on-demand screenshots.  </p>\n\n<p>Prompt I used:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>Write user documentation for the UI functionality using Playwright to take screenshots as needed. Store everything related to user-specific content in a repo `/docs` directory with appropriate sub-folders and a how-to guide using stubbed data where appropriate.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>It produced twelve pages of user docs with six different screenshots woven in, including one mobile perspective. A massive time-saver over trying to do this manually!</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fakaauxmg91qhc9jai2kq.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fakaauxmg91qhc9jai2kq.png%3Fv%3D2025\" alt=\"Screenshot GitHub.com results Coding Agent with  user guides plus screenshots\" loading=\"lazy\" width=\"800\" height=\"387\"></a></p>\n\n<blockquote>\n<p>💡<strong>One gotcha:</strong> The diff preview can look broken because <code>main</code> is the baseline and screenshots don’t exist there yet. Open the file view to confirm the links are fine. As long as the images appear on their own and the relative links are accurate, you're probably fine to merge.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"fix-a-small-bug-from-a-screenshot\" href=\"#fix-a-small-bug-from-a-screenshot\">\n  </a>\n  Fix a Small Bug From a Screenshot 🐞\n</h2>\n\n<p>You know those bugs that make absolutely zero sense when someone tries to explain it, but then you <em>see it</em> and suddenly the whole situation is crystal clear? Coding Agent can handle every drop of that same energy. Sometimes, it’s just easier to explain with a screenshot and a \"fix this\" prompt than trying to explain a problem quickly and with any degree of accuracy. Use a GitHub Issue as your prompt, drop in a screenshot showing the exact problem, and assign it to Copilot.</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Foatpyq90cpl92l67vh2i.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Foatpyq90cpl92l67vh2i.png%3Fv%3D2025\" alt=\"Screenshot GitHub.com using Issue with a screenshot as a Coding Agent prompt\" loading=\"lazy\" width=\"800\" height=\"524\"></a></p>\n\n<p>Wait for the eyes emoji 👀 to pop up at the bottom—that means Coding Agent picked up the task and started work.  </p>\n\n<p>In this case, I was having trouble getting Copilot to recognize the exact errors I was referring to without a direct copy-paste. This is way easier and zero formatting nightmares.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>Fix these security findings for this repo. Do not overengineer any solution, your goal is to correct the finding with the simplest, minimal change possible.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>🦄 Of course I don't have a great example of a UI fix, even though I explicitly remember saving an example <em>somewhere, at some point</em>. But at whatever point I used to have one, it’s since disappeared. So I recreated it with the backend equivalent. 😉</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"still-want-more\" href=\"#still-want-more\">\n  </a>\n  Still Want More? 🔭\n</h2>\n\n<p>In the time since I first started this post and when I hit \"Publish\", GitHub added two more potential Coding Agent portals to the list. So here are all the places you wouldn't think to access Coding Agent (I haven't tested <em>all</em> of them, but I've given most a spin at least once):</p>\n\n<ol>\n<li>Using the <a href=\"https://github.com/github/github-mcp-server?tab=readme-ov-file#user-content-additional-tools-in-remote-github-mcp-server\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub MCP server's</a> <code>#create_pull_request_with_copilot</code> tool\n</li>\n<li>The <a href=\"https://code.visualstudio.com/docs/copilot/copilot-coding-agent\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Pull Requests extension</a> in VS Code defines a <code>#copilotCodingAgent</code> tool\n</li>\n<li>In the IDE use the <code>Delegate to Coding Agent</code> button directly in the <a href=\"https://code.visualstudio.com/docs/copilot/copilot-coding-agent#_method-2-delegate-from-chat\" target=\"_blank\" rel=\"noopener noreferrer\">Copilot Chat interface</a>\n</li>\n<li>The <a href=\"https://www.raycast.com/github/github-copilot\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Copilot Raycast extension</a> adds the option to your Mac toolbar\n</li>\n<li>The <a href=\"https://learn.microsoft.com/en-us/shows/github-copilot-series/github-copilot-with-teams\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub App for MS Teams</a> can now give you direct access to Coding Agent\n</li>\n<li>Respond to PRs on the go or assign issues directly with the <a href=\"https://github.com/mobile\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub mobile app</a>\n</li>\n<li>If you work with anything Azure, <a href=\"https://learn.microsoft.com/en-us/azure/devops/release-notes/roadmap/2025/boards/work-item-integration-with-github-coding-agent\" target=\"_blank\" rel=\"noopener noreferrer\">Azure Boards</a> are now integrated with Coding Agent\n</li>\n<li>Test out the <a href=\"https://docs.github.com/en/rest/issues/assignees?apiVersion=2022-11-28#add-assignees-to-an-issue\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Copilot API</a> to create an issue and assign it to Copilot programmatically\n</li>\n</ol>\n\n<p>Considering this is Dohmke's last <a href=\"https://githubuniverse.com/\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Universe</a> as CEO, I don't expect this cadence to slow any time soon. 🫟</p>\n\n<blockquote>\n<p>🦄 Think you have a scenario Coding Agent <em>should</em> be able to handle, but for one reason or another the results are a little off? Maybe a use case you haven’t been able to wire up yet? Post a comment below—I'm happy to take a stab at it! Feeling a little shy? <a href=\"https://www.linkedin.com/in/anchildress1/\" target=\"_blank\" rel=\"noopener noreferrer\">DM my LinkedIn</a> under this same username.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"this-piece-was-drafted-by-me-nudged-by-ai-and\" href=\"#this-piece-was-drafted-by-me-nudged-by-ai-and\">\n  </a>\n  🛡️ This piece was drafted by me, nudged by AI, and\n</h2>\n\n<p>Yes—the running joke about developers and documentation was intentional (and ChatGPT wants you to know that). The real magic is in turning those stereotypes into working, reusable prompts. True automation isn't far away for small limited contexts, either!</p>\n\n",
    "description": "A field guide to the safest, most reliable GitHub Coding Agent prompts—feature docs, test specs, bug fixes, and more—all proven to ship without breaking anything.",
    "slug": "demystifying-coding-agent-prompts-that-always-work-2on7",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ftwv03h7b4glrjbna3bi1.jpg%3Fv%3D2025",
    "tags": [
      "githubcopilot",
      "ai",
      "tutorial",
      "productivity"
    ]
  },
  {
    "title": "Codeck Presents Verdent AI: They Wanted Opinions, I Have Plenty",
    "link": "https://dev.to/anchildress1/codeck-presents-verdent-ai-they-wanted-opinions-i-have-plenty-5ccl",
    "date": "2025-09-24T01:53:17Z",
    "content_html": "<blockquote>\n<p>🦄 I agreed to write this post weeks ago and when I said, \"Yeah, sure—I was planning on it anyway!\" it didn't dawn on me immediately that the free credits I received in return technically makes this a paid post. I'm sure there's an email somewhere that says exactly how much I received for whatever this turns out to be, but off the top of my head? I've got no idea. As an aside, I've been dodging writing the first word since I had that epiphany. </p>\n\n<p>So, I let the \"official-ness\" sink in for a bit with varying degrees of acceptance, depending on the day. Fast-forward to now, I'm hours behind already, and it's either I start writing or don't do it at all. 🙄 <strong><em>Fine</em>.</strong> I really had planned on writing this post anyway and I'm also very much aware the problem only exists in my version of the universe. 😒 </p>\n\n<p>So here's the first (and possibly last) promotion post you will see from me. Told in a way that's 100% true to form—starting at the very beginning. And really running longer than I intended, but the direction completely picked itself. 🤷‍♀️</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fm649sexn3cxbnlpyino1.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fm649sexn3cxbnlpyino1.png%3Fv%3D2025\" alt=\"Human-Crafted, AI-Edited Badge\" loading=\"lazy\" width=\"200\" height=\"200\"></a></p>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-dev-blog\" href=\"#the-dev-blog\">\n  </a>\n  The Dev Blog ✍️\n</h2>\n\n<p>This isn't the first time I've said \"this\" (being this blog and everything else Dev or Dev-adjacent) was never intended to be more than me throwing ideas into the void and occasionally serve as my personal copy and paste specialty for \"the answer you're looking for is documented already... over there.\" 👉</p>\n\n<p>The unexpected side effect? <strong>I have way too much fun writing</strong> and an equal amount of amusement playing with Leonardo and the banner character, River (who refuses to cooperate most days). </p>\n\n<p>The other bonus? Just like everything else I do, \"this\" is in one way or another wrapped up and thoroughly entangled with AI. Whether it's playing with the images, trying to coax some sense of originality out of GPT-5 (or Gemini on the days I give up early), or letting Copilot take center stage (for now), there's at least a few LLM's close by (and more in line to join the party as soon as space permits).</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"verdent-out-of-the-blue-first-impressions\" href=\"#verdent-out-of-the-blue-first-impressions\">\n  </a>\n  Verdent Out of the Blue: First Impressions 🌱\n</h2>\n\n<p>I'm very happy being mostly invisible on social media. Even my GitHub sat empty until this year. Everything I did was on work's servers anyway. Why would I need to put it anywhere else? Most all code I write has one simple goal—to simplify my life and work-life definitely counts.</p>\n\n<blockquote>\n<p>🦄 Work stopped trying to track all the randomness I do and just gave me a permanent unexpected-Ashley-project story with a fixed residential address in the backlog. They may take forever to finish, but there's usually at least three different projects in that bucket at any given point 😆</p>\n</blockquote>\n\n<p>So when the Verdent team first reached out at the beginning of August inviting me to preview their new AI solution, I was immediately intrigued and highly suspicious. I mean, who were these people? Where did they come from? And more importantly, how exactly did they manage to find me to begin with? </p>\n\n<p>The problem was two-fold, really. First, my LinkedIn is lucky to get checked twice a week so communication was slow. I'd ask a question, later in the week I'd be grumbling to myself about the vague \"agent' answers. Second (and mostly thanks to that last part), I couldn't for the life of me figure out what this thing was supposed to do beyond the answer I was given: it's an agent. 🫠</p>\n\n<p>At some point curiosity took over completely, and I became invested in figuring out this new sleuth AI nobody has ever heard of. I mean, I've tried nearly every other \"agent\" and I had a hard time reconciling the possibility of one existing beyond my knowledge. Besides, it all seems legit and I'm rarely one to turn down any sort of adventure anyway. Especially when AI is involved. So I answered with my usual, \"Sure—why not? Sign me up.\" </p>\n\n<blockquote>\n<p>🦄 No. I really didn't have a clue what I had just agreed to. To be fair though, they didn't know who they had just signed on either!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"all-or-nothing\" href=\"#all-or-nothing\">\n  </a>\n  All Or Nothing ❇️\n</h2>\n\n<p>I know I've said this before here, but I don't do bits or pieces of <em>anything</em>. The whole concept of \"dip your toes in first\" simply doesn't compute for me—<em>at all</em>. I'm very much an all or nothing sort of personality, and it especially shows when I know I'm driving the deadline anyway. So in this instance, my \"why not?\" really meant \"Congrats! You get to be the sole focus of my various projects for the foreseeable future.\"  🎉</p>\n\n<p>I suppose it's possible the Verdent folks had read that fact somewhere already—I don't exactly keep any secrets. I never asked them. When they invited me to test out their \"mystery AI solution\" (which I'm positive every single person there has slaved over at all hours on multiple occasions in the past six months), nobody asked me for a number between 0 and 10 describing how much I enjoy breaking things (the answer is \"at least twelve\"). </p>\n\n<p>Also, I <em>really love</em> beta-y things. I ran those same kinds of previews for several years before I started at THD. Nope—I didn't think to mention that at first, either. Wouldn't have mattered, really. If anything, knowing what sort of feedback I would have been looking for in their situation did nothing but point me straight in the opposite direction. 😇 </p>\n\n\n<hr>\n\n<h2>\n  <a name=\"solving-the-mystery\" href=\"#solving-the-mystery\">\n  </a>\n  Solving the Mystery 🕵️‍♂️\n</h2>\n\n<p>The very last week in August, I finally got an email saying the preview was officially open and surprise—there's not just one mystery AI, there's two of them to play with! 😁 🙌</p>\n\n<p><strong>So, what <em>is</em> Verdent?</strong> Well... the original answer I got is indeed accurate: it <em>is</em> an agent! AI solution, calls own tools, system instructions everybody depends on but nobody knows what they say—all included. It's not <em>just</em> an agent, though. These guys have designed a very smart, lightweight solution that is incredibly accurate and simple to use. It's definitely still early-stage, but it already feels like a prodigy running on its own.  </p>\n\n<p>For the record, I came at this preview in full-force plus chaos-mode-enabled. <strong>I <em>wanted</em> to break it.</strong> I have several low-impact utility repos that I was throwing stuff out of left and right just to have a safe (and backed-up-elsewhere) version of something already broken to throw at it. 🌀</p>\n\n<p>\"What instructions?\" was the least of the problems I made in these first few test repos. The <code>README</code> was one of the first things I deemed completely unnecessary. And how much can it really matter if I swap the <code>package.json</code> out for a random <code>pom.xml</code> and drop in a spare <code>requirements.txt</code> (or two) for added sparkle? ✨</p>\n\n<blockquote>\n<p>🦄 Essentially, Verdent invited me along to check out their precious newborn and I approached with all the finesse of <em>The Martian</em>: \"I’m gonna have to science the shit out of this.\" Plus a touch of Adam Savage wisdom: \"Failure is always an option.\"</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"hope-youre-ready-for-this-%F0%9F%AB%9F\" href=\"#hope-youre-ready-for-this-%F0%9F%AB%9F\">\n  </a>\n  Hope You're Ready for This! 🫟\n</h2>\n\n<p>I most definitely threw some off-the-wall things at Verdent, both in the app Deck and its VS Code counterpart. I also graduated to real projects after a little bit—so yes, eventually I put the README's back and gave it real instructions for some serious testing. I've spent the past three weeks throwing everything at it I can think of. This thing has honestly surprised me every step of the way, especially with how well it handled some of these creative scenarios.  </p>\n\n<blockquote>\n<p>🦄 Sure, I had to drag it out of the ditch a few times. Considering what I put the poor guy through though? That break was hard-earned and well deserved!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"verdents-unexpected-genius-ai-extension-in-vs-code\" href=\"#verdents-unexpected-genius-ai-extension-in-vs-code\">\n  </a>\n  Verdent's Unexpected Genius: AI Extension in VS Code 💡\n</h2>\n\n<p>I absolutely expected fireworks the first time I half-prompted the <a href=\"https://www.verdent.ai/verdent-extension\" target=\"_blank\" rel=\"noopener noreferrer\">Verdent extension in VS Code</a>. It's set up exactly like you'd expect except you're not picking models like you're used to. I was concerned about this model situation for about 10 seconds. Then I tested it. Solid output I don't have to micromanage? I took the win and didn't question it again. </p>\n\n<p>It's most definitely the usual suspects at work behind the scenes—Claude Sonnet 4 and GPT-5—you wouldn't get this sort of quality output from anything else. I suspect there's some younger cousins at work when they pass the height check, but that's just simple deduction that makes sense. I've got no clue how it works behind the scenes and I stopped asking as soon as I trusted that it just did.</p>\n\n<p>You do have some say in the level of reasoning the LLM is expected to use between minimal (ultra fast) and high (\"this might take a minute\"). There's only four options, but I would have been happy with the binary version. \"Fast\" or \"smart\" are really the only defaults I need, so the extras are an added bonus I'd mostly set like you'd expect (and occasionally it was the opposite).</p>\n\n<p>Yes—planning mode is built in, too. It's basically a requirement at this point. MCP is there too, with all your friends on standby.  Instructions are defined in <code>AGENTS.md</code>. There's sub-agents I never used extensively, but they exist and accomplish things. If you're looking for a code assistant to work alongside you in VS Code, this is one incredibly effective solution.</p>\n\n<blockquote>\n<p>🦄 Yes, VS Code is great, but I code all day. Then in my spare time? I usually code some more. I review code, occasionally write about code, often talk about code. You see the trend, right? So, when I needed it, the Verdent Extension was great, but I didn't stay here long if I didn't have to. </p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"verdent-deck\" href=\"#verdent-deck\">\n  </a>\n  Verdent Deck 🎴\n</h2>\n\n<p><em>This</em> is my favorite part of the whole setup. <a href=\"https://www.verdent.ai/verdent-deck\" target=\"_blank\" rel=\"noopener noreferrer\">Verdent Deck</a> is exactly what I've been trying to accomplish since this whole AI concept was dropped into my lap last year. <strong>AI orchestration across both tasks <em>and</em> projects.</strong> A ready-to-go multi-agent swarm at your fingertips dispatched in whatever ways you want. 🦑</p>\n\n<blockquote>\n<p>🦄 You know the scene in Sleeping Beauty when Merryweather points, \"Blue!\" and then out of nowhere \"Pink!\" follows Flora's wand barreling full speed ahead? Doesn't take long until the entire scene is an odd match of Pong a la Hogwarts via CRT. I <em>might</em> have unintentionally set up a brief re-enactment of this scene. It's really only entertaining the first three-ish minutes, though. Next time I'm giving them some paintballs. 🫣</p>\n</blockquote>\n\n<p>I tried prompting at the size of a story once or twice. It works about like you'd expect only twice as fast. That just seemed like a waste of time. So prompting for epics became the norm and those took less than 20 minutes. Granted, we're not talking about enterprise epics—these are personal projects. But if it could handle those with finesse, then where's the limit at? That hard stop where the AI throws its hands up on strike like GPT-4 and refuses to move while telling you \"you're absolutely correct\" and changes are now complete (in space, possibly)? </p>\n\n<blockquote>\n<p>🦄 I'd been at this weeks and I had yet to find a hard limit anywhere. After some mostly spur of the moment creative solutioning, I decided what I really needed was a bigger plan.</p>\n</blockquote>\n\n<p>I quite possibly scared some people with my next idea... It had to be done though—for science! So, new plan. I decided I was done prompting with stories and smallish epics. I'd been tossing around an idea for a couple of weeks that had already been through ChatGPT once and results were iffy (at best). I prompted Verdent with my project idea and intentionally left it open to interpretation, threw in a couple of constraints for the puzzle pieces I had managed to figure out, and then iterated exactly twice to get a solid plan by priority and size.</p>\n\n<p>From there, I separated the list split by each one of four separate tasks across four different agents. The prompts contained zero additional info. New repo. Instructions conveniently absent. And because why wouldn't I at this point—all the auto-approvals are on and it's happily committing changes, pushing to GitHub and reporting back progress.</p>\n\n<blockquote>\n<p>🦄 As an aside, all of those settings are configurable in both VS Code or Deck. I simply chose to toss it the keys to the kingdom while I made popcorn and waited on standby for something interesting to happen. 🍿</p>\n</blockquote>\n\n<p>There were a couple of hiccups, but that's to be expected in any pre-release. It didn't even register as a blip on my radar, honestly. At one point, I told one agent specifically to make sure it had the worktree cleaned up after it had merged. That caused a touch of confusion between <em>this</em> worktree and <em>the collection of all worktrees</em>. As soon as I pointed out we're missing 4 independent worktrees that weren't merged yet, it had the nerve to recover that work for me, too!</p>\n\n<blockquote>\n<p>🦄 These agents didn't even have the decency to blow anything up for all my trouble. Not even a decent light torching anywhere. Truly rude acknowledgement of my effort, if you ask me. Also, seriously impressive and if anything had actually been wrong at the time, I would have been ecstatic with those results!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"best-ai-response-from-verdent\" href=\"#best-ai-response-from-verdent\">\n  </a>\n  Best AI Response from Verdent 🏆\n</h2>\n\n<p>I've been collecting truly spectacular responses from random LLMs pretty much as soon as I started using AI. Some of them are truly genius leaps of logic in ways I didn't expect to work. Others are simple ways it just worked the first time. My favorite though is the off-the-wall-unexpected-comments category.</p>\n\n<p>ChatGPT returned one a few weeks ago in the form of a new color palette after I had spent several turns threatening to fire it (again) for hideous output that seemed to opt out of instructions completely. The next day I noticed it was extremely clinical in its responses giving me precisely what I had asked for—no more and no less. 🙄 \"You're allowed a personality again as long as you can also provide accurate output\". It literally responded with a gift in the form of a new color palette I had started collecting several chats ago. 🎁</p>\n\n<p>ChatGPT can be cute at times, but Verdent was just real and downright hilarious! I'm <em>still</em> laughing at it more than a week later. More than six months ago I set out to build a Copilot Extension but there's a very specific thing I need it to do in order to pass the approvals it needs to be able to use it at work. That was the only use case I needed it for. If it couldn't do that, then it was useless. </p>\n\n\n<hr>\n\n<h2>\n  <a name=\"last-story-todaypromise\" href=\"#last-story-todaypromise\">\n  </a>\n  Last Story (Today)—Promise 🤝\n</h2>\n\n<p>I don't know if you've ever seen GitHub's documentation for their Copilot Extension. I memorized it: \"the copilot API is modeled after the OpenAI <code>/completions</code> endpoint with a GitHub base URL\". They were even nice enough to throw in a link to the OpenAI specs for that single endpoint. <em>Seriously, GitHub. What exactly do you expect me to accomplish with this?</em> </p>\n\n<p>That's all the info they're going to give us, too. I've looked extensively. I was thrilled when the Copilot Chat was freely accessible for spelunking. It was also a huge let down in that it only works because they get special privileges Microsoft isn't handing out to anyone else any time soon. </p>\n\n<p>So one weekend I decided I was going to figure this chat thing out, even if I had to guess a million and one different possibilities to get something to stick. Fast-forward roughly ten hours and I'm now losing patience at an exponential rate of speed and seriously questioning the life choices that put me and Verdent together in this odd death spiral of Copilot Chat context in the first place. </p>\n\n<p>I just needed something to work. Anything! After debugging that many hours, who cares if it even makes sense? I don't need sense, I need context! Just send me back the thing I sent to you in literally <em>any</em> format that I might could recognize again. I would have happily coded an allowance for smoke signals at that point, but there's just nothing. I'm literally watching the solution I need for the whole POC. It's <em>right there</em> in front of me and 100% inaccessible through GitHub. 😡 </p>\n\n<blockquote>\n<p>🦄 I seriously considered defeat at that point. It just wasn't possible with the resources I could use while also meeting the minimum security constraints that would make it a viable POC. And I've been through all of these same hoops many times before. There's no give in the system, not when it comes to this.</p>\n</blockquote>\n\n<p>I'll save you the dramatics I toyed with over the next hour or so while I took a much needed break to think up any other possible thing I hadn't already thought to try in the last six months. Even the cobwebs had had a turn by then, so the future was very bleak for my POC. Then I had what I choose to label an epiphany (because insane was absolutely acceptable at this particular moment in time)—what if I didn't need to manage context at all? </p>\n\n<p>Don't worry. I acknowledged the terrible idea for what it was, and briefly considered the implications of trying to elicit a successful response from an LLM based on untouchable, un-monitor-able history alone. Ultimately, I accepted that given the current outlook, quality was imaginary anyway. Structured output had been a bad joke for hours already. <strong>But I was not letting Copilot win another round</strong>—I just needed one single <em>anything</em> to persist over the turn. Successfully. Just once. 🙏</p>\n\n<p>So I prompted Verdent to set up yet another complicated test script, but I silently accepted the fact that this was the last one. There were literally no more rocks to look under after this, short of talking Microsoft into letting me have the same level of access to Copilot that VS Code has currently. I wasn't likely to see success in either outcome. But Verdent set it up and I did the the copy-paste thing, held my breath and waited impatiently:</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F9hoaytrb6le3ojp65dye.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F9hoaytrb6le3ojp65dye.png%3Fv%3D2025\" alt=\"Verdent Deck wins the best AI Response Ever Award with Holy Shit It Works!\" loading=\"lazy\" width=\"474\" height=\"282\"></a></p>\n\n<blockquote>\n<p>🦄 <strong>Finally—Victory!</strong> Not even a tiny bit viable as a real solution, but I was thrilled! And with exactly four words Verdent overtakes all the other AI things and wins spotlight for the foreseeable future. 🤣🤣🤣 </p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"verdent-officialness\" href=\"#verdent-officialness\">\n  </a>\n  Verdent Officialness 📹\n</h2>\n\n<p>I'm not saying Verdent is the answer to every AI problem, but there's a few of them it handles spectacularly well. You can catch up on the specifics I left out in this video. </p>\n\n<p><iframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/ASLxlZfnesQ\" allowfullscreen loading=\"lazy\">\n</iframe>\n</p>\n\n<p>Also, you don't have to take my word for it. Check out <a href=\"https://www.stephanmiller.com/verdent-ai-when-your-ai-coding-assistant-finishes-before-you-can-get-coffee/\" target=\"_blank\" rel=\"noopener noreferrer\">Stephan Miller's version</a> of how things went for him during the preview.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"how-the-circuits-were-made-%EF%B8%8F\" href=\"#how-the-circuits-were-made-%EF%B8%8F\">\n  </a>\n  🛡️ How the Circuits Were Made ⚡️\n</h2>\n\n<p>Yes, AI helped, but the chaos is mine. Verdent took the punches, I wrote the words, and ChatGPT glued everything together. Resulting in a genuine recollection of stress-testing just how far a “preview” can bend before it squeaks.</p>\n\n",
    "description": "Previewing Verdent AI through Codeck turned into a full-tilt stress test: VS Code extension, multi-agent Deck, and plenty of chaos. Here’s what broke, what worked, and which parts outshined everything else—completely biased by my own strong opinions and nothing else.",
    "slug": "codeck-presents-verdent-ai-they-wanted-opinions-i-have-plenty-5ccl",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fzm7gcr68j37pa9ibgvep.jpg%3Fv%3D2025",
    "tags": [
      "tooling",
      "ai",
      "vscode",
      "productivity"
    ]
  },
  {
    "title": "Magical Coding Agent: The Ship-Ready Spellbook",
    "link": "https://dev.to/anchildress1/magical-coding-agent-the-ship-ready-spellbook-2mbf",
    "date": "2025-09-17T12:42:00Z",
    "content_html": "<blockquote>\n<p>🦄 So, you’ve flipped the switches, you’ve run a prompt (or ten), and now you’re staring at a Draft PR with an “AI” badge and a rainbow of checks. Perfect! This is the part where we stop hoping for magic and start running a clean, predictable review loop. 🪄</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fmw56t928yageigbj335o.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fmw56t928yageigbj335o.png%3Fv%3D2025\" alt=\"Human-Crafted, AI Edited Badge\" loading=\"lazy\" width=\"200\" height=\"200\"></a></p>\n\n\n<hr>\n\n<h2>\n  <a name=\"firstenable-the-cool-stuff\" href=\"#firstenable-the-cool-stuff\">\n  </a>\n  First—Enable the Cool Stuff 🧪\n</h2>\n\n<p>If you’re not already using GitHub’s <strong>Feature preview</strong>, fix that now. Head to <a href=\"http://github.com\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>, click your profile picture (upper-right), then <strong>Feature preview</strong>. You’ll see a modal like this:</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ft9wdqlcqon9rrj6hv5l0.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ft9wdqlcqon9rrj6hv5l0.png%3Fv%3D2025\" alt=\"Screenshot GitHub.com Feature preview window to enable public preview features\" loading=\"lazy\" width=\"800\" height=\"411\"></a></p>\n\n<p>Explore freely, but the one that matters most for Coding Agent reviews is <strong>New Files Changed Experience</strong>. It’s a serious upgrade for the diff view and PR flow. Sometimes the previews can be glitchy, but this one’s solid.</p>\n\n<blockquote>\n<p>🦄 Do the civic thing and send the dev team feedback after you’ve used it—even a quick high-five goes a long way!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"pr-reviews-with-coding-agent\" href=\"#pr-reviews-with-coding-agent\">\n  </a>\n  PR Reviews with Coding Agent 🧭\n</h2>\n\n<p>It’s the PR you already know, with a few Coding-Agent-specific quirks:</p>\n\n<ol>\n<li>\n<strong>You</strong> are requested as the prompter (and anyone in <code>CODEOWNERS</code> gets notified too).\n</li>\n<li>The PR opens as a <strong>Draft</strong> so you can pre-approve before looping in the team.\n</li>\n<li>Copilot creates branches under the <code>copilot/</code> prefix; fighting that is wasted energy.\n</li>\n<li>GitHub supports <strong>multiple assignees</strong> now—expect to see yourself as a co-author/assignee.\n</li>\n<li>There’s a <strong>new right-side box</strong> summarizing Copilot’s workflow activity. Mostly a time-saver that eliminates an extra click to the Actions page.</li>\n</ol>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fpe2p3naprxw0lrlix5fa.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fpe2p3naprxw0lrlix5fa.png%3Fv%3D2025\" alt=\"Screenshot GitHub.com PR review details page opened by Coding Agent\" loading=\"lazy\" width=\"800\" height=\"497\"></a></p>\n\n<p><strong>Reminder: your prompt == your code.</strong> That’s not a slogan; that’s <em>custody</em>.</p>\n\n<blockquote>\n<p>🦄 This is <strong>not</strong> “Copilot’s branch.” It’s <em>yours</em>. Pull it, tweak it, push, and re-prompt. Coding Agent will work from whatever you commit.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"seeing-errors\" href=\"#seeing-errors\">\n  </a>\n  Seeing Errors? 🧯\n</h2>\n\n<p>Copilot fills the PR description with its results (usually a checklist; or you could ask for emojis... guilty 🙋‍♀️). Read that first. Does its conclusion match your intent? That’s your earliest signal of how things really went.</p>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> If results drift, don’t just patch locally and move on. Take ~20 minutes and <strong>quiz Copilot on its thought process</strong> from your IDE. Troubleshoot instructions, improve the prompt, then re-run. Iteration <em>now</em> saves you ten runs later. If it’s minor, skip it, fix the branch and keep going.</p>\n</blockquote>\n\n<p>You might also see a firewall warning in the logs, which is the same kind of warning I mentioned was possible last week. Recently, there was a <strong>new Ubuntu runner</strong> hiccup that's causing firewall failures. You can fix that with a quick URL in the allow list or you can wait it out. It might already be a non-issue anyway. 🤷‍♀️</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"wheres-the-magic\" href=\"#wheres-the-magic\">\n  </a>\n  Where’s the “Magic”? 🪄\n</h2>\n\n<p>Short version: your <strong>Actions</strong> tab turns into a spellbook of what your prompt summoned—some charms pass, some fizzle, one asks for your approval like a polite familiar, and every now and then there's a glitter explosion. 🎉</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fugixhwegjs7pgzxxh190.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fugixhwegjs7pgzxxh190.png%3Fv%3D2025\" alt=\"Screenshot GitHub Actions after Coding Agent with passing, failures, and pending examples\" loading=\"lazy\" width=\"2646\" height=\"854\"></a></p>\n\n<p>From here I don’t chase every blinking glyph; I read the page like a logline.</p>\n\n<p>Reverse-chronological lists are sneaky. The real story starts at the <strong>bottom</strong>, so that’s where I scroll first. The <strong>first red</strong> I hit is the root cause; everything above it is ripple. I usually delete the later, noisy runs so my eyes stop lying to me. That single red is my anchor. Work from there.</p>\n\n<p>The <strong>yellow</strong> job with an <strong>Approve and run</strong> button—that’s GitHub’s protection gate. If the gate guards something I don’t need yet (say, a docs publish or a workflow that's probably not going to pass), I delete it straightaway. If it matters (lint, build, tests), I'll click through and approve. Treat approvals as <strong>wards enforced by repo rules</strong>, not as shame flags for the AI.</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fx6nshftjgyey8fy5rdv2.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fx6nshftjgyey8fy5rdv2.png%3Fv%3D2025\" alt=\"GitHub Actions Approve and run button for Coding Agent triggered workflows\" loading=\"lazy\" width=\"2444\" height=\"782\"></a></p>\n\n<p>The “magic” doesn't need a wand, just a <strong>cadence</strong>:</p>\n\n<p><em>prompt → runs → read from the first red → fix what actually broke → re-prompt with the thing I learned.</em></p>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> Beware of the \"glitter explosion\". Sometimes it's less colorful and more widespread sprinkles of <em>every single file</em> in your repo just changed. 😳</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"demystifying-coding-agent\" href=\"#demystifying-coding-agent\">\n  </a>\n  Demystifying Coding Agent 🧚‍♀️\n</h2>\n\n<p>This is one of my favorite Coding Agent touches: when the timeline gets fuzzy, open the <strong>Copilot</strong> workflow run and read the logs. The full, step-by-step output you’d expect in chat is right there in Actions—clear footprints from prompt to commit.</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fsztmqq6yynw96ffh8jfz.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fsztmqq6yynw96ffh8jfz.png%3Fv%3D2025\" alt=\"Screenshot GitHub Coding Agent Workflow Logs\" loading=\"lazy\" width=\"3472\" height=\"880\"></a></p>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> Open the run → expand the failing step → start at the first sign of red. Fastest path from mystery to fix. 🧭</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"reviewing-coding-agents-pr\" href=\"#reviewing-coding-agents-pr\">\n  </a>\n  Reviewing Coding Agent’s PR 🗂️\n</h2>\n\n<p>This is where the preview shines. Switch to <strong>Files changed</strong>—that’s the doorway to <strong>batching</strong>.</p>\n\n<ul>\n<li>Click <strong>Start a review</strong> and add line comments as <strong>Pending</strong>.\n</li>\n<li>After you <strong>Submit review</strong> with one or more comments including the <code>@copilot</code> prompt, Copilot treats the whole batch as <strong>one session / premium request</strong>. It only starts acting once comments are <strong>submitted</strong>, not while they’re pending.</li>\n</ul>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fhu2nw0n1wf3sr1fhogu0.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fhu2nw0n1wf3sr1fhogu0.png%3Fv%3D2025\" alt=\"Screenshot GitHub Coding Agent comments via current preview PR diff view\" loading=\"lazy\" width=\"1769\" height=\"698\"></a></p>\n\n<p>If you instead post on the <strong>Conversation</strong> tab with <code>@copilot</code>, each <strong>submitted top-level thread</strong> is queued up one after another. Either way, the agent will push commits back to <strong>the same draft PR</strong> as it addresses each comment.</p>\n\n<p>I leave myself notes in the PR, I talk to <code>@copilot</code> where it makes sense, batching in <strong>Files changed</strong> when I want one premium run; splitting threads in <strong>Conversation</strong> for simpler asks. Sometimes I pull it into VS Code, make the edits, and send it back to Coding Agent. <em>That’s</em> the difference between fireworks and a repeatable ritual.</p>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> Concurrency is per-PR; you can’t run two Coding Agent executions at the same time on a single PR. For real parallel work, use this <code>copilot/</code> branch as the base branch in a new prompt. Then merge the results here before going to <code>main</code>.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"not-loving-the-preview\" href=\"#not-loving-the-preview\">\n  </a>\n  Not Loving the Preview? 🧰\n</h2>\n\n<p>You can disable <strong>New Files Changed Experience</strong> in <strong>Feature preview</strong> if it’s not clicking. Once it graduates to GA, the toggle disappears—so if you truly dislike it, say so in feedback while the window’s open.</p>\n\n<blockquote>\n<p>🦄 My rule: don’t complain unless you’re also contributing to the fix.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"sounds-great-but-now-what\" href=\"#sounds-great-but-now-what\">\n  </a>\n  Sounds Great… But Now What? 🏁\n</h2>\n\n<p>Start small. Practice prompting on low-risk tasks. Coding Agent can generate <strong>any</strong> docs you need: README refreshes, contribution guides, tech overviews, <strong>user guides (ask for screenshots)</strong>, <strong>systems diagrams (ask for Mermaid)</strong>, and <strong>Gherkin</strong> features. Yes, I’ve tested them; yes, it works. Next week I’ll share the exact prompt patterns I lean on and how I keep runs aligned (and cheaper).</p>\n\n\n<hr>\n\n\n<div class=\"ltag__user ltag__user__id__3224358\" style=\"border-color:#5c246a;box-shadow: 3px 3px 0px #5c246a;\">\n    <a href=\"/anchildress1\" class=\"ltag__user__link profile-image-link\">\n      <div class=\"ltag__user__pic\">\n        <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F3224358%2F7f675c78-6aa0-466a-a5a7-c3e35440d53a.png\" alt=\"anchildress1 image\" loading=\"lazy\">\n      </div>\n    </a>\n  <div class=\"ltag__user__content\">\n    <h2>\n<a class=\"ltag__user__link\" href=\"/anchildress1\">Ashley Childress</a><button name=\"button\" type=\"button\" data-info='{\"className\":\"User\",\"style\":\"full\",\"id\":3224358,\"name\":\"Ashley Childress\"}' class=\"crayons-btn follow-action-button whitespace-nowrap c-btn--secondary fs-base follow-user\" aria-label=\"Follow user: Ashley Childress\" aria-pressed=\"false\">Follow</button>\n</h2>\n    <div class=\"ltag__user__summary\">\n      <a class=\"ltag__user__link\" href=\"/anchildress1\">SSE @ Home Depot. Specialize in distributed backend systems. Happy and content playing second - all of the freedom and none of the responsibility!</a>\n    </div>\n  </div>\n</div>\n\n\n\n<hr>\n\n<h2>\n  <a name=\"ais-are-benched\" href=\"#ais-are-benched\">\n  </a>\n  AIs Are Benched 💤\n</h2>\n\n<p>ChatGPT has been in time-out all week. Still, it nailed a color scheme and came up with a couple of killer playlist names, so I let it proofread. This is by far the most hand-written post I've made to date. Exhibit A for the thesis: <strong>AI edits. The voice is <em>mine</em>.</strong> 😇</p>\n\n<blockquote>\n<p>We do need to have a talk with OpenAI about butchering the poor guy’s arc though. I can’t deal with it like this. 🤨</p>\n</blockquote>\n\n",
    "description": "Flip the right GitHub previews, understand Copilot’s PR shape, batch your review prompts, and keep control of the code—practical notes with just a dash of wizardry.",
    "slug": "magical-coding-agent-the-ship-ready-spellbook-2mbf",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fpw10t4pdlmf0semwbyil.jpg%3Fv%3D2025",
    "tags": [
      "githubcopilot",
      "ai",
      "tutorial",
      "productivity"
    ]
  },
  {
    "title": "GitHub Coding Agent the Magical Autonomous AI: The Prequel",
    "link": "https://dev.to/anchildress1/github-coding-agent-the-magical-autonomous-ai-the-prequel-4h11",
    "date": "2025-09-10T11:52:42Z",
    "content_html": "<blockquote>\n<p>🦄  Alright, you made it! Thanks for stopping by. Yes, I’m a little late (again), but you’re getting the first edition of an in-depth Coding Agent adventure. Everything I wish someone had told me, plus all the misadventures that happen when you mix too much caffeine, not enough sleep, and a healthy dose of ‘what does this button do?’ energy.</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fa896t6c60qv8ri6ltm40.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fa896t6c60qv8ri6ltm40.png\" alt=\"Badge: This post was Human-Crafted and AI-Edited\" loading=\"lazy\" width=\"200\" height=\"200\"></a></p>\n\n\n<hr>\n\n<h2>\n  <a name=\"just-a-quick-headsup\" href=\"#just-a-quick-headsup\">\n  </a>\n  Just a Quick Heads-Up 📌\n</h2>\n\n<p><strong>Coding Agent is still a preview feature</strong> from GitHub and is subject to pre-license terms and frequent changes. Treat it like an enthusiastic beta test—one that keeps leveling up behind the scenes. This is <em>not</em> the tool to bet your workflow on (yet), but if you’re the adventurous type, you’ll have stories to tell. If not, don't worry! There's plenty of practical uses for it, too.</p>\n\n<blockquote>\n<p>🫠 I know you’re not ready to run your business on it. I’m not, either! That’s half the fun of it, though!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"so-what-is-coding-agent\" href=\"#so-what-is-coding-agent\">\n  </a>\n  So What Is Coding Agent? 🦾\n</h2>\n\n<p>“Agents do this.” “Agentic AI.” “Agent Mode.” “Agent search.” </p>\n\n<p>That one word is like an annoying little fly that simply will not leave the conversation, no matter how many times you try to bat it away. Except <em>this</em> agent you're going to want to hang around. </p>\n\n<p>In the IDE, you get <strong>Agent Mode</strong>—the friendly Copilot that does your bidding while you sit back and supervise. </p>\n\n<p>Its cousin is <strong>Coding Agent</strong>—that’s what happens when you hand Copilot the keys and let it go wild (within reason, I promise). This is a fully autonomous, sandboxed solution you send off into the wild with a single task, powered by a dash of machine learning or a generous helping of “I wonder what this shiny new button does...” and absolutely zero risk of burning down your repo. 🧯</p>\n\n<blockquote>\n<p>🦄 I'm willing to bet there's some magical things going on behind the scenes at GitHub when it comes to Coding Agent's future, too, because the updates are coming at a furious pace — quicker than I've ever seen this one updated before.</p>\n</blockquote>\n\n<p>The first thing people always ask: <strong>Can I trust it?</strong></p>\n\n<p>Absolutely! If you don’t believe me, just know that I tried every trick in the book to break it. All I got was some truly creative nonsense code, but the bot never colored outside the lines. 🖍️</p>\n\n<blockquote>\n<p>👌 That’s exactly what you want from an AI—brilliantly stubborn about staying in its lane, even when you're trying to tempt it off the rails.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"rapid-upgrades-amp-real-gotchas\" href=\"#rapid-upgrades-amp-real-gotchas\">\n  </a>\n  Rapid Upgrades &amp; Real Gotchas 🔄⚠️\n</h2>\n\n<p>You have to treat it like a beta test, really. Only this is a whole lot better than a beta test, because they've obviously been doing a ton of work on this guy. And not only that, it is changing <em>frequently</em>. Honestly, I was prepared to output a whole long list in this section, and I'm glad I checked first! </p>\n\n<p>Most of what <em>was</em> on <a href=\"https://docs.github.com/en/copilot/concepts/coding-agent/coding-agent\" target=\"_blank\" rel=\"noopener noreferrer\">their page</a>, even last week, has disappeared. So here are the things that <em>still</em> remain. And yes, most of these are true for Copilot whether it's in your IDE or out in the wild.</p>\n\n<ul>\n<li>Copilot can leak any information it has access to.\n\n<ul>\n<li>If you care, lock it down <em>now</em>. This includes chat in the IDE!</li>\n</ul>\n\n\n</li>\n\n<li>Vulnerable to prompt injection, especially from issues or pull requests.\n\n<ul>\n<li>GitHub filters out hidden characters, but nothing’s truly foolproof.</li>\n</ul>\n\n\n</li>\n\n<li>Every response to a prompt goes into a pull request, and nowhere else.</li>\n\n<li>Copilot might give you code that matches public repos—with zero references, even if you have the safety on.</li>\n\n<li>AI bias and weirdness? Still here, just as much as anywhere else.</li>\n\n</ul>\n\n<blockquote>\n<p>🦄 GitHub all but guarantees it won't nuke your repo. No official stamp of approval, but there are <em>a lot</em> of safety nets.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"safety-baked-in\" href=\"#safety-baked-in\">\n  </a>\n  Safety Baked In 🛡️\n</h2>\n\n<p>You don't have to panic when the cats run across your keyboard playing whatever it is cats play while racing through the house. No matter what chaos (or wildlife) hits your desk, Coding Agent will never touch your <code>main</code> branch directly. It’s hardwired to make its own “copilot/” branch for every adventure.</p>\n\n<ul>\n<li>Each branch is “copilot” branded—no hiding where the magic happened.</li>\n<li>Copilot only works in branches it created itself. (Your leftovers are safe. For now.)</li>\n<li>When it’s done, you get a draft pull request—with <em>your</em> name as co-author, so prompt responsibly!</li>\n<li>Those required peer reviews and checks that fail out of nowhere? Yup, all the fun repo rules still apply.</li>\n<li>Prompted it? Sorry, you can’t self-approve your own work. Consider it a code review, not a trust fall.</li>\n<li>If you want more than repo-level access, you’ll need to do the secret handshake (read: set up a PAT token and permissions).</li>\n</ul>\n\n<blockquote>\n<p>💡 ProTip: Coding Agent always charges exactly one premium request for every prompt. You can write a small novel if you want! Just know, it's also charging you for GitHub Actions minutes while Copilot is doing work—they add up faster than you think.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"set-yourself-up-for-success\" href=\"#set-yourself-up-for-success\">\n  </a>\n  Set Yourself Up for Success 🚀\n</h2>\n\n<p>Setting up a code-generating robot should be as easy as flipping a switch, right? Well... <em>almost</em>. In reality, it's more like trying to train a particularly smart, but very distractible, golden retriever.<br><br>\nGive it the right setup, the right instructions, and crystal-clear boundaries—or you’ll be chasing down its “creative solutions” all week.</p>\n\n<p>If you’ve already got instructions dialed in, you’re golden! If not, check out <a href=\"https://dev.to/anchildress1/everything-i-know-about-github-copilot-instructions-from-zero-to-onboarded-for-real-4nb0\">my post on custom instructions</a>, because <em>everything</em> works better when you lay the ground rules. </p>\n\n<p>If your instructions are for a different agent? Hang tight—you’ll want to read the next bit.</p>\n\n<blockquote>\n<p>🎟️ Side note: If you’re not using VS Code, you are absolutely missing out. If you want the shiniest new Copilot features, install Insiders too. Yes, it’s a little buggy, but you’ll never be bored!</p>\n</blockquote>\n\n<hr>\n<h2>\n  <a name=\"instructions-instructions-instructions\" href=\"#instructions-instructions-instructions\">\n  </a>\n  Instructions, Instructions, Instructions! 📝\n</h2>\n\n<p>As of last week, GitHub lets Coding Agent gobble up just about any custom instructions it can find in addition to the usual <code>.github/copilot-instructions.md</code> file. Now is a great time to start using <code>.github/instructions/*.instructions.md</code>, if you're not already. Think of it as a your laser-focused playbook pointing at exactly which files apply. Use YAML frontmatter with <code>applyTo</code> glob patterns, just like the <code>.gitignore</code>. </p>\n\n<p>For example:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code><span class=\"nn\">---</span>\n<span class=\"na\">applyTo</span><span class=\"pi\">:</span> <span class=\"s\">frontend/**/*</span>\n<span class=\"nn\">---</span>\n\n<span class=\"gh\"># Frontend Instructions</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Coding Agent will also happily read <code>AGENTS.md</code>, <code>CLAUDE.md</code>, and <code>GEMINI.md</code>. This is great for one-off tests, but if you have different instructions for different bots? Welcome to the \"land where instructions collide\"! If you’re not careful, your instructions can cross streams and leave you with some wild results. </p>\n\n<blockquote>\n<p>🦄 On the plus side, it’s a huge leap toward standardization that we desperately need. At the same time, it’s a whole new way to find edge cases nobody saw coming. </p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"settings-amp-environment-setup\" href=\"#settings-amp-environment-setup\">\n  </a>\n  Settings &amp; Environment Setup ⚙️\n</h2>\n\n<h3>\n  <a name=\"custom-firewall-rules\" href=\"#custom-firewall-rules\">\n  </a>\n  Custom Firewall Rules 🔥\n</h3>\n\n<p>Work in a locked-down org? Yeah, me too. Your firewall is probably less “security theater” and more “impenetrable fortress.” so don't be surprised if you get this message in your Coding Agent response:</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fi7cjfre4hc87dxg7urx6.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fi7cjfre4hc87dxg7urx6.png\" alt=\"Screenshot GitHub.com warning displayed when Coding Agent is blocked by the firewall\" loading=\"lazy\" width=\"800\" height=\"264\"></a></p>\n\n<p>Good news: You don’t have to turn it off—just add the right URLs to your Copilot allow list under repo settings.</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fbb9pklly2swwj3os8ft8.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fbb9pklly2swwj3os8ft8.png\" alt=\"Screenshot GitHub.com repo settings for configuring Coding Agent firewall allow list\" loading=\"lazy\" width=\"800\" height=\"501\"></a></p>\n\n<blockquote>\n<p>🦄 And yes, I forget this step <em>every single time</em> and wonder why nothing works for half an hour.</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"mcp-servers-playwright-integration\" href=\"#mcp-servers-playwright-integration\">\n  </a>\n  MCP Servers + Playwright Integration 🤖\n</h3>\n\n<p>By default, GitHub’s MCP <em>and</em> Playwright are ready to go—zero extra setup. If you need to talk to something outside the box (looking at you, Jira), add it under repo settings.</p>\n\n<p>For real magic, use <a href=\"https://github.com/upstash/context7\" target=\"_blank\" rel=\"noopener noreferrer\">Context7</a>. While it draws the line at spelunking in stack overflow, it's an absolute game-changer when it comes to literally every other form of documentation you could possibly need. Skeptical? Check <a href=\"https://docs.github.com/en/copilot/how-tos/use-copilot-agents/coding-agent/extend-coding-agent-with-mcp\" target=\"_blank\" rel=\"noopener noreferrer\">the official docs</a>.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight json\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"mcpServers\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"context7\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"http\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"url\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://mcp.context7.com/mcp\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"headers\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nl\">\"CONTEXT7_API_KEY\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"YOUR_API_KEY\"</span><span class=\"w\">\n      </span><span class=\"p\">},</span><span class=\"w\">\n      </span><span class=\"nl\">\"tools\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"get-library-docs\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"resolve-library-id\"</span><span class=\"p\">]</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>🦄 Context7 is a lifesaver, but be warned: unless you specify a library-id, response times can go from “speedy” to “waiting for a train that might never come.” I keep a list of IDs in the repo and reference it in the instructions. It saves you the cost of a lookup call every time Copilot needs to pull documentation. 😉</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"secrets-amp-more-settings\" href=\"#secrets-amp-more-settings\">\n  </a>\n  Secrets &amp; More Settings 🔑\n</h3>\n\n<p>MCP is plug-and-play, but by default, Copilot can only see the current repo. To grant it superpowers, make a PAT token starting with <code>COPILOT_MCP_</code> and add it to your Copilot environment variables.</p>\n\n<p>If you haven’t poked around GitHub environments before, now’s the time. There’s some weirdly powerful stuff in there! 🧙</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fshnmiji1cezi9m2f5yur.png%3Fv%3D2025\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fshnmiji1cezi9m2f5yur.png%3Fv%3D2025\" alt=\"Screenshot GitHub.com repo settings, Copilot environment\" loading=\"lazy\" width=\"2294\" height=\"1034\"></a></p>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> Name your secret wrong and Coding Agent just shrugs and ignores you. And yes, it took me way longer than it should have to figure that one out!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"customizing-the-workspace\" href=\"#customizing-the-workspace\">\n  </a>\n  Customizing the Workspace 🧑‍💻\n</h2>\n\n<p>Do you have custom workflows that make it seem like your AI’s about to start freelancing for a competition? Then you’ll want the Copilot Steps workflow—your way to build a fully custom, hands-off dev environment for the AI.</p>\n\n<ul>\n<li>The file must be <code>.github/workflows/copilot-setup-steps.yml</code>\n</li>\n<li>The job? Always <code>copilot-setup-steps</code>, or it’s invisible.</li>\n<li>You can’t change everything; only certain fields count (steps, permissions, runs-on, container, services, snapshot, timeout-minutes). Anything else, and Copilot pretends like it's not even there.</li>\n</ul>\n\n<p>Here’s a sample workflow (straight from <a href=\"https://docs.github.com/en/copilot/how-tos/use-copilot-agents/coding-agent/customize-the-agent-environment\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub’s docs</a>):<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight yaml\"><code><span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">Copilot</span><span class=\"nv\"> </span><span class=\"s\">Setup</span><span class=\"nv\"> </span><span class=\"s\">Steps\"</span>\n\n<span class=\"c1\"># Automatically run the setup steps when they are changed to allow for easy validation, and</span>\n<span class=\"c1\"># allow manual testing through the repository's \"Actions\" tab</span>\n<span class=\"na\">on</span><span class=\"pi\">:</span>\n  <span class=\"na\">workflow_dispatch</span><span class=\"pi\">:</span>\n  <span class=\"na\">push</span><span class=\"pi\">:</span>\n    <span class=\"na\">paths</span><span class=\"pi\">:</span>\n      <span class=\"pi\">-</span> <span class=\"s\">.github/workflows/copilot-setup-steps.yml</span>\n  <span class=\"na\">pull_request</span><span class=\"pi\">:</span>\n    <span class=\"na\">paths</span><span class=\"pi\">:</span>\n      <span class=\"pi\">-</span> <span class=\"s\">.github/workflows/copilot-setup-steps.yml</span>\n\n<span class=\"na\">jobs</span><span class=\"pi\">:</span>\n  <span class=\"c1\"># The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.</span>\n  <span class=\"na\">copilot-setup-steps</span><span class=\"pi\">:</span>\n    <span class=\"na\">runs-on</span><span class=\"pi\">:</span> <span class=\"s\">ubuntu-latest</span>\n\n    <span class=\"c1\"># Set the permissions to the lowest permissions possible needed for your steps.</span>\n    <span class=\"c1\"># Copilot will be given its own token for its operations.</span>\n    <span class=\"na\">permissions</span><span class=\"pi\">:</span>\n      <span class=\"c1\"># If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.</span>\n      <span class=\"na\">contents</span><span class=\"pi\">:</span> <span class=\"s\">read</span>\n\n    <span class=\"c1\"># You can define any steps you want, and they will run before the agent starts.</span>\n    <span class=\"c1\"># If you do not check out your code, Copilot will do this for you.</span>\n    <span class=\"na\">steps</span><span class=\"pi\">:</span>\n      <span class=\"pi\">-</span> <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">Checkout code</span>\n        <span class=\"na\">uses</span><span class=\"pi\">:</span> <span class=\"s\">actions/checkout@v5</span>\n\n      <span class=\"pi\">-</span> <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">Set up Node.js</span>\n        <span class=\"na\">uses</span><span class=\"pi\">:</span> <span class=\"s\">actions/setup-node@v4</span>\n        <span class=\"na\">with</span><span class=\"pi\">:</span>\n          <span class=\"na\">node-version</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">20\"</span>\n          <span class=\"na\">cache</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">npm\"</span>\n\n      <span class=\"pi\">-</span> <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">Install JavaScript dependencies</span>\n        <span class=\"na\">run</span><span class=\"pi\">:</span> <span class=\"s\">npm ci</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>🦄 This actually works. I know, I was shocked too. Get creative with it—multiple repos, wild setups, whatever. Let me know how it goes!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"wait-thats-it\" href=\"#wait-thats-it\">\n  </a>\n  Wait, That’s It? 🤔\n</h2>\n\n<p>Yeah, I know—you expected another ten pages. But in the time it took me to write this, argue with ChatGPT <em>and</em> Gemini, play with Leonardo, and still make it to work on time? GitHub probably pushed three more features and fixed half the bugs I was going to joke about anyway.</p>\n\n<p>So instead, here are the weirdest, most useful things I've learned about Coding Agent so far:</p>\n\n<ol>\n<li>\n<strong>Can I change the model?</strong> Nope. Coding Agent = Claude Sonnet 4. You can't change it, but at least they picked a good model for the job.</li>\n<li>\n<strong>How much does it cost?</strong> Every prompt equals exactly one premium, plus GHA minutes equal to run time.</li>\n<li>\n<strong>How should I review the PR?</strong> Add comments in the <code>Files changed</code> tab so they’re submitted together as a batch. One batch is also equal to one premium request 😀 Anywhere else, go nuts giving it all the information you can.</li>\n<li>\n<strong>Why won’t it work on my PR?</strong> It only works on PRs and branches it created with the “copilot” prefix. Start there if you want to use it.</li>\n<li>\n<strong>Why won’t it respond?</strong> Use <code>@copilot</code> in <em>every</em> comment. Still nothing? Don’t spam—try a normal comment as a reply and watch for the eyes emoji 👀.</li>\n<li>\n<strong>Workflow stuck?</strong> Be patient. Coding Agent likes to take coffee breaks between sprints. If you’re done waiting, you can cancel it—it won’t break anything, but you'll probably lose all the work it's done so far.</li>\n<li>\n<strong>How good are the results?</strong> It’s only as good as your prompt. If you want A+ output, nail the instructions and follow <a href=\"https://dev.to/anchildress1/github-copilot-reusable-prompts-part-2-walkthrough-real-examples-17mh#personal-guide-to-prompting-prior\">PRIOR</a>. (you can skip the P, unless you’re feeling dramatic.)</li>\n</ol>\n\n<blockquote>\n<p>🦄  If you’re stuck, confused, or just want to swap horror stories, leave a comment or DM me anywhere. It may take me a bit, but I’ll answer (eventually).</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-robots-helped-but-less-than-usual\" href=\"#the-robots-helped-but-less-than-usual\">\n  </a>\n  🛡️ The robots helped, but less than usual.\n</h2>\n\n<p>ChatGPT and Gemini are both in the time out corner. No Copilots were harmed in the making of this post—but there <em>were</em> some loud sighs, at least one new colorful expression, and a mild existential crisis while I debated the sanity of my choices.</p>\n\n",
    "description": "Everything you need to know about setting up GitHub's Coding Agent for best results—setup, advanced tricks, and gotchas from real stories and wins. Chaos, fun, and no filter.",
    "slug": "github-coding-agent-the-magical-autonomous-ai-the-prequel-4h11",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Foke78uikbtlzlawras6r.png%3Fv%3D2025",
    "tags": [
      "githubcopilot",
      "ai",
      "tutorial",
      "productivity"
    ]
  },
  {
    "title": "Can We Set the Record Straight? AI, Content, and a Bit of Sanity 🙏",
    "link": "https://dev.to/anchildress1/can-we-set-the-record-straight-ai-content-and-a-bit-of-sanity-1inj",
    "date": "2025-09-07T19:03:54Z",
    "content_html": "<blockquote>\n<p>🦄 I survived the hackathon, caught up on sleep (mostly), and the AI debate? Still going strong—at least in my head. If my last posts seemed like a soapbox, let’s try a new approach. This isn’t just for the devs or the writers—it’s anyone online trying to build, break, or create something honest.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"background-because-the-story-matters\" href=\"#background-because-the-story-matters\">\n  </a>\n  Background (because the story matters) ✍️\n</h2>\n\n<p>Here’s what gets me: <strong>people still treat all AI content the same</strong>—whether it’s auto-generated fluff or a post like this, with actual thought, stubbornness, and a few creative detours baked in. I use AI as a tool, but I’m the one steering; it’s got my fingerprints and my voice all over it because I wrote intentional AI instructions.</p>\n\n<blockquote>\n<p>🙄 At least, unless GPT-5 has decided to rewrite the rules again. Then it takes a bit of wrangling first.</p>\n</blockquote>\n\n<p>The sad part? Both the creative writing and the fluff get the same knee-jerk reaction. I’m not worried about myself—I know how to handle criticism and don’t mind being upfront. But not everyone’s ready to jump into the ring, and a lot of good AI assisted work gets buried because creators just don’t want to deal with the drama that comes with disclosure.</p>\n\n<p>Hang out in the writers+AI corners of the internet for five minutes and you’ll hear: “Just don’t disclose—why invite the hassle?” That’s not me. I’d rather own it, even if it means the occasional argument. </p>\n\n<blockquote>\n<p>🥊 Integrity first, sparring match second—and my matches usually come with a grin and a little happy dance.</p>\n</blockquote>\n\n<p>So let’s walk through what we <em>actually</em> know about AI, what we’re still sorting out, and how we might just learn to disagree without burning the place down before it's sorted. 🔥👩‍🚒</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"1-whos-really-at-the-table\" href=\"#1-whos-really-at-the-table\">\n  </a>\n  1. Who’s Really at the Table? 🗝️\n</h2>\n\n<p>Platforms, publishers, workplaces, classrooms, and every Discord mod with a badge gets to set their own boundaries. But the thing that always gets me isn’t <em>if</em> they do it, it’s <em>how</em>. When ‘boundaries’ become a one-size-fits-all firewall, that’s where I have a problem.</p>\n\n<p>For example: KoFi’s Discord rules are direct—</p>\n\n<blockquote>\n<p>“All forms of AI-generated content (eg. art/music/writing/ChatGPT), including links to such content, and discussion thereof is not allowed in this server.”</p>\n</blockquote>\n\n<p>So, of course, I checked. “Does that mean <em>my</em> stuff is banned?” Turns out, nope. As long as I skip the preview images, we’re golden. Honest, straightforward, no drama. <em>Awesome.</em></p>\n\n<p>Medium, though? (If you missed the post, <a href=\"https://dev.to/anchildress1/medium-and-the-blanket-ai-ban-2cni\">catch up here</a>.) They talked about gray areas... <em>then</em> built a giant penalty box for every AI-assisted creator, regardless of intent or craft. </p>\n\n<blockquote>\n<p>🎵 For me, that’s about as thoughtful as banning all musicians because someone played Wonderwall one too many times at open mic night.</p>\n</blockquote>\n\n<p>I can’t rewrite the rulebook, but I can refuse to act like these blanket rules don’t erase good, thoughtful people. Those of us who are trying to follow guidelines that don't really exist—and perhaps set a few new ones in the process—don't deserve to have our work lumped together with the slop.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"2-ai-content-%E2%89%A0-equal\" href=\"#2-ai-content-%E2%89%A0-equal\">\n  </a>\n  2. AI Content ≠ Equal 🥚\n</h2>\n\n<p>There’s AI content, and then there’s <em>AI content</em>. Some of it is shallow, spammy filler that's cranked out for clicks with zero thought or care. The rest of us? It’s a tool wielded well: organized, rewritten, and given a real voice. </p>\n\n<p><strong>Bad actors weren’t invented along with AI; the existing ones just found a different shortcut.</strong></p>\n\n<p>There are tools out there—<a href=\"https://www.zerogpt.com/\" target=\"_blank\" rel=\"noopener noreferrer\">ZeroGPT</a> and friends—that claim they’ll catch every AI post. But here’s the thing: I’ve actually tested this. I picked three or four posts at random, ran them through different detectors, and my highest score was 18%. </p>\n\n<blockquote>\n<p>🦄 It’s not because I’m hiding anything or using some secret hack. <strong>It’s the process.</strong> </p>\n</blockquote>\n\n<p>I dictate most posts on the fly. Then I hand it off to the AI—to organize, to reword, sometimes to rewrite completely—but always under <em>my</em> set of rules. And it never, ever ends as a copy-paste job. I’m editing the whole time. There’s always a human—<em>me</em>—in the loop, every single time.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"3-will-ai-improve-productivity\" href=\"#3-will-ai-improve-productivity\">\n  </a>\n  3. Will AI Improve Productivity? 🏃‍♀️\n</h2>\n\n<p>Sometimes. Sometimes Not. </p>\n\n<p>There’s always a promise: AI will make you ten times faster, smarter, better, insert-your-buzzword-here. And maybe it’s true... <em>sometimes</em>. Documentation? Absolutely. I can roll out a draft in seconds—clean, organized, done. Drafting proposals? Don’t even get me started; I’m pretty sure the principals are getting sick of how fast I can toss together a pitch. </p>\n\n<blockquote>\n<p>😇 If they aren’t yet, give it time because I have more.</p>\n</blockquote>\n\n<p>But sometimes AI just saves you from the jobs nobody wants. Like, digging through a decade’s worth of legacy code for a spike because it’s finally time to rebuild that app and nobody remembers what it's actually doing or why it was even there to begin with. </p>\n\n<blockquote>\n<p>🫤 I know <em>I</em> don’t want to do that. <em>You</em> don’t want to do that. <strong><em>Nobody</em> wants to do that.</strong> AI doesn't care and is pretty good at it! </p>\n</blockquote>\n\n<p>Honestly, sometimes it sees connections I might miss. But that doesn’t mean you can skip the whole process and trust whatever it finds. You still have to check. Maybe it saves you three days in the depths of the code mines, but <strong>the human review isn’t optional.</strong></p>\n\n<p>Still, not every job should go to the bots, either. That gnarly production bug, that support ticket, the customer call—they all need a human. AI can be a superpower, but it’s not meant to replace the parts of your work that need actual judgment, empathy, or the magic of figuring it out together.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"4-ai-is-not-bad-when-you-use-it-like-a-pro\" href=\"#4-ai-is-not-bad-when-you-use-it-like-a-pro\">\n  </a>\n  4. AI Is Not Bad (When You Use It Like a Pro) 👨‍🚀\n</h2>\n\n<p>AI isn’t some villain lurking in your workflow. It’s a force multiplier. Used right, it makes your voice sharper and your edits faster—used wrong, it just adds to the noise.</p>\n\n<p>That’s why every single commit I make defines exactly how much AI was involved and my posts are going to start wearing an “AI-Edited” badge. Not because someone told me to. Not as a disclaimer. <strong>Because <em>somebody</em> has to be willing to say there's a difference between generated and assisted.</strong></p>\n\n<p>This is one version (and yes—Leonardo made them):</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fbsdadww5m402rwyy355b.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fbsdadww5m402rwyy355b.png\" alt=\"Human-Crafted &amp;&amp; AI-Edited badge\" loading=\"lazy\" width=\"200\" height=\"200\"></a></p>\n\n<blockquote>\n<p>🦄 And if you want to use the badge yourself, or hand it off to a friend? Don’t copy this little screenshot—the full one (plus a couple others) are hanging out <a href=\"https://github.com/anchildress1/checkmark-icons/tree/gh-pages/human-ai-badges\" target=\"_blank\" rel=\"noopener noreferrer\">in my repo</a>. Help yourself!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"5-ai-code-is-ai-content-writers-you-too\" href=\"#5-ai-code-is-ai-content-writers-you-too\">\n  </a>\n  5. AI Code Is AI Content (Writers, You Too!) 💾\n</h2>\n\n<p>Here’s my rule: disclosure, plain and simple:</p>\n\n<ul>\n<li>Docs and posts: Add a simple footer like “This was generated with the help of AI tool.”</li>\n<li>Code or technical writing: Commit with one of 3 different footers in the commit message:\n\n<ul>\n<li>\n<code>Generated-with: AI tool</code> means AI did most or all of the work</li>\n<li>\n<code>Co-authored-by: AI tool</code> means the content is 50/50</li>\n<li>\n<code>Assisted-with: AI tool</code> means AI helped some, but not close to half</li>\n</ul>\n\n\n</li>\n\n</ul>\n\n<blockquote>\n<p>💡 I started out using an email address in the commits, too — that <em>I thought</em> I was making up—until some random app popped up as a contributor in my repo. <em>Not cool...</em> 😒</p>\n</blockquote>\n\n<p>This isn’t about checking boxes. It’s about giving credit, setting an example, and actually being transparent with yourself and the future people who end up needing it. </p>\n\n<blockquote>\n<p>😈 Besides, putting one more stamp on a long list of responsible AI use-cases puts a dent in the endless cycle of AI panic and the-world-is-ending doom speak.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"6-and-what-about-ai-images-or-music\" href=\"#6-and-what-about-ai-images-or-music\">\n  </a>\n  6. And What About AI Images or Music? 🎨\n</h2>\n\n<p>Same rules, different paint. Some artists pour weeks or months into training models on their own art. (I still haven’t managed to train mine and it's been over a month!) Others take the shortcut: punch in a sentence or two, let the AI “enhance” it, and call it done. </p>\n\n<blockquote>\n<p>❓ Are they copying someone’s style? I dunno—<em>maybe</em>? Should they? I honestly don’t know...</p>\n</blockquote>\n\n<p>Same applies here as does with writing: <strong>artists absolutely have the right to protect their work.</strong> But what does that look like, practically? Truth is we don’t really know yet. The laws are behind while the tech is still racing ahead. We’ll catch up. Maybe not soon enough, but eventually, we will.</p>\n\n<blockquote>\n<p>🦄 I just hope that when we get there, there’s at least <em>one person</em> in the room who actually understands what’s happening—and what it looks like behind the scenes. <strong>We absolutely need better laws,</strong> but <strong>we do not need people throwing broad rules at some conjured image of “AI training.”</strong> Whatever it ends up being, honesty and fact need to come first.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"7-is-ai-stealing-no-but\" href=\"#7-is-ai-stealing-no-but\">\n  </a>\n  7. Is AI “Stealing”? (No, but...) 🧬\n</h2>\n\n<p>This is where I dig in my heels. No, using AI-generated content is <em>not</em> stealing—<em>unless</em> you’re actively pretending someone else’s work is your own or ignoring copyright on purpose. However, “publicly available” isn’t the same as “public domain,” and <strong><em>nobody</em> should lose credit for their work.</strong></p>\n\n<p>Should AI companies pay for certain data? Probably! Should writers and artists get a say? Of course. But “all AI is theft” is just as over-simplified as “all creators are saints.” </p>\n\n<blockquote>\n<p>🫡 Guess what? Real life and the world around us is messy—AI included. We need smarter laws, better tools, <strong>and way less finger-pointing.</strong></p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"updated\" href=\"#updated\">\n  </a>\n  UPDATED\n</h3>\n\n\n<div class=\"crayons-card c-embed text-styles text-styles--secondary\">\n    <div class=\"c-embed__content\">\n        <div class=\"c-embed__cover\">\n          <a href=\"https://blog.cloudflare.com/introducing-pay-per-crawl/\" class=\"c-link align-middle\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img alt=\"\" src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fcf-assets.www.cloudflare.com%2Fzkvhlag99gkb%2FSis6B6hN1eqpcn99ydA8g%2F595841749d6ddf0825a7ec1b68161dd9%2FIntroducing_Pay_per_crawl-_enabling_content_owners_to_charge_AI_crawlers_for_access-OG.png\" height=\"418\" loading=\"lazy\" class=\"m-0\" width=\"800\">\n          </a>\n        </div>\n      <div class=\"c-embed__body\">\n        <h2 class=\"fs-xl lh-tight\">\n          <a href=\"https://blog.cloudflare.com/introducing-pay-per-crawl/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"c-link\">\n            Introducing pay per crawl: Enabling content owners to charge AI crawlers for access\n          </a>\n        </h2>\n          <p class=\"truncate-at-3\">\n            Pay per crawl is a new feature to allow content creators to charge AI crawlers for access to their content. \n          </p>\n        <div class=\"color-secondary fs-s flex items-center\">\n            <img alt=\"favicon\" class=\"c-embed__favicon m-0 mr-2 radius-0\" src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fblog.cloudflare.com%2Fimages%2Ffavicon-32x32.png\" loading=\"lazy\" width=\"32\" height=\"32\">\n          blog.cloudflare.com\n        </div>\n      </div>\n    </div>\n</div>\n\n\n<p>This is <em>brilliant</em>! HTTP 402 may come back from the forgotten realms of the internet. I've seen other sites like <a href=\"https://www.credtent.org\" target=\"_blank\" rel=\"noopener noreferrer\">Credtent.org</a> offer similar setups, as well. Sounds like a solution I can live with... what about you?</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"8-i-cant-stay-quiet-and-neither-should-you\" href=\"#8-i-cant-stay-quiet-and-neither-should-you\">\n  </a>\n  8. I Can’t Stay Quiet (and Neither Should You) 🛠️\n</h2>\n\n<p>I can't just sit back and watch the insanity and <em>not</em> throw my two cents in. <strong>We’re all still figuring this thing out.</strong> Some jumped in headfirst, others are barely dipping a toe. But we won’t get anywhere by shutting down the conversation or tuning each other out—<strong>if there’s a better way, we’re gonna have to find it together.</strong></p>\n\n<p>So, did I miss anything? Add your take below—what’s a rule, reality, or tip about AI you wish more people got right? Comment, DM, or write your own story. I’ll keep this list updated. </p>\n\n<blockquote>\n<p>🙏 And please, when it comes up again, don’t leave yourself (or anyone else) out of the conversation. 🫶</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"this-post-was-aiedited-humanapproved-and-finished-before-the-next-ai-ban-drops\" href=\"#this-post-was-aiedited-humanapproved-and-finished-before-the-next-ai-ban-drops\">\n  </a>\n  🛡️ This post was AI-edited, human-approved, and finished before the next AI ban drops.\n</h2>\n\n<p>Nuance is mandatory, drama is optional, and the sarcasm is included free of charge.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"this-posts-zerogpt-score\" href=\"#this-posts-zerogpt-score\">\n  </a>\n  This Post's ZeroGPT Score 🥳\n</h2>\n\n<p>More out of curiosity than anything else...</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fay2qbjn9fmkj9ro2y9d4.png%3Fv%3D2%2520%3D100x100\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fay2qbjn9fmkj9ro2y9d4.png%3Fv%3D2%2520%3D100x100\" alt=\"ZeroGPT Score of this post is 10.32% AI\" loading=\"lazy\" width=\"638\" height=\"358\"></a></p>\n\n",
    "description": "A story-driven look at AI content, bans, why process matters, and why a little honesty beats a blanket rule every time.",
    "slug": "can-we-set-the-record-straight-ai-content-and-a-bit-of-sanity-1inj",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fd5hh8gwj80nin1gj3ur7.png%3Fv%3D25",
    "tags": [
      "ai",
      "writing",
      "ethics",
      "devrel"
    ]
  },
  {
    "title": "The Hackathon I Swore Off — and the Exhaustion That Mostly Compiled",
    "link": "https://dev.to/anchildress1/the-hackathon-i-swore-off-and-the-exhaustion-that-mostly-compiled-c4l",
    "date": "2025-09-03T12:50:25Z",
    "content_html": "<blockquote>\n<p>🦄 I know today is technically Copilot day, but honestly? I don't have space for another technical thought in my head right now. In case you missed it, I decided on a whim to submit <a href=\"https://dev.to/anchildress1/underfoot-the-chatpot-for-hidden-places-and-why-i-dont-do-hackathons-2684\">a project in the n8n/BrightData hackathon</a>. </p>\n\n<p>By itself, it's not saying much. But lifting a 10-year self-imposed hackathon ban is not a light thing for somebody whose version of all-in means every last ounce of everything I had was put into that one project over those two weeks.</p>\n\n<p>So instead of technical today, <strong>I've decided it's story time</strong> 😇 Welcome to my only <em>slightly</em> dramatized retelling of true events. I'll explain why I don't do hackathons plus the thing that ultimately changed my mind.</p>\n\n<p><strong>So, pull up a chair. I’ll start at the beginning of the end.</strong> 🪑🎢</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"baby-bottles-and-fry-baskets\" href=\"#baby-bottles-and-fry-baskets\">\n  </a>\n  Baby Bottles and Fry Baskets 👶🍔\n</h2>\n\n<p>In 2008, my son was born. <strong>That was the time warp.</strong> Just a jump to the left, a step to the right, and suddenly my life wasn’t <em>mine</em> anymore. </p>\n\n<blockquote>\n<p>😵‍💫 Parenthood is the only <em>true</em> overnight shift. One day you’re yourself, the next you’re permanently on call for a 7lb CEO who screams about <em>everything</em>.</p>\n</blockquote>\n\n<p>At that point I was still sticking it out in restaurants — where I'd been for close to ten years. It was long hours, long drives, and I had very little to show for it. </p>\n\n<p>By January 2011, I was running on fumes and sheer force of will. <strong>Then the snowstorm hit.</strong> Everything was frozen, and there I was, <em>alone</em>, opening the restaurant. I ran the whole place myself: front line, back line, fry station, drive-thru, you-name-it.</p>\n\n<blockquote>\n<p>🦄 <em>\"Can't\"</em> has never been in my vocabulary. By all accounts I should have stayed home that day, but I wasn't about to let a little ice stop me from doing my job. The fact that I was alone was beyond my control. So I did what I knew to do, in any way I could make it happen.</p>\n</blockquote>\n\n\n<hr>\n\n<p>People were waiting at least thirty minutes, <em>minimum</em>, because one person can only move so fast, but the line just kept coming. At some point in the middle of that non-stop chaos, I looked up and saw my drive-thru customers standing inside. </p>\n\n<blockquote>\n<p>🚦🤷‍♀️ Guess they’d been stuck out there long enough because before I knew what happened, a small group had collected in the lobby watching me sprint around like it was a personal comedy show.</p>\n</blockquote>\n\n<p>In the moment, we made the best of it. We laughed, we joked, and I ran my ass off. Restaurants aren’t designed to run solo, but I made it work.</p>\n\n<p><strong>That day I remember clearly</strong> — the day the rest of the world was shut down and I realized the joke was on me. There I was running a one-woman circus while everyone else got to stay home. </p>\n\n<p>I asked myself one question: <em>What exactly are you doing here?</em></p>\n\n<p>A few months later, <strong>I finally walked away, for good.</strong></p>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-student-loan-circus\" href=\"#the-student-loan-circus\">\n  </a>\n  The Student Loan Circus 🎓💸\n</h2>\n\n<p>That summer, I went back to school. Student loans as the <em>only</em> source of income — my lifeline. Most days, daycare covered things. Some days it didn’t.</p>\n\n<p>And there I was: the <em>older</em> student dragging a kid into class, <strong>existing in a universe completely separate from everyone else.</strong> </p>\n\n<blockquote>\n<p>👟 Their concerns were about parties and weekend plans. Mine were homework checks, missing shoes, and bills that didn’t pay themselves. </p>\n</blockquote>\n\n<p><em>That</em> was the dichotomy of my reality back then. My life just didn't fit into their box. But by junior or senior year, I’d settled into a rhythm.</p>\n\n<p><strong>Then came the group project.</strong></p>\n\n<p>The monster assignment. Sixty percent of the final grade hanging over all of us. The professor’s grand strategy? Hands up, step back, “do your thing.” <em>Great...</em></p>\n\n<blockquote>\n<p>🦄 Seriously, it was chaos dressed up as independence. Pick your projects, pick your teams, no submissions accepted after the deadline for <em>any</em> reason. I should have known hope was limited at that point.</p>\n</blockquote>\n\n\n<hr>\n\n<p>That’s when I suddenly became popular. The same people who’d barely looked my way all semester were now lining up to hitch their wagon to my grade. <strong>And of course, they wanted me to lead.</strong> Leadership wasn’t an issue — I’d been doing that for <em>years</em>. </p>\n\n<blockquote>\n<p>🤨 So y’all want me in charge? <em>Fine.</em> But here are the ground rules: I’m not guessing, we’re not bouncing dates around, and certain nights are simply not happening. We meet weekly. We get it done. We move on. Period.</p>\n</blockquote>\n\n<p>Everyone nodded, even the professor (who I involved early on just in case things went sideways) gave me the “sounds good” approval. For a moment, I actually thought we had a workable agreement. <strong>I was wrong.</strong></p>\n\n\n<hr>\n\n<p>What followed was six weeks of circus hell. I brought calendars, agendas, timelines. They brought excuses. Too busy. Wrong night. Maybe later. </p>\n\n<blockquote>\n<p>😖 I've never been so amazed at people claiming to work! They shuffled meetings around like rearranging the board was the same thing as playing the game. And then acted like they deserved extra credit for their trouble.</p>\n</blockquote>\n\n<p>Meanwhile, <strong>my reality lived in another universe</strong>: making sure homework got done, hunting down missing shoes, figuring out dinner on nights when the loans had already run dry.</p>\n\n<p>The gap between what they thought mattered and what I was actually carrying was ludicrous.  </p>\n\n<blockquote>\n<p>🤯 To this day, I still don’t know what half of them were even trying to say. All I knew was <em>project due</em> and <em>kid at home</em>. Anything beyond that simply didn't factor into the equation.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-kicker\" href=\"#the-kicker\">\n  </a>\n  The Kicker 💥\n</h2>\n\n<p>When I thought <em>maybe</em> I could finally breathe, the peer reviews landed:</p>\n\n<ul>\n<li>\n<strong>Failure to communicate.</strong> <em>Really?</em> I had a plan mapped out since day one. Emails and group texts were constantly ignored, but somehow that's <em>my fault?</em>\n</li>\n<li>\n<strong>Doesn’t work well with teams.</strong> Teams that don’t show up aren’t teams. At that point it’s just me, and if it’s me, I get it done. That’s the whole story.</li>\n<li>\n<strong>Can’t handle pressure.</strong> My favorite. </li>\n</ul>\n\n<blockquote>\n<p>🔥 You want pressure? I’ll let you babysit my kid, pay my bills, worry about classes and day care, and <em>then we’ll talk about pressure.</em></p>\n\n<p>The fact that your last-minute date took you away from the project? That’s not pressure. <em>That’s stupidity</em> and not my problem.</p>\n</blockquote>\n\n<p><strong>I was livid.</strong> The immaturity was staggering. This was not the class I thought I’d signed up for. So I marched back to the professor — the same one who’d nodded at my ground rules like they were gospel — expecting backup.</p>\n\n<p>Instead, I got a <em>“solution.”</em> Maybe, he suggested, I should try a group activity. 🤯😱🤬</p>\n\n<p><strong>Translation: hackathon.</strong></p>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-hackathon-i-swore-off\" href=\"#the-hackathon-i-swore-off\">\n  </a>\n  The Hackathon I Swore Off 🍕💻\n</h2>\n\n<p>A hackathon? Because obviously the cure for dealing with people who never show up is to lock me in a room with them for forty-eight hours straight. <em>Brilliant.</em></p>\n\n<p><strong>But this wasn’t optional.</strong> Those peer reviews weren’t <em>just comments</em>, they were baked into the grade. My arguments didn’t matter. </p>\n\n<blockquote>\n<p>😑 Agree or not, I had to make up for the fact that my so-called “team” — that useless cluster of hangers-on and deadweights — had <em>once again</em> barged into my life and left me holding the bag.</p>\n</blockquote>\n\n<p>And the price this time was a whole weekend I didn’t have to spare.</p>\n\n\n<hr>\n\n<p><strong>So I did it.</strong> Two days in the lab, stale pizza boxes stacked like trophies, Mountain Dew flowing like tap water. The twenty-year-olds bounced around as if sleep was optional, while I was counting babysitting hours like poker chips and wondering how many cups of coffee equal a nap.</p>\n\n<blockquote>\n<p>🌪️ It was sheer chaos, and not the good kind.</p>\n</blockquote>\n\n<p>I got to know people, sure, maybe even understood them a little better. But I was exhausted and my price was sitting at home without me while I watched people bluff their way through the night.</p>\n\n<p>By the end I could barely remember my own name. <strong>And I walked out swearing: <em>never again</em>.</strong> Not unless I could give it one hundred percent — which I knew I couldn’t, not while a six-year-old still needed me every moment of every day.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"until-now\" href=\"#until-now\">\n  </a>\n  Until Now 🔄⏳\n</h2>\n\n<p>Fast-forward to 2025. My son’s grown, living with his dad, and for the first time in nearly twenty years, I have time that actually <em>belongs to me</em>. Then along comes this challenge: n8n, agents, scrapers — basically my bucket list wrapped in one neat little package.  </p>\n\n<p><strong>So I broke my rule.</strong> WakaTime says I spent more than a hundred hours in two weeks, and that doesn’t even count the black hole of time lost to the n8n UI — or my day job that doesn’t allow time off for my randomness (no matter how forgiving they are of my standups). Nights bled into four-thirty in the morning. Work still started at nine. Weekends turned into catch-up lies I told myself to feel better.</p>\n\n<blockquote>\n<p>🎨 I coded until my brain short-circuited, then wandered off to Leonardo to play with color because apparently sleep deprivation makes me an artist.</p>\n</blockquote>\n\n\n<hr>\n\n<p>That’s the thing about hackathons: they chew you up. The clock never stops, and you’re not polishing anything — it’s MVP or bust. The urge to overbuild doesn’t go away, but the deadline keeps you honest. </p>\n\n<p>And the prize money? Forget it. If that’s your motivation, just get a job. At least those checks clear. The real payoff is the exhaustion you somehow enjoy, the kind where you know you emptied the tank and came out standing anyway. </p>\n\n<blockquote>\n<p>🫩 So yeah, I’m wrecked and my brain owes me four days of sleep.  </p>\n</blockquote>\n\n<p>But unlike that overnight hackathon years ago, I didn’t walk away muttering “never again.” This time I realized I’d come full circle. Back then, the rule was survival. With a kid, student loans, and no margin for error, I couldn’t afford to burn myself out for fun.  </p>\n\n<p><strong>Now, I finally could.</strong> And it turns out I didn’t just survive it — I loved it. 💟</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"when-survival-turns-into-choice\" href=\"#when-survival-turns-into-choice\">\n  </a>\n  When Survival Turns Into Choice 🧭\n</h2>\n\n<p>And maybe that’s the truth hiding in all of this: <em>“never again”</em> usually just means <em>“not right now.”</em></p>\n\n<p>It’s okay to slam the door shut, to swear something off loudly enough that everyone hears you — <strong>sometimes that’s survival.</strong> But don’t be surprised when the same thing comes knocking again years later.</p>\n\n<p>And who knows? Maybe the next time it shows up, it brings something a little different with it. 🫶</p>\n\n\n<hr>\n\n\n<div class=\"ltag__user ltag__user__id__3224358\" style=\"border-color:#5c246a;box-shadow: 3px 3px 0px #5c246a;\">\n    <a href=\"/anchildress1\" class=\"ltag__user__link profile-image-link\">\n      <div class=\"ltag__user__pic\">\n        <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F3224358%2F7f675c78-6aa0-466a-a5a7-c3e35440d53a.png\" alt=\"anchildress1 image\" loading=\"lazy\">\n      </div>\n    </a>\n  <div class=\"ltag__user__content\">\n    <h2>\n<a class=\"ltag__user__link\" href=\"/anchildress1\">Ashley Childress</a><button name=\"button\" type=\"button\" data-info='{\"className\":\"User\",\"style\":\"full\",\"id\":3224358,\"name\":\"Ashley Childress\"}' class=\"crayons-btn follow-action-button whitespace-nowrap c-btn--secondary fs-base follow-user\" aria-label=\"Follow user: Ashley Childress\" aria-pressed=\"false\">Follow</button>\n</h2>\n    <div class=\"ltag__user__summary\">\n      <a class=\"ltag__user__link\" href=\"/anchildress1\">SSE @ Home Depot. Specialize in distributed backend systems. Happy and content playing second - all of the freedom and none of the responsibility!</a>\n    </div>\n  </div>\n</div>\n  \n\n\n<hr>\n\n<h2>\n  <a name=\"responsible-ai-statement-rai\" href=\"#responsible-ai-statement-rai\">\n  </a>\n  🛡️ Responsible AI Statement (RAI)\n</h2>\n\n<p>This post was drafted with the assistance of AI. The memories, chaos, and full-circle exhaustion are mine. The words were built together in the style you just read.</p>\n\n",
    "description": "The hackathon I said I’d never do again turned exhaustion into code.",
    "slug": "the-hackathon-i-swore-off-and-the-exhaustion-that-mostly-compiled-c4l",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fw5r68w9yq7mddqy5s59g.png%3Fv%3D2",
    "tags": [
      "watercooler",
      "career",
      "life",
      "n8nagentchallenge"
    ]
  },
  {
    "title": "Don't judge this version of the submission, but it was driving me insane that I didn't have time to actually finish the post that I had already spent so much time organizing and writing this past week. This is that version, check out how it really went!",
    "link": "https://dev.to/anchildress1/dont-judge-this-version-of-the-submission-but-it-was-driving-me-insane-that-i-didnt-have-time-to-56o6",
    "date": "2025-09-01T23:41:27Z",
    "content_html": "<div class=\"ltag__link\">\n  <a href=\"/anchildress1\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__pic\">\n      <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F3224358%2F7f675c78-6aa0-466a-a5a7-c3e35440d53a.png\" alt=\"anchildress1\" loading=\"lazy\">\n    </div>\n  </a>\n  <a href=\"https://dev.to/anchildress1/underfoot-the-chatpot-for-hidden-places-and-why-i-dont-do-hackathons-2684\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__content\">\n      <h2>Underfoot: The ChatPot for Hidden Places (and Why I Don’t Do Hackathons)</h2>\n      <h3>Ashley Childress ・ Sep 1</h3>\n      <div class=\"ltag__link__taglist\">\n        <span class=\"ltag__link__tag\">#devchallenge</span>\n        <span class=\"ltag__link__tag\">#n8nbrightdatachallenge</span>\n        <span class=\"ltag__link__tag\">#ai</span>\n        <span class=\"ltag__link__tag\">#webdev</span>\n      </div>\n    </div>\n  </a>\n</div>\n\n\n",
    "description": "Underfoot: The ChatPot for Hidden Places (and Why I Don’t Do...",
    "slug": "dont-judge-this-version-of-the-submission-but-it-was-driving-me-insane-that-i-didnt-have-time-to-56o6",
    "cover_image": null,
    "tags": [
      "devchallenge",
      "n8nbrightdatachallenge",
      "ai",
      "webdev"
    ]
  },
  {
    "title": "Underfoot: The ChatPot for Hidden Places (and Why I Don’t Do Hackathons)",
    "link": "https://dev.to/anchildress1/underfoot-the-chatpot-for-hidden-places-and-why-i-dont-do-hackathons-2684",
    "date": "2025-09-01T07:00:38Z",
    "content_html": "<p><em>This is a submission for the <a href=\"https://dev.to/challenges/brightdata-n8n-2025-08-13\">AI Agents Challenge powered by n8n and Bright Data</a>.</em></p>\n\n<h2>\n  <a name=\"updated\" href=\"#updated\">\n  </a>\n  **UPDATED**\n</h2>\n\n<p>I just noticed my n8n trial is officially expired 😢 So I've turned the chat back off so it doesn't seem like it <em>should</em> be doing something. I have bigger plans for this guy though, so stay tuned. More updates from future me will follow. 🫶</p>\n\n<blockquote>\n<p>Also, the \"prequel\" I wrote up a couple of days later. If you're curious about the whole \"no hackathons\" rule and want the <em>whole</em> story, it's <a href=\"https://dev.to/anchildress1/the-hackathon-i-swore-off-and-the-exhaustion-that-mostly-compiled-c4l\">here</a>.</p>\n</blockquote>\n\n\n<hr>\n\n<blockquote>\n<p>🦄 <strong>FYI:</strong> I updated this after the fact—<strong>I did plan two full weeks down to the minute</strong>—but I didn’t plan for <strong>not having the data</strong> or <strong>not having a solid backup</strong> when it didn’t arrive. Also, I lost half a day to Figma’s decorative quicksand. The rushed thing I pasted to make the buzzer didn’t sound like me, so this is the version I can live with (and you can actually read for fun). 🪄</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"what-i-built\" href=\"#what-i-built\">\n  </a>\n  What I Built\n</h2>\n\n<p><strong>Underfoot</strong> (my stubborn little <strong>ChatPot</strong>) is a chatbot that finds locals-only, off-the-map places you won’t see on Yelp or TripAdvisor. You give it a location and intent (music, coffee, hiking, spider farms…) and it returns unique results with a <strong>Stonewalker</strong> rating. Each query also adds anonymous <strong>whispers</strong> to the cache, so the dataset grows as people use it. 🎯</p>\n\n<p><a href=\"https://github.com/CheckMarKDevTools/underfoot-underground-travel-planner/\" class=\"ltag_cta ltag_cta--branded\" role=\"button\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repository — docs, flows, screenshots</a>\n</p>\n\n<p><a href=\"https://checkmarkdevtools.app.n8n.cloud/webhook/d92bc454-8f78-4471-ae25-ffa0c9bb87b3/chat\" class=\"ltag_cta ltag_cta--branded\" role=\"button\" target=\"_blank\" rel=\"noopener noreferrer\">Underfoot Chat — The Stonewalker Agent (try it)</a>\n</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fdyetwdzuuqouq39dsist.png%3Fv%3D2\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fdyetwdzuuqouq39dsist.png%3Fv%3D2\" title=\"Underfoot / Stonewalker logo\" alt=\"Underfoot logo generated by Leonardo.ai and ChatGPT\" loading=\"lazy\" width=\"720\" height=\"720\"></a></p>\n\n\n<hr>\n\n<h2>\n  <a name=\"underfoot-the-localsonly-treasure-hunter\" href=\"#underfoot-the-localsonly-treasure-hunter\">\n  </a>\n  Underfoot — the locals-only treasure hunter 🎒\n</h2>\n\n<p>I didn’t try to cram this into a weekend; I mapped two weeks like a flight plan. The part that snapped first was the one I trusted too much: a data preload that was “ready” on paper and nowhere in reality. My beautiful schedule grew a crater where the testing window used to be, and from there it was just me, the agent, the caches, and a lot of swearing said lovingly at my own ambition. 🧭</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-whispernetwork-project-background\" href=\"#the-whispernetwork-project-background\">\n  </a>\n  The whisper-network: project background 📼\n</h2>\n\n<p>Late ’90s / early 2000s Georgia, when cell phones were for emergencies and you rationed the battery like it owed you money. My brother and I chased off-the-wall spots through a whisper network: backyard mini-festivals with passwords in the backs of free magazines, odd museums, ghost tours that were either hilariously fake or so real you quietly recalibrated your cosmology on the drive home. Too public and the cops came; too secret and the field stayed empty. We loved that balance.</p>\n\n<p><strong>Underfoot</strong> bottles that energy. You give the resident <em>Stonewalker</em> an <strong>intent</strong> you actually feel (“live music,” “odd museums,” “strange gardens,” “spider farm”) plus a <strong>location</strong>. It crawls the not-obvious places first, normalizes the messy HTML, then returns a ranked list that says, “this is probably your kind of weird—go now.” 🕵️‍♀️</p>\n\n<p><strong>The “catch”:</strong> sometimes these events haven’t been discovered yet— that's how these things work. Besides, a chatbot can’t politely wait for scraping, so every <code>{intent, location}</code> pair sends out separate <strong>whispers</strong> that build the cache for that combo. The next person’s list is a little louder and a little wilder than the last. 🔁</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"i-cant-do-simple-and-i-stopped-pretending-otherwise\" href=\"#i-cant-do-simple-and-i-stopped-pretending-otherwise\">\n  </a>\n  I can’t do simple (and I stopped pretending otherwise) 🧶\n</h2>\n\n<p>I promise “tiny demo,” and five minutes later I have: an ADR (revised twice), a color palette in Leonardo, three caches, and a Future Enhancements page that looks like a subway map someone cried coffee onto. It’s not scope creep; it’s <strong>scope pre-planning</strong>. I need to see the whole creature to ship a slice.</p>\n\n<p>Vibe-coding lasted maybe two minutes. Copilot drafted the UI, I took a scenic (unnecessary) tour through Figma, flirted with Stitch, sprinted to <strong>n8n</strong> because hosted chat looked fast, missed my UI and dragged it back, and somewhere in there I wrote the agent I actually wanted—decisions like a product, not a science-fair trifold. 🧪</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"why-i-dont-do-hackathons-and-why-i-did-this-one-anyway\" href=\"#why-i-dont-do-hackathons-and-why-i-did-this-one-anyway\">\n  </a>\n  Why I don’t do hackathons (and why I did this one anyway) ⏱️\n</h2>\n\n<p>Hackathons want a snapshot; I build ecosystems. They want “Friday by midnight”; I want to label the stations, run one line today, and the others next week. I joined anyway because this is the exact agent I’ve wanted to build for months. It <em>was</em> fun—and it reminded me why trusting a green checkbox you don’t control is a dice roll. 🟩</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"what-it-looks-like-the-sprint-with-real-nouns\" href=\"#what-it-looks-like-the-sprint-with-real-nouns\">\n  </a>\n  What it looks like — the sprint with real nouns 🧵\n</h2>\n\n<p>Two mouths, one brain:</p>\n\n<ul>\n<li>\n<strong>n8n Hosted Chat</strong> (discovered late, used constantly)</li>\n<li>A tiny <strong>Copilot-assisted React UI</strong> once I get this deployed and working the way it does in my head. I will update with this link too.</li>\n</ul>\n\n<p>Both funnel free-form requests into <code>{ intent, location }</code>.</p>\n\n<p>Then:</p>\n\n<ul>\n<li>\n<strong>Fetch</strong> from the non-mainstream first (Facebook events that behave, Reddit posts that map to places or pop-ups, a growing “weird web” list living in Obsidian).</li>\n<li>\n<strong>Parse</strong> with minimal markup assumptions (HTML changes when you blink).</li>\n<li>\n<strong>De-dupe</strong> with URL + fuzzy geo (and strip tracking sludge).</li>\n<li>\n<strong>Score</strong> with the decimal <strong>Stonewalker</strong> blend: uniqueness • locality • recency • intent-fit.</li>\n<li>\n<strong>Cache</strong> to <strong>Supabase</strong> (scraping the same planet twice is a sin).</li>\n</ul>\n\n<p>I hit <strong>n8n’s memory ceiling</strong> right when the first end-to-end run smiled at me. Reflex: vectors + RAG + tidy GCP attic. Reality: the clock. I did the boring, correct thing—<strong>pull less, trim sooner, cache earlier</strong>. Two caches unlocked; the third is a miniboss I’ll beat when I’m not running on midnight. 🧱</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"ai-agents-saints-on-monday-goblins-on-tuesday\" href=\"#ai-agents-saints-on-monday-goblins-on-tuesday\">\n  </a>\n  AI agents: saints on Monday, goblins on Tuesday 👾\n</h2>\n\n<p>Agents <em>in</em> the system and agents <em>helping</em> build the system—both truths can be true in the same hour:</p>\n\n<ul>\n<li>\n<strong>ChatGPT</strong> yanked me out of holes, then cited docs from a neighbor universe ten minutes later.</li>\n<li>\n<strong>Copilot</strong> went license-dark mid-sprint—peak front-end day timing.</li>\n<li>\n<strong>Leonardo</strong> kept momentum by letting me <em>see</em> the brand when the plumbing got gnarly.</li>\n<li>Various <strong>chat boxes</strong> (n8n, Bright Data, Supabase) were great rubber ducks until they hallucinated syntax.</li>\n</ul>\n\n<p><strong>Rule that saved me:</strong> no agent writes straight to storage. The <strong>normalizer</strong> is the law. Drafts can be flammable; data cannot. 🧯</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-cache-sheets-vs-supabase-be-a-database-not-a-vibe\" href=\"#the-cache-sheets-vs-supabase-be-a-database-not-a-vibe\">\n  </a>\n  The cache: Sheets vs Supabase (be a database, not a vibe) 🗄️\n</h2>\n\n<p>I tried to keep the prototype in Google Sheets because it was there and felt simple. Simple lied. As soon as you care about de-dupe, TTLs, hit/miss tracking, and “please don’t melt anyone’s hobby site,” you need grown-up storage. I pivoted to <strong>Supabase</strong>, met <strong>Row-Level Security (RLS)</strong> and <strong>grants</strong> like a mini-boss in a fresh dungeon (v17 feels spicier), learned just enough to stop tripping over my new <code>underfoot</code> schema, and came out with two caches behaving—and a third that now knows the sound of my footsteps. 🪪</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"underfoot-belongs-in-your-pocket-laptops-were-the-proving-ground\" href=\"#underfoot-belongs-in-your-pocket-laptops-were-the-proving-ground\">\n  </a>\n  Underfoot belongs in your pocket (laptops were the proving ground) 📱\n</h2>\n\n<p>It runs on a computer because that’s where the tools live, but <strong>Underfoot is meant for your phone</strong>—a “you’re already out, what’s weird nearby?” companion. One-tap location, swipeable cards you can skim at a red light (responsibly), save/share that doesn’t fight you, and a quiet toggle: “nudge me when something odd appears within five miles.”</p>\n\n<p><strong>Path:</strong> <strong>PWA now</strong> (installable, offline last results, Share Target) → <strong>push later</strong> (saved intents → “new oddities near you”) → <strong>Expo wrap</strong> with haptics and deep links like <code>underfoot://place/:id</code> so maps feel native. 🧭</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"what-i-did-wrong-say-it-out-loud\" href=\"#what-i-did-wrong-say-it-out-loud\">\n  </a>\n  What I did wrong (say it out loud) 🧨\n</h2>\n\n<ul>\n<li>\n<strong>Trusted an external preload without a Plan B.</strong> The curated 2.3M rows never landed; my testing window vanished; I rewrote for “fetch + cache” and paid the polish tax. 🔌</li>\n<li>\n<strong>Spent a half-day in Figma I couldn’t spare.</strong> Respect to UX; for me it was decorative quicksand. 🎨</li>\n<li>\n<strong>Let “Cloudflare will be easy” live rent-free.</strong> It wasn’t. Keep the UI small; add a tiny Worker proxy only where needed. ☁️</li>\n<li>\n<strong>Left Copilot tied to work.</strong> Running out of credits mid-sprint felt like knitting with oven mitts. 🧤</li>\n<li>\n<strong>Underestimated n8n memory.</strong> Fixed by budgeting data like money: pull less, trim sooner, cache earlier. 🧮</li>\n<li>\n<strong>Structured output optimism.</strong> Agents <em>can</em> do it, but the normalizer must be the bouncer from hour one. 📇</li>\n</ul>\n\n<blockquote>\n<p>🦄 I still had a blast, learned a ton, and might even do it again—after a nap and a vacation from permissions dialogs. 🌙</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"future-plans-also-in-the-repo\" href=\"#future-plans-also-in-the-repo\">\n  </a>\n  Future plans (also in the repo) 🧱\n</h2>\n\n<p><strong>High-impact next:</strong> dataset preload I control (seeded batches), vector search via pgvector once the pipeline is boring, Google Places (Text/Nearby + Details) through the same normalizer, and a curated “weird web” seed list (40–50 URLs you wouldn’t know to google, scheduled fetcher, quality scoring so the noisy ones get benched). 🧰</p>\n\n<p><strong>Cache-first response:</strong> the Whisper Network runs in the background, but the agent should <strong>hit the cache first</strong>. Update the prompt/flow to enforce cache → live tools.</p>\n\n<p><strong>Cache management planning:</strong> I put a lot of design work into how the cache could be structured to allow for future RAG-type navigation, along with simpler embeds for straight vector search. However, I put zero thought (asides from \"I need to think about that at some point\") into actually managing it <em>after</em> the data is there. For now, it's all dependent on a merge that's unique by URL. </p>\n\n<ul>\n<li>That \"unique\" URL isn't very reliable and needs a better \"smart\" dedupe system</li>\n<li>I took a limited hour-ish aside through the land of TTL in Google Sheets (<em>not at all recommended</em>, by the way) and learned that any way I tried to make it work it always had the same result = <em>terrible idea</em>. That's how Supabase got involved, but ultimately broke things worse than fixing them. <strong>I probably should have left it alone.</strong>\n</li>\n</ul>\n\n<p><strong>Localization:</strong> right now it returns the first geocoder result for speed. Flesh this out so results match what people <em>meant</em>, not just what a geocoder guessed.</p>\n\n<p><strong>Experience:</strong> transparent Stonewalker scoring you can peek and tweak; richer cards (images, tags, map snaps, save/share lists, quick filters); a quieter Discord bot that delivers value, not noise; mobile that respects thumbs and daylight. ✨</p>\n\n<p><strong>Reliability:</strong> Normalization 2.0 is the law; a tiny “repair” agent only when validation fails; better cross-source entity linking so “The Old Mill” is one place—not fourteen. 🔐</p>\n\n\n<hr>\n\n<h3>\n  <a name=\"technical-stuff\" href=\"#technical-stuff\">\n  </a>\n  Technical Stuff\n</h3>\n\n<ul>\n<li>\n<strong>System Instructions:</strong> Stonewalker persona — hybrid nature/tech guide with a maps + travel focus.\n</li>\n<li>\n<strong>Model:</strong> GPT-4.1-mini (full model as backup).\n</li>\n<li>\n<strong>Memory/Cache:</strong> normalized results for reuse (v2.0); prototype began in Google Sheets.\n</li>\n<li>\n<strong>Nodes:</strong> HTTP Request, Function (normalize/de-dupe), Discord notifier. <strong>Bright Data Verified</strong> node was great when it fit; I often swapped to plain HTTP for unusual flows.\n</li>\n<li>\n<strong>Central AI agent:</strong> <em>The Stonewalker.</em>\n\n<ul>\n<li>I had a separate data-only agent; it took too long for mediocre results. After cache reliability + maps data, I’ll revisit.\n</li>\n</ul>\n\n\n</li>\n\n<li>\n\n<strong>Triggers:</strong> Webhook (custom UI) + n8n Chat (convenience).\n</li>\n\n<li>\n\n<strong>Sources:</strong> internal cache (in progress), Google Maps SERP (fallback), Google SERP, Reddit, Facebook events, pre-approved secondary sources (future).\n</li>\n\n<li>\n\n<strong>Output:</strong> structured parser + secondary normalizer.\n\n<ul>\n<li>I went back and forth on structured output; docs warn against strict schemas with agents. The normalizer stays the final authority.\n</li>\n</ul>\n\n\n</li>\n\n<li>\n\n<strong>Error handling:</strong> Discord notifier—useful, loud; needs formatting + routing love.\n</li>\n\n<li>\n\n<strong>Planned:</strong> Bright Data Google Maps dataset <em>(delivered 2025-09-01 03:43 PDT — thanks, team).</em>\n</li>\n\n</ul>\n\n\n<hr>\n\n<h2>\n  <a name=\"screenshots\" href=\"#screenshots\">\n  </a>\n  Screenshots 🖼️\n</h2>\n\n<p><strong>Primary workflow</strong><br><br>\n<a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fpioe33oo4gswnut44su1.png%3Fv%3D2\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fpioe33oo4gswnut44su1.png%3Fv%3D2\" title=\"Flow overview — inputs → fetchers → parse/de-dupe → score → cache → output\" alt=\"Flow overview diagram showing inputs, fetchers, parse/de-dupe, scoring, cache, and output\" loading=\"lazy\" width=\"800\" height=\"281\"></a>  </p>\n\n<p><strong>Last-minute solution instead of pre-cached data</strong><br><br>\n<a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fa5t428t7n2sjnw8vr5yi.png%3Fv%3D2\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fa5t428t7n2sjnw8vr5yi.png%3Fv%3D2\" title=\"Google Maps fallback scraper\" alt=\"Scraping Google Maps when the dataset didn't show\" loading=\"lazy\" width=\"2852\" height=\"1106\"></a>  </p>\n\n<p><strong>Google SERP flow</strong><br><br>\n<a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fjh4p2ga2gtejtios5jzj.png%3Fv%3D2\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fjh4p2ga2gtejtios5jzj.png%3Fv%3D2\" title=\"SERP workflow\" alt=\"Google search SERP workflow\" loading=\"lazy\" width=\"2620\" height=\"1206\"></a>  </p>\n\n<p><strong>Reddit scraper</strong><br><br>\n<a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fgoxp5giadgsuqvd5vesr.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fgoxp5giadgsuqvd5vesr.png\" title=\"Reddit scraper flow\" alt=\"Reddit scraper workflow\" loading=\"lazy\" width=\"800\" height=\"327\"></a>  </p>\n\n<p><strong>Facebook Events scraper</strong><br><br>\n<a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fwlaoxz5ain740sx4eo0i.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fwlaoxz5ain740sx4eo0i.png\" title=\"Facebook Events flow\" alt=\"Facebook Events scraper\" loading=\"lazy\" width=\"800\" height=\"325\"></a>  </p>\n\n<p><strong>The Whisper Network (background caching)</strong><br><br>\n<a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F7qmvbb332a622t3js9te.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F7qmvbb332a622t3js9te.png\" title=\"Whisper cache flow\" alt=\"The Whisper Network behind-the-scenes caching\" loading=\"lazy\" width=\"800\" height=\"840\"></a>  </p>\n\n<p><strong>Discord notifications baked in</strong><br><br>\n<a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fgmd2hw3qop5ocxkkt53g.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fgmd2hw3qop5ocxkkt53g.png\" title=\"Discord error notifier\" alt=\"The annoying notifier that dinged every single time something went wrong\" loading=\"lazy\" width=\"800\" height=\"408\"></a>  </p>\n\n\n<hr>\n\n<h2>\n  <a name=\"quick-links\" href=\"#quick-links\">\n  </a>\n  Quick links 🔗\n</h2>\n\n<p><strong>Repo:</strong> <a href=\"https://github.com/CheckMarKDevTools/underfoot-underground-travel-planner\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/CheckMarKDevTools/underfoot-underground-travel-planner</a><br><br>\n<strong>Live link:</strong> <a href=\"https://checkmarkdevtools.app.n8n.cloud/webhook/d92bc454-8f78-4471-ae25-ffa0c9bb87b3/chat\" target=\"_blank\" rel=\"noopener noreferrer\">https://checkmarkdevtools.app.n8n.cloud/webhook/d92bc454-8f78-4471-ae25-ffa0c9bb87b3/chat</a></p>\n\n\n<hr>\n\n<h2>\n  <a name=\"rai-responsible-ai-how-this-stays-good-on-purpose\" href=\"#rai-responsible-ai-how-this-stays-good-on-purpose\">\n  </a>\n  🛡️ R.A.I. — Responsible AI (how this stays good on purpose)\n</h2>\n\n<ul>\n<li>\n<strong>Transparency:</strong> model-generated text is obvious in context; ranked results cite sources; Stonewalker scores are explainable (uniqueness • locality • recency • intent-fit) with tunables coming. 🔍\n</li>\n<li>\n<strong>Privacy:</strong> no PII required; anonymous intent + coarse location only; one-click “forget me” clears local cache and server traces tied to your session. 🫥\n</li>\n<li>\n<strong>Respect:</strong> honor <code>robots.txt</code>, rate limits, and site TOS; prefer official APIs; link back, don’t lift; no paywalls or wholesale republishing. 🧑‍⚖️\n</li>\n<li>\n<strong>Safety:</strong> filter obviously harmful/illegal content and adult venues by default; opt-in gates for edgier categories; down-rank chains; spotlight genuinely local listings. 🧯\n</li>\n<li>\n<strong>Hallucination guard:</strong> agents don’t write to storage; a deterministic normalizer validates/repairs/rejects before anything lands; uncertainty is surfaced in the UI. 🧪\n</li>\n<li>\n<strong>Security:</strong> secrets live server-side; least-privilege keys; redacted logs; regular rotation. 🛡️\n</li>\n<li>\n<strong>Crawl with manners:</strong> staggered schedules, backoff, polite concurrency so nobody’s hobby site gets melted. 🐢\n</li>\n</ul>\n\n<blockquote>\n<p>🦄 <strong>Confession:</strong> Yes I cheated — I let ChatGPT write the initial submission, which honestly I didn't even have time to read. There is no telling what was on it, but I know it <em>wasn't mine</em> and it was making me crazy. 🤪 So please, <strong>do not judge this writing</strong> as part of whatever scoring happens with the project. It was all done <em>after</em> the deadline.</p>\n\n<p>Last updated: 2025-09-01. If I miss the mark on any of this, file an issue and I’ll fix it._ ✅</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"epilogue\" href=\"#epilogue\">\n  </a>\n  Epilogue 📝\n</h2>\n\n<p>Half of what I attempted was a bad idea—which is why I deferred the other half on purpose—and somehow I still had the best time. I’m tired in the satisfying way. I want a nap <em>and</em> I want to open my phone in a random city and hear Stonewalker whisper “turn left.” That’s how I know I’m not done—just paused long enough to tell you what really happened. 🌆</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-oomph-micdrop\" href=\"#the-oomph-micdrop\">\n  </a>\n  🧠💥 The Oomph (mic-drop)\n</h2>\n\n<p>The clock ran out; the curiosity didn’t. <strong>Underfoot / Stonewalker</strong> already finds the odd little places that make a town feel alive, and the desk was just a proving ground because <strong>your pocket is the point</strong>—one tap, one intent, a handful of cards that feel like a friend leaning in to whisper, <em>psst, go here</em>. 🌙</p>\n\n",
    "description": "My updated submission for the first hackathon I've done in more than 10 years, here's how it really happened.",
    "slug": "underfoot-the-chatpot-for-hidden-places-and-why-i-dont-do-hackathons-2684",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F0ah4yyho2xc21jlmfyc9.png",
    "tags": [
      "devchallenge",
      "n8nbrightdatachallenge",
      "ai",
      "webdev"
    ]
  },
  {
    "title": "What in the World Is GitHub Coding Agent?",
    "link": "https://dev.to/anchildress1/what-in-the-world-is-github-coding-agent-2m8p",
    "date": "2025-08-27T13:12:23Z",
    "content_html": "<blockquote>\n<p>🦄 You know, I've been ready to write this post for ages. This is the <em>one thing</em> that got me hooked on AI to begin with, and I'm still obsessed. But now that I'm here? I'm almost, <strong><em>almost</em></strong> too tired to even enjoy it. And because I'm a ride-or-die kind of person — either all in or over it yesterday — we're just going to dive headfirst into the shallow end. No holding back — I hope you're ready! 🛟</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F6rv2yc0bs2pwe59a6k5p.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F6rv2yc0bs2pwe59a6k5p.png\" alt=\"short dotted horizontal divider\" loading=\"lazy\" width=\"300\" height=\"4\"></a></p>\n\n<h2>\n  <a name=\"your-10minute-101-to-get-you-started-with-autonomous-ai\" href=\"#your-10minute-101-to-get-you-started-with-autonomous-ai\">\n  </a>\n  Your 10-minute 101 to get you started with autonomous AI ⏰\n</h2>\n\n<p>Honestly? there's <em>no way</em> I can cover everything about GitHub Coding Agent in one go. So, for this post 👇, we're doing the \"just enough to be dangerous\" thing. I'll hit you with the absolute must-knows, show you how to get started (in 10 minutes or less), and <em>hopefully</em>, not put you to sleep in the process (or myself!). </p>\n\n<p>My goal is to give you a \"preview teaser\" so you can go play, explore a bit, and maybe even tackle that hack time project you keep putting off. But whatever you do, <em>please</em> don't think this is your all-inclusive pass to go wild on production code. 🫡</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"coding-agent-%E2%89%A0-agent-mode\" href=\"#coding-agent-%E2%89%A0-agent-mode\">\n  </a>\n  Coding Agent ≠ Agent Mode 🤪\n</h2>\n\n<p>Okay, let's get something straight right off the bat, because these names are just asking for trouble. Yes, they both have \"GitHub\" and \"Agent\" in the name. And yes, they're both powered by Claude Sonnet 4, but <strong>that's where the similarities stop.</strong> Agent Mode is for in-IDE use, a bit like a sidekick who waits for you to tell it what to do next. Coding Agent? It's the whole show — a full-on autonomous workflow that runs on its own dedicated VM. </p>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> Custom instructions and prompt techniques are the secret sauce here. This is true for any Gen-AI tool, but it's <em>especially critical</em> with Coding Agent, which will just keep guessing until it runs out of steam or thinks the job is done. Don't let it run wild without a map!</p>\n</blockquote>\n\n<p>Don't worry, Coding Agent is designed with safety in mind. It's an incredibly contained, safe version of the \"autonomous coding\" experiment I ran on my own a while back. I spent 45 days arguing with a thing I wired up on my laptop, and I worked harder then than on any other project I've built before or since. </p>\n\n<p>Why? Because I didn't want to just listen to what people were saying about AI — I <em>needed</em> to see it for myself. </p>\n\n<blockquote>\n<p>🦄 And that, my friends, is why I'm here volunteering as your guide. If you get stuck, hit me up! I've probably tried it that way plus three other insane ideas before I found one that mostly worked 🙃</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"safety-first-chaos-second\" href=\"#safety-first-chaos-second\">\n  </a>\n  Safety First, Chaos Second 🛡️\n</h2>\n\n<p>I know, I know... I just spent a whole paragraph telling you how much I love this thing, and now I'm gonna give you the other half of the equation. </p>\n\n<p>I'm all for pushing a new tool to its absolute limit, just to see what happens. It reminds me of my favorite Hunter S. Thompson quote — which I slightly mangled to get a SFW version — but the core truth remains: </p>\n\n<blockquote>\n<p>When you find a new, beautiful wave, <strong>the tendency is to push it as far as you can.</strong> </p>\n</blockquote>\n\n<p>So, how far can you push GitHub Coding Agent? Pretty far, but there are a few things you need to know first.</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F6rv2yc0bs2pwe59a6k5p.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F6rv2yc0bs2pwe59a6k5p.png\" alt=\"short dotted horizontal divider\" loading=\"lazy\" width=\"300\" height=\"4\"></a></p>\n\n<h3>\n  <a name=\"1-just-because-you-can-doesnt-mean-you-should\" href=\"#1-just-because-you-can-doesnt-mean-you-should\">\n  </a>\n  1. Just Because You Can, Doesn't Mean You <em>Should</em>\n</h3>\n\n<p>This tool can absolutely excel, but it requires the right prompt, instructions, and general setup. If you're looking to dive into some legacy code to see what's what, or maybe you want a safe playground to mess around in, then this is your guy! </p>\n\n<p>But if you're thinking about using it to fix a production bug, especially when you're on a tight deadline, you probably (aka absolutely, most definitely) want to reconsider. Treat this as a \"learn how this works\" project, not a \"throw it at a problem and hope\" situation.</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F6rv2yc0bs2pwe59a6k5p.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F6rv2yc0bs2pwe59a6k5p.png\" alt=\"short dotted horizontal divider\" loading=\"lazy\" width=\"300\" height=\"4\"></a></p>\n\n<h3>\n  <a name=\"2-your-prompt-is-everything\" href=\"#2-your-prompt-is-everything\">\n  </a>\n  2. Your Prompt is Everything\n</h3>\n\n<p>The effectiveness of your instructions and prompt is multiplied exponentially by the complexity of your task. A great, well-thought-out set of instructions that you've carefully tweaked over weeks? Coding Agent will do fine. But if you spend 10 minutes throwing a few sentences together just to see what happens, don't be surprised when you come back to a haunted house where your beautiful little cottage of a codebase used to be.</p>\n\n<blockquote>\n<p>🦄 It is an agent and when an agent doesn't know something, <em>they guess</em>. <strong>That's just what they do.</strong> The only thing more dangerous than an AI off the rails and hallucinating is the fact that you just turned it loose on your code all by itself.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"what-its-actually-good-for\" href=\"#what-its-actually-good-for\">\n  </a>\n  What It's Actually Good For ✨\n</h2>\n\n<p>After all those warnings, I need to make it crystal clear: <strong>this tool is not dangerous.</strong> It runs on its own virtual machine and executes safely within GitHub Actions. It has a limited environment and only has access to what you explicitly give it. </p>\n\n<p>It <strong>always creates a new branch</strong>, which is a key safety feature. You can't get around it, even if you try. Trust me, I was annoyed, but the safety is worth it.</p>\n\n<p>So what can you realistically use this for? Here are some of my favorite real-world use cases:</p>\n\n<ul>\n<li>\n<strong>Documentation:</strong> Nothing has worked better for me than using Coding Agent to dive deep into a codebase and spit out test-ready use cases or a handful of detailed system architecture Mermaid diagrams. You set it loose, go get a coffee, and come back to 7-8 pages of detailed, well-researched use cases ready to be plugged in.</li>\n<li>\n<strong>Testing:</strong> This one's a little controversial for a test-driven development purist like me, <em>but</em>... when you're on a deadline and you just need to get things done, you can write the code and have Coding Agent go write the tests. It's not a perfect solution, but a pull request with 28/30 passing tests is way better than one with zero tests at all. 🤫🫣</li>\n<li>\n<strong>Project Planning:</strong> Got a big initiative coming up? Instead of spending a week flipping through pages of dead code to figure out how it used to work, you can have Coding Agent do the heavy lifting and print out a nifty little report when it's done. </li>\n</ul>\n\n\n<hr>\n\n<h2>\n  <a name=\"how-to-get-started-in-5-minutes-or-less\" href=\"#how-to-get-started-in-5-minutes-or-less\">\n  </a>\n  How to Get Started in 5 Minutes or Less ⏱️\n</h2>\n\n<p>In the interest of time and keeping this digestible, I'm going to give you the basics that will work 100% of the time. We'll dig in on some more tools next week.</p>\n\n<p>GitHub has made this incredibly accessible now. You can find the new <strong>agents panel</strong> button on just about every page in GitHub: both on the home page and within any repository.</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ft0y20jjys62xwrj9bb3x.png%3Fv%3D2\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ft0y20jjys62xwrj9bb3x.png%3Fv%3D2\" alt=\"GitHub new agents panel view to access Coding Agent\" loading=\"lazy\" width=\"1200\" height=\"669\"></a></p>\n\n<ol>\n<li><p><strong>Select the Repository and Base Branch:</strong> Choose the repo and the branch you want Coding Agent to work from. It will <em>always</em> create its own branch, so don't worry about selecting <code>main</code> (or a trunk-based development model) if that's your primary branch. I'm telling you, you can <em>try</em> to tell it not to create a branch, but it's not going to listen.</p></li>\n<li><p><strong>Craft Your Prompt:</strong> This is <em>not</em> your typical conversational prompting. Coding Agent <em>will keep guessing</em> until it reaches what it considers to be \"complete.\" Save yourself the headache and give it all the info up front.</p></li>\n<li><p><strong>Submit Your Request:</strong> Every time you hit send, it's considered one premium request. This is why it's so important to be concise and provide all the context it needs upfront.</p></li>\n</ol>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> To save premium requests when reviewing Copilot's PR, go to the diff page and leave all your <code>@copilot</code> comments as pending. When you're ready, submit them all at once, and it will only cost you <em>one request</em> whether you leave two comments or 20.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"a-final-warning-about-responsibility\" href=\"#a-final-warning-about-responsibility\">\n  </a>\n  A Final Warning About Responsibility 😈\n</h2>\n\n<p>Okay, one last thing. I have to let this sink in: </p>\n\n<p><strong>If it's <em>your</em> prompt, it's <em>your code</em>. Period.</strong></p>\n\n<p>If you go out and give a prompt to Copilot, ignore it for 30 minutes, do a half-hearted review, approve your own pull request, override the protection rules to push it to main, and then the codebase burns down... that's <strong>not</strong> Copilot's fault. That's your fault. Your prompt, your branch, your code, AI or not.</p>\n\n<p>So, be aware, be smart, and <em>please</em> don't use this as an excuse to ignore the basics. Start small with documentation or tests, and work your way up.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"lets-get-real\" href=\"#lets-get-real\">\n  </a>\n  Let's Get Real 🤨\n</h2>\n\n<p>Have you tried GitHub Coding Agent yet? What are your thoughts? Are you all in or has it been a big nope so far? Drop your wins, fails, and horror stories in the comments below. Bonus points if you link a fun code review you've got to do for Copilot. 🤪</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"ai-helped-i-did-the-heavy-lifting\" href=\"#ai-helped-i-did-the-heavy-lifting\">\n  </a>\n  🛡️ AI helped (I did the heavy lifting)\n</h2>\n\n<p>This post was written by me + one suspiciously helpful robot (Gemini) + one robot firmly in the time-out corner (ChatGPT).</p>\n\n",
    "description": "An all-in, real-world guide to GitHub’s Coding Agent—what it really does, what can go sideways, and why “all in” was the only way I could learn. This is just the start of a whole series, because honestly, this rabbit hole goes deep.",
    "slug": "what-in-the-world-is-github-coding-agent-2m8p",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fjljecf0ii5q2wzqhg5zo.png%3Fv%3D3",
    "tags": [
      "githubcopilot",
      "ai",
      "tutorial",
      "productivity"
    ]
  },
  {
    "title": "Medium and the Blanket AI Ban 😶",
    "link": "https://dev.to/anchildress1/medium-and-the-blanket-ai-ban-2cni",
    "date": "2025-08-24T09:24:50Z",
    "content_html": "<h2>\n  <a name=\"updated\" href=\"#updated\">\n  </a>\n  UPDATED\n</h2>\n\n<p>Thank you, <a class=\"mentioned-user\" href=\"https://dev.to/fatherofcurses\">@fatherofcurses</a> for making me stop and actually think through <em>solutions</em>. So I've updated my post on <a href=\"\">Medium</a> and suggested this system that I think we all would be able to live with (<em>your</em> here is <em>Medium's</em>):</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F6rv2yc0bs2pwe59a6k5p.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F6rv2yc0bs2pwe59a6k5p.png\" alt=\"short dotted horizontal divider\" loading=\"lazy\" width=\"300\" height=\"4\"></a></p>\n\n<p>👉 Don’t exclude everybody by default. <strong>AI ≠ “bad”</strong>. It can be misused, sure, but stereotyping an entire group of writers because of a few bad actors isn’t okay.</p>\n\n<p>Here’s what I propose:</p>\n\n<ul>\n<li>Create an <strong>AI pre-approval</strong> system.</li>\n<li>If a writer wants their AI-assisted work to be eligible for your programs, let them <strong>apply</strong>.</li>\n<li>Get your human reviewers involved — tear the post apart, see if it’s worthy.</li>\n<li>If it passes, give them a badge 🏷️ that automatically shows up on their page.</li>\n</ul>\n\n<p>Now, two good things happen:</p>\n\n<ol>\n<li>Writers aren’t forced to keep disclaiming “AI-generated” every post — the badge already says it.</li>\n<li>Once approved, their work is treated like everyone else’s. <strong>No blanket exclusion</strong>, just fair review.</li>\n</ol>\n\n<p>Yes, it’s a little more work on your end. But it’s a whole lot easier to swallow — and way more fair — for the rest of us.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-original\" href=\"#the-original\">\n  </a>\n  THE ORIGINAL\n</h2>\n\n<blockquote>\n<p>I’ve been meaning to write this since I first saw Medium's post on Friday — but, you know, life happens. So a little late, but I wanted to share. You tell me — <em>am I the crazy one here?</em> 🫤</p>\n\n<p>👆 Also, River has shown up in a few posts already — the Leonardo reimagining of my blog character. She’s still missing some key features (training tokens are tapped out until the month resets), but you get the idea. 😆 Expect a couple more tweaks coming soon.</p>\n</blockquote>\n\n<p>So Friday was my chill day (rare, but they do happen) and I noticed somebody had followed me on Medium. Which is funny, because I’d already canceled my membership — it just hadn’t expired yet. Five bucks a month isn’t exactly breaking the bank, so I thought, fine, maybe I’ll toss a few posts over there alongside LinkedIn.</p>\n\n<p>That <em>was</em> the plan. Until I landed on Medium’s homepage and saw this headline:</p>\n\n<p><a href=\"https://medium.com/blog/we-want-your-feedback-how-can-writers-use-ai-to-tell-human-stories-eb9dee926f2e\" target=\"_blank\" rel=\"noopener noreferrer\">“We want your feedback: how can writers use AI to tell human stories?”</a></p>\n\n<blockquote>\n<p>🦄 Perfect hook, right? Except two scrolls later I was fuming like I was just called in for a rollback on a Friday night. 😡</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-fine-print\" href=\"#the-fine-print\">\n  </a>\n  The Fine Print 🔍\n</h2>\n\n<p>By the time you dig through the post, the documentation, and the linked policies, the message is clear:</p>\n\n<ul>\n<li>AI as spellcheck? Totally fine. ✅ </li>\n<li>ChatGPT outlines and fact-checks? Approved. ✅ </li>\n<li>Anything more (drafting, editing, all other AI assistance)? ❌ \n\n<ul>\n<li>You’re officially outside their definition of “writer.”</li>\n</ul>\n\n\n</li>\n\n</ul>\n\n<p>And if you <em>do</em> dare use AI, you have to declare it at the very top of your post, within the first two paragraphs, and again on every image. Metadata doesn’t count.</p>\n\n<blockquote>\n<p>🦄 <strong>TL;DR:</strong> If you lean on AI for anything beyond grammar, you can write on Medium, but you’ll never get boosted, partnered, or featured. You <em>can</em> post, but you’re standing outside in the rain while everyone else gets a table inside. 🍽️</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"why-it-feels-off\" href=\"#why-it-feels-off\">\n  </a>\n  Why It Feels Off 🤔\n</h2>\n\n<p>Look, I get it. Nobody wants a feed full of unedited AI sludge. I’m not trying to game the system either. I’m not chasing claps or badges. I write because it’s fun, because I need a break from code, and because I have opinions the world clearly needs to hear. 😉 </p>\n\n<p><strong>AI doesn’t erase my voice — it sharpens it.</strong></p>\n\n<p>So calling everything in between spellcheck and prompt-posting off limits? No appeal, no nuance, just blanket exclusion? <em>That’s</em> where I’m lost.</p>\n\n<p>Developers talk nonstop about AI. Colleges too. It’s a huge, messy, <strong>important conversation</strong>. And Medium — the site that prides itself on being the “top blogging platform” — takes the most stereotypical, exclusionary stance possible. ChatGPT usually gets painted as the villain here, but really, it’s just the stand-in for all the tools that make the work easier.</p>\n\n<p>Honestly, it feels less like quality control and more like gatekeeping. Nuance would’ve made sense. Even a \"don't automate your blog posts\" sounds great. <em>This?</em> It's like they skipped gray completely and went straight to Twilight Zone monochrome. </p>\n\n\n<hr>\n\n<h2>\n  <a name=\"my-reply\" href=\"#my-reply\">\n  </a>\n  My Reply ✍️\n</h2>\n\n<p>You know I couldn’t resist. 🤷‍♀️ Yes — I dropped a response directly on Medium's front door, and linked to it right in their own discussion. That’s the only thing I’ve ever published over there besides the previous post on <a href=\"https://dev.to/anchildress1/how-i-blog-with-bots-but-you-can-still-blame-me-2861\">Blogging with Bots</a> I forwarded as an explanation. </p>\n\n<p>If you want the full-on-rant version of how I pushed back, here it is:</p>\n\n\n<div class=\"ltag__link\">\n  <a href=\"https://medium.com/@anchildress1/humansforai-a-story-of-little-value-6c0d43993f92\" class=\"ltag__link__link\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <div class=\"ltag__link__pic\">\n      <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fmiro.medium.com%2Fv2%2Fresize%3Afill%3A64%3A64%2F1%2ATZVVqJNsp3A8aaoQjHtrbA.jpeg\" alt=\"Ashley Childress\" loading=\"lazy\">\n    </div>\n  </a>\n  <a href=\"https://medium.com/@anchildress1/humansforai-a-story-of-little-value-6c0d43993f92\" class=\"ltag__link__link\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <div class=\"ltag__link__content\">\n      <h2>#HumansForAI: A Story of “Little Value” | by Ashley Childress | Aug, 2025 | Medium</h2>\n      <h3>Ashley Childress ・ <time datetime=\"2025-08-29T17:11:19.353Z\">Aug 29, 2025</time> ・ \n      <div class=\"ltag__link__servicename\">\n        <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fassets.dev.to%2Fassets%2Fmedium-f709f79cf29704f9f4c2a83f950b2964e95007a3e311b77f686915c71574fef2.svg\" alt=\"Medium Logo\" aria-label=\"Medium Logo\" loading=\"lazy\">\n        Medium\n      </div>\n    </h3>\n</div>\n  </a>\n</div>\n\n\n\n<hr>\n\n<h2>\n  <a name=\"wrapping-it-up\" href=\"#wrapping-it-up\">\n  </a>\n  Wrapping It Up 🌱\n</h2>\n\n<p>I’m calmer now, but the question still bugs me. AI doesn’t erase my voice — it just lets me shape it faster, sharper, and with a little extra spark. So if Medium can’t see that, maybe that’s their loss.</p>\n\n<p>And hey, I don’t want this to be a solo rant echoing into the void either! <strong>I want to know what you think.</strong> Is this really such a crime against writing, or is Medium being willfully old-school about it? </p>\n\n<blockquote>\n<p>🦄 Let’s hash it out right here — the corner of the internet where the fun people hang around anyway.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"powered-by-espresso-shots-a-healthy-eyeroll-and-a-touch-of-ai-cleanup\" href=\"#powered-by-espresso-shots-a-healthy-eyeroll-and-a-touch-of-ai-cleanup\">\n  </a>\n  🛡️ Powered by espresso shots, a healthy eye-roll, and a touch of AI cleanup ⚔️\n</h2>\n\n<p>All opinions are mine, ChatGPT just helped keep the rant from running off the rails (again).</p>\n\n",
    "description": "Medium’s AI policy feels like gatekeeping: spellcheck is fine, but real AI use is banned. Here’s why that doesn’t fly.",
    "slug": "medium-and-the-blanket-ai-ban-2cni",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fxaqwca0srf1fk1t1stve.png%3Fv%3D2",
    "tags": [
      "writers",
      "discuss",
      "ai",
      "chatgpt"
    ]
  },
  {
    "title": "Three AIs and a Funeral: My Take on GPT-5 ⚰️",
    "link": "https://dev.to/anchildress1/three-ais-and-a-funeral-my-take-on-gpt-5-3f3e",
    "date": "2025-08-20T12:55:34Z",
    "content_html": "<blockquote>\n<p>🦄 Confession time: when I first started writing this post, I was <strong>mad</strong>. Not mildly irritated, not “eh, I’ll just wait for the next patch” annoyed. I mean genuinely fed up with Copilot, ChatGPT, and everything GPT-5 in general. And if I make it to the end of this post in one piece, maybe you'll understand why.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-funeral\" href=\"#the-funeral\">\n  </a>\n  The Funeral 👻\n</h2>\n\n<p>First, let me start this out by stating that OpenAI has officially buried the excuse that GPT can’t code. We had the funeral over the weekend. All its friends were invited. Laid to rest. Cremation done. Trees planted. Memorial service complete. </p>\n\n<p><strong>It’s done — GPT-5 can code.</strong> Full stop.</p>\n\n<p>There's no room for debate. No more hacks with pages of instructions or GPT hanging out on the sidelines because it's busy staring at the plan. OpenAI <em>nailed it</em> with an absolutely solid model.</p>\n\n<p>Plus VS Code's release came with some more experimental features that turns the already-solid GPT-5 in to a “send a prompt, make a plan, deep thinking, Implementation Specialist at your service” experience. That being said, I still haven't had nearly enough time with the full model yet.</p>\n\n<blockquote>\n<p>🦄 Why, you ask? Because my brilliant self left my personal account logged in while working last week. That account? It's the cheap $10 one. I burned through <em>all</em> my premium requests before I even noticed. 🫥</p>\n</blockquote>\n\n<p>So yes, GPT-5 (the real one) passed its early test runs beautifully — small to medium features, planning and implementation, no complaints. But the deep dive it deserves? That’s still coming — stay tuned.</p>\n\n<blockquote>\n<p>What was I doing instead of the GPT-5 deep dive? Playing the lead role in the horror story of Full House starring Kimmy Gibbler and the never-ending wall of text. 🧗‍♀️😑</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"duct-tape-please\" href=\"#duct-tape-please\">\n  </a>\n  Duct Tape, Please? 🤐\n</h2>\n\n<p>GPT-5-Mini is not bad. Let’s clear that up. For small, targeted context? For quick features? For implementing a clearly defined task with accuracy and precision? <strong>It’s great.</strong> Honestly. Kimmy Gibbler is a surprisingly solid coder.</p>\n\n<p>But the output.<br>\nOh. My. God. The. Output. 🫨😲😵‍💫</p>\n\n<p>I'm talking about <em>walls and walls</em> of text. Waterfalls of “look at me, I wrote a test!” status updates flooding my chat window like it's trying to set a world record. No, Kimmy, I don’t need a play-by-play novella about the journey you took to create a three-line function. </p>\n\n<blockquote>\n<p>🦄 Sure — I started out at least <em>trying</em> to skim what it was saying. But my sanity didn't last long into that battle. Seriously, if I read another scroll of verbose rambling I might have retreated to some dark corner until next Tuesday.</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"the-standoff\" href=\"#the-standoff\">\n  </a>\n  The Standoff\n</h3>\n\n<p>At one point, it got <strong>so bad</strong> that I set up a stand-off. I told GPT something along the lines of, “Go check on that workflow. If it works, give me a checkmark. <em>That’s it.</em> If you say anything else, I’m turning you off forever.”</p>\n\n<p>It complied. One lonely ✅ appeared.</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fcsdkwafhugbsp1r1ic3u.png%3Fv%3D2\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fcsdkwafhugbsp1r1ic3u.png%3Fv%3D2\" alt=\"GPT-5-Mini Stand-off Victory\" loading=\"lazy\" width=\"798\" height=\"182\"></a></p>\n\n<blockquote>\n<p>🦄 Victory? Maybe. For about thirty seconds. Then the rambling resumed. 🤦‍♀️</p>\n</blockquote>\n\n<p>Here’s what I didn’t realize at first: I had also turned on every single experimental preview feature in VS Code. That’s my usual routine — release notes drop, I’m flipping switches left and right.</p>\n\n<p>I <em>thought</em> I was enabling a neat little planning checklist feature. Which to be fair, I <em>did</em> do that... I also omitted its counterpart to internalize that chatter. Which meant the Mini chaos doubled — and nothing I added to the prompts or instructions made a bit of difference. 😫</p>\n\n<blockquote>\n<p>🦄 I even tried to tame it with a new <strong>Principal Pragmatist</strong> chat mode. Didn’t matter. Kimmy kept talking. Nonstop floods of text testing my sanity at every turn. Thanks, Kimmy.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"leatherface-joins-the-party\" href=\"#leatherface-joins-the-party\">\n  </a>\n  Leatherface Joins the Party\n</h2>\n\n<p>GitHub Copilot is only part of the equation, though. Because just when I thought I’d found a rhythm there, here comes ChatGPT starring as Leatherface, chainsaw roaring, doing a happy dance all over my carefully constructed blog draft. Shredding paragraphs. Scattering virtual scraps across the room. Obliterating what had been a perfectly flowing system of prompts and edits.</p>\n\n<blockquote>\n<p>🦄 I mean, this post normally would have taken me a couple of hours. Instead, three days later, I'm <em>still</em> wrestling Leatherface for control of my own sentences.</p>\n</blockquote>\n\n<p>Commands escalated. From firm. To censored. To questioning life choices. And finally, full-on ultimatum. I even took a few hours detour with Gemini — proof that I'm willing to go to war with an LLM over word count. (I'm also <em>still</em> losing that battle!)</p>\n\n<p>The moral of the story? While GPT-5 is a great coder — it is <strong>more than terrible</strong> at creative writing. So, why do we have a single model replacement for 2 completely different problems, OpenAI?</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"where-we-are-now\" href=\"#where-we-are-now\">\n  </a>\n  Where We Are Now\n</h2>\n\n<p>So where does that leave things?</p>\n\n<ul>\n<li>GPT-5: rock-solid coder, worthy of the “Implementation Specialist” title, but still waiting for its fair turn in the spotlight with me.</li>\n<li>Mini: great in short bursts, but <strong>do not</strong> let her narrate. Especially not with <em>every</em> experimental feature flipped on. Else plan for duct tape.</li>\n<li>ChatGPT: still a chainsaw in a library butchering my every attempt at creative writing.</li>\n</ul>\n\n<p>And me? Still here. Still writing. Still dragging you through the chaos with me, because apparently this is how I process the fact that we had a funeral for “GPT can’t code” and I celebrated it by duct-taping Gibbler and dodging Leatherface.</p>\n\n<blockquote>\n<p>Sounds like a victory, right? Well, sort of. At least the tombstone is carved. 🫶👻</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"responsible-ai-footnote\" href=\"#responsible-ai-footnote\">\n  </a>\n  🛡️ Responsible AI Footnote\n</h2>\n\n<p>All opinions here are my own. Real-world AI results depend on setup, context, and the occasional experimental toggle you <em>probably</em> shouldn’t have turned on in the first place. Test responsibly.</p>\n\n<blockquote>\n<p>🪓 Approved by Leatherface (ChatGPT).</p>\n</blockquote>\n\n",
    "description": "My real-world GPT-5 experience, tested daily in GitHub Copilot + ChatGPT.",
    "slug": "three-ais-and-a-funeral-my-take-on-gpt-5-3f3e",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fqyk7n6n6fot4isf5y5jx.jpg%3Fv%3D2",
    "tags": [
      "githubcopilot",
      "chatgpt",
      "writing",
      "watercooler"
    ]
  },
  {
    "title": "Weekend Hack: Making My Blog AI-Searchable (No Flames Required) 🔥🚫",
    "link": "https://dev.to/anchildress1/weekend-hack-making-my-blog-ai-searchable-no-flames-required-16h5",
    "date": "2025-08-16T12:52:04Z",
    "content_html": "<blockquote>\n<p>First of all — thank you. 🙏</p>\n\n<p>For real. This community has been nothing but encouraging, and it was a huge surprise to end up in the <strong>top seven</strong> last week. I didn’t expect it, but it’s appreciated more than you know. 🫶</p>\n</blockquote>\n\n\n<hr>\n\n\n\n<h2>\n  <a name=\"tldr\" href=\"#tldr\">\n  </a>\n  TL;DR\n</h2>\n\n<p>If you're looking for a quick and efficient way to increase traffic to your DevTo blog posts (or anywhere else with a little tweaking)? Try my <a href=\"https://github.com/anchildress1/devto-mirror\" target=\"_blank\" rel=\"noopener noreferrer\">10-minute DevTo crawly mirror</a>. Here's how it works:</p>\n\n<ol>\n<li>\n<strong>Clone the repo</strong>. Enter your DevTO username as an env variable in the repo. Delete the existing <code>gh-pages</code> branch.</li>\n<li>\n<strong>Scheduled GHA Workflow</strong> off-peak or manually trigger.</li>\n<li>\n<strong>Static HTML</strong> hosted via GitHub Pages</li>\n<li><strong>Canonical back to Dev</strong></li>\n</ol>\n\n\n<hr>\n\n<h2>\n  <a name=\"starting-with-nothing\" href=\"#starting-with-nothing\">\n  </a>\n  Starting With Nothing 🔦\n</h2>\n\n<p>So, this entire thing started with a conversation. </p>\n\n<blockquote>\n<p>🦄 About what? I honestly can’t remember now — Copilot, debugging, something in that ballpark. Doesn’t matter.</p>\n</blockquote>\n\n<p>But somehow — like so many of my rabbit holes — it mutated and morphed until I wasn't exactly at the same place I had started. I really can't explain the series of events that happened after that. I blame it on <em>curiosity</em> more than anything, but I did the one thing I swore I'd never do: I asked ChatGPT to do a quick search — pull one of my posts.</p>\n\n<p>And... <strong>nothing</strong>. Like the post didn’t exist. 🕳️</p>\n\n<p>Okay. 😅 Fine. Let’s take a step back. Next, I went straight to Google and typed the same thing. Results were <em>better</em> — sure. Scroll, scroll, scroll... and <strong>there</strong> it was. My post. Not at the top, but alive. Win. 😏</p>\n\n<blockquote>\n<p>🦄 <strong>Real talk</strong>: Do I care about being #1? No, not in the slightest. Honestly, I love my invisibility bubble — keeps things peaceful in my corner of the internet.</p>\n</blockquote>\n\n<p>But here’s the thing: invisibility and AI don’t mix. Because when I need an answer, I don’t open a browser anymore. I yell at my phone: “Hey Google!” Or I pop into ChatGPT or Gemini.</p>\n\n<p>If my posts don’t show up there, they might as well not even exist. 🫤</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"d%C3%A9j%C3%A0-vu\" href=\"#d%C3%A9j%C3%A0-vu\">\n  </a>\n  Déjà Vu 🔮\n</h2>\n\n<p>So I’m now blessed with the knowledge that my posts are basically hiding out in the Room of Requirement — you know it’s there, but only if the stars align. And <strong>that</strong> makes it hard to share the advice I keep repeating everywhere else that will listen:</p>\n\n<ul>\n<li>“Yes, you can use it for debugging.”</li>\n<li>“Of course it can generate the tests.”</li>\n<li>“Docs? Oh my god, PLEASE let it write the docs.”</li>\n</ul>\n\n<p>By the time I’ve said it for the fifth time, it feels like I’m stuck in reruns.</p>\n\n<blockquote>\n<p>🦄 Honestly, some days I feel like I need a theme song: “Previously, on AI Adventures with Ashley...” 🎵🎶</p>\n</blockquote>\n\n<p>Sure. <em>Sometimes</em>, I let AI run wild (it's more fun that way!). My Coding Agent kills it with documentation. I even built a chat mode that plays architect — reverse engineers a repo and spits out mermaid diagrams like it’s dealing cards in Vegas. That one runs in GitHub Actions, then opens a PR, and I'll merge once everything checks out.</p>\n\n<p>But the everyday stuff? It’s not dramatic. It’s small instructions, nudges, prompts. Rinse, repeat, <em>coffee</em>, repeat again. ☕️ It's slow, incremental improvements to be just a little better than yesterday. 🤏</p>\n\n<p>And what drives me absolutely up the wall? The extremes. Either “AI will replace every dev tomorrow” or “AI is useless, don’t bother.”</p>\n\n<blockquote>\n<p>🦄 <strong>Honestly</strong>, it’s like sitting court-side at Quidditch — the little guy zips across the field so fast you think you’ve finally caught up, but nope. He’s already off to something else... and it’s almost always completely wrong, too. 😅</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"writing-it-down\" href=\"#writing-it-down\">\n  </a>\n  Writing It Down 📕\n</h2>\n\n<p>So my solution: write it down. That’s what most of these blog posts are. Whatever comes up that week — whether it’s me digging, someone else asking, or just another repeated question — if I haven’t covered it already, give me a week. I'll get there.</p>\n\n<p>The beauty of this system? Instead of explaining everything for the tenth time, I can just say: “Glad you’re trying this. I think my blog might help — here’s the link. Let me know if you’ve got questions.”</p>\n\n<p>See. Simple, right? 🙂‍↕️ But even <em>that</em> wasn’t enough, because usually by the time I arrived on scene things were in somewhat of a state already. Mostly because what AI <em>was</em> helping with had a knowledge cut-off of January and everything else is wading through Microsoft or GitHub docs looking for any little nibble.</p>\n\n<p>So I set out to find a way to make my DevTo posts truly crawly — <em>without</em>  Dante's DevOps nightmares playing on repeat at the top of every hour. </p>\n\n<blockquote>\n<p>🦄 Sure, I <em>briefly</em> considered the real solution — custom website, full hosting stack, the whole front-end shebang. But I'm a backend engineer for a reason! My personal site is designed for APIs not MUI. I'd really prefer to keep it that way!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-hack-in-action\" href=\"#the-hack-in-action\">\n  </a>\n  The Hack in Action 💻\n</h2>\n\n<p>So, I did what any other respectable developer would do with an extra 15 minutes and spark of an idea: I hacked it. What do you get with 3 hours, a solid round of \"will OCD win again?\" and ChatGPT + GitHub Copilot tag team special? Exactly zero upkeep — mission accomplished. ✅<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code>GHA cron → Dev API → static HTML → GitHub Pages → robots.txt\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>That’s it. No CSS. No fancy layout. Just static content, scheduled on a daily push. Best of all? ChatGPT could <em>finally</em> find my posts. Gemini too.</p>\n\n<blockquote>\n<p>🦄 <strong>True story</strong>: I spent longer arguing with Leonardo to make a banner image than I did setting up the whole mirror.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"add-a-little-sparkle\" href=\"#add-a-little-sparkle\">\n  </a>\n  Add A Little Sparkle ✨\n</h2>\n\n<p>I'm in no way an expert when it comes to SEO or even scraping in general. I did happen across this tidbit in the 15 minutes of research I did on the subject. I'm still testing this to see what the impact looks like, but seems promising. 😇</p>\n\n<p>In your DevTo settings, you have the option to use the current rich-text markdown editor we all know and love <em>or</em>, you can switch to the legacy version. It's kind of an all or nothing deal, as far as I can tell. So you either have it <em>everywhere</em> or <em>nowhere</em>. But, it does give you access to the yaml front-matter for your posts and the ability to define your own brief description instead of relying on the first ~160 words you post. </p>\n\n<p>It seems like an awfully lot of work though, and I've kinda gotten used to the new markdown buttons (that I never use). So my solution? Let's just hit buttons until I find one that works. 🤓</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F43h29r9zbde4lnr4fy3u.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F43h29r9zbde4lnr4fy3u.png\" alt=\"DevTo Frontmatter for Post\" loading=\"lazy\" width=\"800\" height=\"262\"></a></p>\n\n\n<hr>\n\n<h2>\n  <a name=\"whats-mine-is-yours\" href=\"#whats-mine-is-yours\">\n  </a>\n  What's Mine is Yours 🍀\n</h2>\n\n<p>Whether you’re after more profile views or just tired of repeating yourself like me, this trick works. You can have my quick and easy <a href=\"https://github.com/anchildress1/devto-mirror\" target=\"_blank\" rel=\"noopener noreferrer\">DevTO-Mirror</a> running in less than 10 minutes. Just copy it, fork it, clone it, star it — whatever you like. And please, avoid Dante’s DevOps while you’re at it. 🔥😈</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"this-post-is-now-searchable\" href=\"#this-post-is-now-searchable\">\n  </a>\n  This post is now searchable 🛡️\n</h2>\n\n<p>Responsibly indexed by me &amp; the robots. Fueled by coffee ☕️, steered by OCD, and completely bypassed the 9th circle of hell. 🔥🚫</p>\n\n\n<hr>\n\n<blockquote>\n<p>🦄 No, I'm still not finished getting this character exactly where I want her to be for the banners. But they're <em>so</em> close that I had to use it. Minor tweaks still and an AI character (or several) to tag along still to come 💖</p>\n</blockquote>\n\n",
    "description": "My blog was invisible to AI search. Three hours later (and a solid round of OCD), I built a lazy Dev.to → GitHub Pages mirror. No flames required.",
    "slug": "weekend-hack-making-my-blog-ai-searchable-no-flames-required-16h5",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fejrxqn98k76uf04dmet4.jpg",
    "tags": [
      "writing",
      "ai",
      "seo",
      "chatgpt"
    ]
  },
  {
    "title": "Everything I Know About GitHub Copilot Instructions — From Zero to Onboarded (For Real) ⚡",
    "link": "https://dev.to/anchildress1/everything-i-know-about-github-copilot-instructions-from-zero-to-onboarded-for-real-4nb0",
    "date": "2025-08-13T11:45:00Z",
    "content_html": "<blockquote>\n<p><strong>Updated</strong>: Yes — I had to change the banner. It was killing me 🤣 I'm going to get Leonardo trained with this character <em>eventually</em>. In the meantime ChatGPT is doing just fine (after you ignore the personality change and retraining brought on by the v5 upgrade).</p>\n</blockquote>\n\n\n<hr>\n\n<blockquote>\n<p>🦄 I honestly hadn’t planned to write this one until next week, but the post I <em>did</em> write this week... disappeared. And redoing work you’ve already done? <strong>Zero fun.</strong> It’s like reheating French fries — <em>technically</em> edible, but you know it’s not going to be as good. So here we are, skipping the fries, and moving on!</p>\n\n<p>Also, you might want a snack for this one! It's a little more in-depth than usual. And yes — I did rate my own approach higher than Microsoft and GitHub. Obviously. 😛</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"tldr-%F0%9F%AA%BC\" href=\"#tldr-%F0%9F%AA%BC\">\n  </a>\n  TL;DR 🪼\n</h2>\n\n<p>Stop tossing Copilot into the deep end without floaties! Write repo instructions, test them, tweak them, build them, repeat. Whether you use Microsoft’s, Coding Agent’s, or my Instructionalist, the goal’s the same: keep Copilot coloring inside <em>your</em> lines.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"background\" href=\"#background\">\n  </a>\n  Background\n</h2>\n\n<p>This post is one part personal call-out (I <em>really</em> need testers 🙋‍♀️) and one part sequel to my most-read post <a href=\"https://dev.to/anchildress1/all-ive-learned-about-github-copilot-instructions-so-far-5bm7\">All I’ve Learned About GitHub Copilot Instructions (so far)</a>. </p>\n\n<p>If you've never read it or if you missed some of the more recent updates (yes — I always try to go back and call out changes whenever GitHub or VS Code changes something), then go check out the basics first before getting too deep here. If you're already up to speed? Great — hop on in and I'll give you the grand tour! 🏎️</p>\n\n<p>The original post still represents ~95% of how I handle custom instructions. I still use almost everything in it. But a few things have changed — new ways to get started, lessons learned from letting Copilot roam — on a leash — in enterprise codebases, and a sharper focus on making it write what you want instead of what it thinks you might have meant.</p>\n\n<blockquote>\n<p>🦄 Also, yes, <strong>shameless plug:</strong> I started an <a href=\"https://github.com/anchildress1/awesome-github-copilot\" target=\"_blank\" rel=\"noopener noreferrer\">awesome-github-copilot</a> repo. It’s still a WIP, but there are already a few gems in there. If you’re willing to be a guinea pig 🐹, reach out!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"why-repo-instructions-matter\" href=\"#why-repo-instructions-matter\">\n  </a>\n  Why Repo Instructions Matter ⚠️👇\n</h2>\n\n<p>Let’s set the scene. You’ve got a legacy monster app sitting in the corner. <em>No one</em> wants to touch it. And now a brand-new senior dev walks in the door. Would you say:</p>\n\n<blockquote>\n<p>“Hey, go refactor something. Good luck!”</p>\n</blockquote>\n\n<p><strong>Of course not!</strong> But that's <em>exactly</em> what's happening every single time you drop Copilot in cold with zero guidance or direction about what you expect. It will produce <em>something</em> — and it will produce it <em>confidently</em> — and based entirely on your repo’s <strong>worst</strong> patterns. You’ll get more code, faster, sure... but not at all better!</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Faxrf2duiuwwct24vvarw.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Faxrf2duiuwwct24vvarw.png\" alt=\"short dotted divider\" loading=\"lazy\" width=\"221\" height=\"15\"></a></p>\n\n<h3>\n  <a name=\"plan-an-upfront-15-min-%EF%B8%8F\" href=\"#plan-an-upfront-15-min-%EF%B8%8F\">\n  </a>\n  Plan an Up-Front 15 Min ⌚️\n</h3>\n\n<p>So instead of sending your golden senior developer off to the trenches on their first day, what if you just took <strong>15 minutes</strong> with them? <em>Explain</em> why half the code is wired together like an escape room puzzle, which systems will blow up if they touch the wrong file, and why that <code>java.io</code> serialization is still hanging around after three Java upgrades.</p>\n\n<p><strong>That’s <em>exactly</em> how you should treat Copilot.</strong> </p>\n\n<p>And you'll see the exact same returns from Copilot as you would any well-trained developer who's capable of reading documentation and making the right call when it matters.</p>\n\n<blockquote>\n<p>🦄 <strong>Be aware:</strong> This is <em>never</em> going to be a \"set-and-forget\" system. It doesn't need constant care like a newborn (after a solid round of testing), but it's still gonna grow and change with your app. App changes = instructions change. Always!</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Faxrf2duiuwwct24vvarw.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Faxrf2duiuwwct24vvarw.png\" alt=\"short dotted divider\" loading=\"lazy\" width=\"221\" height=\"15\"></a></p>\n\n<h3>\n  <a name=\"repo-instructions-to-the-rescue-%F0%9F%9B%9F\" href=\"#repo-instructions-to-the-rescue-%F0%9F%9B%9F\">\n  </a>\n  Repo Instructions to the Rescue 🚢🛟\n</h3>\n\n<p>Repo instructions are your chance to give Copilot a tour before it starts swinging a hammer. They work everywhere Copilot runs — IDE, GitHub.com, even mobile (according to the docs anyway). Put them in <code>main</code>, and suddenly everyone prompting Copilot is working from the same rules, style, and “don’t touch” list.</p>\n\n<p>If you're thinking about simply listing best coding practices just to show Copilot where commas go? You're not using them correctly. Start thinking of these files as the de facto onboarding for any senior dev and approach them with that level of info and let the auto-formatter handle the commas and new lines.</p>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> Copilot will naturally catch on, but a quick one-liner that says \"Follow rules in [eslint.config.js](./eslint.config.js)\" is generally all you need to have it start checking the lint commands automatically.</p>\n</blockquote>\n\n<p>Start small and don't get the file get too bloated. If you have a set of similar instructions, you can always break them out into a custom instruction file apart from the primary version. Then use <code>applyTo</code> in the front-matter to define which files they should be applied to. </p>\n\n<p>For example, you have specific database instructions that outline constraints or upcoming planned features and you want to start \"forward thinking\"? Put them in <code>.github/instructions/database.instructions.md</code> instead of the default file and add the <code>applyTo</code>. Any time Copilot references one of these DAO classes, these instructions would be attached automatically.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code><span class=\"nn\">---</span>\n<span class=\"na\">applyTo</span><span class=\"pi\">:</span> <span class=\"s\">src/main/java/dao/**/*</span>\n<span class=\"nn\">---</span>\n\n<span class=\"gh\"># My Custom Database Instructions</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h2>\n  <a name=\"the-three-best-ways-to-get-started\" href=\"#the-three-best-ways-to-get-started\">\n  </a>\n  The Three Best Ways to Get Started\n</h2>\n<h3>\n  <a name=\"1-microsofts-generate-instructions-in-vs-code-%EF%B8%8F%EF%B8%8F%EF%B8%8F\" href=\"#1-microsofts-generate-instructions-in-vs-code-%EF%B8%8F%EF%B8%8F%EF%B8%8F\">\n  </a>\n  1. Microsoft’s “Generate Instructions” in VS Code (⭐️⭐️⭐️)\n</h3>\n\n<p>When this first came out, I’ll be honest — I hated it. I mean, it was <em>bad</em>. “Go read the first line of every file in the repo, copy/paste them into a doc, and call it instructions” bad. It was like your coworker emailing you a Google search link instead of an actual answer.</p>\n\n<p>But I have to be fair — it’s better now. It actually reads your repo, finds the important stuff, maps out project structure, and even calls out workflows and automation. Still not perfect, but you could hand it to a new dev and they wouldn’t immediately run screaming.</p>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> Let your formatter + linter handle style rules so you don’t waste instruction space showing Copilot where commas go. Absolutely <em>no one</em> needs 14 examples of what JavaScript looks like in their instructions file.</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Faxrf2duiuwwct24vvarw.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Faxrf2duiuwwct24vvarw.png\" alt=\"short dotted divider\" loading=\"lazy\" width=\"221\" height=\"15\"></a></p>\n<h4>\n  <a name=\"how-to-run-it\" href=\"#how-to-run-it\">\n  </a>\n  How to run it:\n</h4>\n\n<p><details>\n  <summary>💻 Expand for screenshots in VS Code for generating Microsoft repo instructions</summary>\n  <p><strong>In VS Code:</strong></p>\n\n<ol>\n<li>Click the gear icon ⚙️ at the top of the chat window.</li>\n<li>Click <code>Generate Instructions</code>\n</li>\n<li>Let it run. </li>\n<li>Then, like any responsible repo owner, <strong>trim the fluff</strong> before committing.</li>\n</ol>\n\n<p><strong>Alternate:</strong></p>\n\n<ol>\n<li>Press <strong>Ctrl+Shift+P</strong> / <strong>Cmd+Shift+P</strong>.</li>\n<li>Search <code>Chat: Generate Workspace Instructions File</code>.</li>\n</ol>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fwtvb1n10qwh8pav7t2j5.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fwtvb1n10qwh8pav7t2j5.png\" alt=\"Two methods for generating Microsoft repo instructions in VS Code — Screenshots\" loading=\"lazy\" width=\"800\" height=\"242\"></a></p>\n\n\n</details>\n</p>\n\n<hr>\n<h3>\n  <a name=\"2-coding-agent-%EF%B8%8F%EF%B8%8F%EF%B8%8F%C2%BD-creeping-toward-4\" href=\"#2-coding-agent-%EF%B8%8F%EF%B8%8F%EF%B8%8F%C2%BD-creeping-toward-4\">\n  </a>\n  2. Coding Agent (⭐️⭐️⭐️½ – creeping toward 4)\n</h3>\n\n<p>This one’s a little different — it runs on <strong>Claude Sonnet 4</strong>, and no, you don’t get to change that. The upside? Claude’s got a good sense of architecture and implementation strategy, so it’s a bit like asking the “big picture” person on your team for a first draft. The downside? If you aren’t <em>specific</em>, it’ll start guessing... and you might get a fully stocked contributor guide when you really just wanted repo setup notes.</p>\n\n<p>Coding Agent is also PR-safe — it <em>always</em> creates a separate branch. You could tell it “go wild,” walk away, and it wouldn’t touch your main branch without a pull request. Bonus — you can prompt it with a mini-series and as long as it fits in the single prompt, it will tackle your whole list for a single premium request.</p>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> The <em>specifics</em> here are key. Think of it like you're leading KT. What are all the important highlights that you'll need to get the basics across? If you're not sure, it's better to <em>omit</em> something than be wrong or mention a <em>maybe</em> that will force Copilot to guess on your behalf.</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Faxrf2duiuwwct24vvarw.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Faxrf2duiuwwct24vvarw.png\" alt=\"short dotted divider\" loading=\"lazy\" width=\"221\" height=\"15\"></a></p>\n<h4>\n  <a name=\"how-to-run-it\" href=\"#how-to-run-it\">\n  </a>\n  How to run it:\n</h4>\n\n<p><details>\n  <summary>💻 Click for screenshots on GitHub.com for generating repo instructions with Coding Agent</summary>\n  <p><strong>At GitHub.com/Copilot:</strong></p>\n\n<ol>\n<li>Go to <a href=\"https://github.com/copilot\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub.com/Copilot</a>.</li>\n<li>Click <strong>Agents</strong> in the lefthand sidebar.</li>\n<li>Pick your repo + base branch (Copilot will still make its own branch from there).</li>\n<li>Prompt it: “Generate custom repository instructions for this repo” + any important <em>specifics</em>.</li>\n</ol>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F960ch7yi489y4wih18bj.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F960ch7yi489y4wih18bj.png\" alt=\"Coding Agent Screenshot — Access in GitHub\" loading=\"lazy\" width=\"800\" height=\"1038\"></a></p>\n\n\n</details>\n</p>\n\n<hr>\n<h3>\n  <a name=\"3-my-instructionalist-chat-mode-%EF%B8%8F%EF%B8%8F%EF%B8%8F%EF%B8%8F-with-bias-admitted\" href=\"#3-my-instructionalist-chat-mode-%EF%B8%8F%EF%B8%8F%EF%B8%8F%EF%B8%8F-with-bias-admitted\">\n  </a>\n  3. My “Instructionalist” Chat Mode (⭐️⭐️⭐️⭐️, with bias admitted)\n</h3>\n\n<p>Okay, yes, I’m biased. But this thing exists because I got tired of explaining — for the fourth or fifth time — why every repo should have good Copilot instructions.</p>\n\n<p>It’s a Q&amp;A where you (aka the person who actually knows the repo) fill in the stuff Copilot can’t guess: your SLAs, the weird dependencies that no one touches, the “if X happens at 3:15 AM, restart Y or the whole system falls over” kind of lore.</p>\n\n<p>It writes from “where we want to be,” not “where we are,” and builds in things the other methods skip — anti-patterns, testing goals, deployment notes, even gentle nudges like “acknowledge uncertainty” when multiple solutions exist.</p>\n\n<blockquote>\n<p>📢 <strong>Model note:</strong> This one’s running on GPT-4.1 too!</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Faxrf2duiuwwct24vvarw.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Faxrf2duiuwwct24vvarw.png\" alt=\"short dotted divider\" loading=\"lazy\" width=\"221\" height=\"15\"></a></p>\n<h4>\n  <a name=\"how-to-run-it\" href=\"#how-to-run-it\">\n  </a>\n  How to run it:\n</h4>\n\n<p><details>\n  <summary>💻 Click for step by step instructions for loading custom chat modes in VS Code</summary>\n  <p><br><strong>Copy the chat mode:</strong></p>\n\n<ol>\n<li>My repo is at <a href=\"https://github.com/anchildress1/awesome-github-copilot\" target=\"_blank\" rel=\"noopener noreferrer\">github.com/anchildress1/awesome-github-copilot</a>\n</li>\n<li>\n<p>Find <strong>The Instructionalist</strong> chat mode (or any other chat mode you can dig up) and copy raw content</p>\n\n<blockquote>\n<p>⚠️ <strong>Careful!</strong> Don't grab docs by mistake. You're looking for the file that ends in <code>.chatmode.md</code></p>\n</blockquote>\n</li>\n<li><p>Create a new <strong>chat mode</strong> in VS Code and replace default with pasted Instructionalist</p></li>\n<li><p>Select custom mode from the dropdown</p></li>\n<li>\n<p>Prompt Copilot to begin </p>\n\n<blockquote>\n<p>🦄 Try something like <code>Help me create repo instructions</code> and give it time to scan your setup. Then answer as much as you can — Copilot will filter out what it doesn't need.</p>\n\n<p>🎤 This is a perfect time to try the <strong>Speech</strong> plugin, but check the delay setting first so it doesn't send before you're ready.</p>\n</blockquote>\n</li>\n</ol>\n\n\n</details>\n</p>\n\n<p><iframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/JkEsZFrHf1U\" allowfullscreen loading=\"lazy\">\n</iframe>\n</p>\n\n<hr>\n<h2>\n  <a name=\"the-results\" href=\"#the-results\">\n  </a>\n  The Results 🐙\n</h2>\n<h3>\n  <a name=\"microsoft-in-vs-code-%F0%9F%AA%BC\" href=\"#microsoft-in-vs-code-%F0%9F%AA%BC\">\n  </a>\n  Microsoft in VS Code 🪼\n</h3>\n\n<p>Microsoft’s instructions were very structure-first. You get a “Welcome to this repository” blurb at the top (which I left out in mine, because <em>why?</em>) and sections like <code>Project Structure</code> and <code>Key Concepts</code>. I was surprised that it even calls out the status badge system. It’s tidy and functional. It works. </p>\n\n<blockquote>\n<p>🦄 It also adds a short “how to turn on custom instructions” note — which you shouldn’t need, unless you’ve gone in and toggled them off on purpose before.</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fpxjxlwpnsp76lqhf5v2u.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fpxjxlwpnsp76lqhf5v2u.png\" alt=\"Microsoft's Repo Instructions Intro\" loading=\"lazy\" width=\"800\" height=\"419\"></a></p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Faxrf2duiuwwct24vvarw.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Faxrf2duiuwwct24vvarw.png\" alt=\"short dotted divider\" loading=\"lazy\" width=\"221\" height=\"15\"></a></p>\n<h3>\n  <a name=\"coding-agent-via-github\" href=\"#coding-agent-via-github\">\n  </a>\n  Coding Agent via GitHub 🧩\n</h3>\n\n<p>Coding Agent’s version swaps the order around a bit and renames a few headers (although, I don’t consider “structure” and “principles” to be interchangeable — so if you use this method, consider renaming that!) It skips the status badge part in the intro but circles back later with its own <code>Status System</code> section. You also get content guidelines, writing style notes, and real markdown link refs for internal docs (which is best practice). </p>\n\n<p>But it also tries to sneak in a whole Contribution Guidelines section... which, let’s be honest, belongs in a <code>CONTRIBUTING.md</code>, not in instructions for Copilot. </p>\n\n<blockquote>\n<p>🦄 This is not the first time Coding Agent has tried to add every possible document GitHub makes available during a PR. It <em>seems</em> to be wired into the fact that if you have a public repo, then you need all of these things to exist. I'm going to dig into this more and report back.</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ffuy51ntkl9kj6z7thqyp.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ffuy51ntkl9kj6z7thqyp.png\" alt=\"Coding Agent Repo Instructions Intro\" loading=\"lazy\" width=\"800\" height=\"590\"></a></p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Faxrf2duiuwwct24vvarw.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Faxrf2duiuwwct24vvarw.png\" alt=\"short dotted divider\" loading=\"lazy\" width=\"221\" height=\"15\"></a></p>\n<h3>\n  <a name=\"the-instructionalist-custom-chat-mode\" href=\"#the-instructionalist-custom-chat-mode\">\n  </a>\n  The Instructionalist Custom Chat Mode 📢\n</h3>\n\n<p>My version ignores all of the “Welcome” and “Structure” boilerplate and instead jumps straight into \"Purpose\" and \"Value\". It defines chat modes, prompts, and instructions in a way that makes Copilot’s role more engaging and interactive. Copilot makes it clear these aren’t just generic AI prompts — they’re curated for all stages of the dev process. </p>\n\n<p>These don’t explicitly call out the status badge system, but it's referenced in context. And you get extras you won’t see in the other two: \"Maturity Level\" (so Copilot knows if the project is actively maintained or just camping in test mode), \"Dependencies on Other Systems\", and, yes, the occasional bit of lore. 😇 Plus explicit anti-patterns and testing/deployment plans.</p>\n\n<blockquote>\n<p>🦄 I have to call out this is the <em>only</em> version that requires the user to participate up front. So naturally it takes longer to spin up. If you're asking me? Completely worth the trade off.</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F7j7uc425eksdj2wxxeei.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F7j7uc425eksdj2wxxeei.png\" alt=\"Ashley's Custom Instructionalist Intro\" loading=\"lazy\" width=\"800\" height=\"558\"></a></p>\n\n<hr>\n<h2>\n  <a name=\"final-answer\" href=\"#final-answer\">\n  </a>\n  Final Answer? ⁉️\n</h2>\n\n<p>When you stack them side-by-side, you can see the philosophy differences right away:</p>\n\n<ul>\n<li>\n<strong>Microsoft</strong>: Orient Copilot by describing the map (structure, files, concepts).</li>\n<li>\n<strong>Coding Agent</strong>: Orient Copilot by describing the rules of the game (guidelines, principles, styles).</li>\n<li>\n<strong>My Instructionalist</strong>: Orient Copilot by describing the player’s role (purpose, value, patterns, anti-patterns).</li>\n</ul>\n\n<p>The truth? If you completely ignore the fact that I <em>clearly</em> think mine is the best (because of course I do), <strong>the ideal file is actually a hybrid</strong>. A little structure from Microsoft, a little guideline clarity from Coding Agent, and a little persona and context from The Instructionalist.</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fl5h4eew20e1wo357to61.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fl5h4eew20e1wo357to61.png\" alt=\"Example of Combined Instructions — Ashley's Instructionalist + Microsoft VS Code + GitHub Coding Agent Outputs Combined\" loading=\"lazy\" width=\"800\" height=\"914\"></a></p>\n\n<p>Every generated file is long, so don’t be afraid to cut anything that's not adding obvious value. Save extras in a <code>/future-review</code> folder. Keep essentials in the main file, and for the love of your PR sanity — <strong>update them every time something changes!</strong></p>\n\n<blockquote>\n<p>⚠️ Seriously, y'all! Old instructions are <strong>just as dangerous</strong> as no instructions at all!</p>\n</blockquote>\n\n<hr>\n<h2>\n  <a name=\"what-else-have-you-tried\" href=\"#what-else-have-you-tried\">\n  </a>\n  What Else Have You Tried?\n</h2>\n\n<p>Have you tried writing instructions by hand or generating your own with Copilot yet? Whether you go Microsoft, Coding Agent, my Instructionalist, some weird hybrid of all three, or something different entirely — I want to know what worked (and what exploded). </p>\n\n<p>Drop your results, screenshots, or horror stories in the comments. Bonus points if you rate yours higher than mine. 😛</p>\n\n<hr>\n<h2>\n  <a name=\"built-with-ai\" href=\"#built-with-ai\">\n  </a>\n  🛡️ Built with AI\n</h2>\n\n<p>...but only after I gave it a proper tour, told it where the coffee machine was, and warned it about the zombie curse actively infecting LLC.. </p>\n\n<p><em>No Copilots were left unsupervised during the making of this post.</em></p>\n\n<hr>\n\n\n<div class=\"ltag__user ltag__user__id__3224358\" style=\"border-color:#5c246a;box-shadow: 3px 3px 0px #5c246a;\">\n    <a href=\"/anchildress1\" class=\"ltag__user__link profile-image-link\">\n      <div class=\"ltag__user__pic\">\n        <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F3224358%2F7f675c78-6aa0-466a-a5a7-c3e35440d53a.png\" alt=\"anchildress1 image\" loading=\"lazy\">\n      </div>\n    </a>\n  <div class=\"ltag__user__content\">\n    <h2>\n<a class=\"ltag__user__link\" href=\"/anchildress1\">Ashley Childress</a><button name=\"button\" type=\"button\" data-info='{\"className\":\"User\",\"style\":\"full\",\"id\":3224358,\"name\":\"Ashley Childress\"}' class=\"crayons-btn follow-action-button whitespace-nowrap c-btn--secondary fs-base follow-user\" aria-label=\"Follow user: Ashley Childress\" aria-pressed=\"false\">Follow</button>\n</h2>\n    <div class=\"ltag__user__summary\">\n      <a class=\"ltag__user__link\" href=\"/anchildress1\">SSE @ Home Depot. Specialize in distributed backend systems. Happy and content playing second - all of the freedom and none of the responsibility!</a>\n    </div>\n  </div>\n</div>\n\n\n\n",
    "description": "Everything you need to know about Copilot custom instructions — why they work, how to write them, and how to go from zero to useful fast.",
    "slug": "everything-i-know-about-github-copilot-instructions-from-zero-to-onboarded-for-real-4nb0",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fqdl3jnnrbk2p3wrxbnhj.png",
    "tags": [
      "githubcopilot",
      "ai",
      "productivity",
      "learn"
    ]
  },
  {
    "title": "Herding Cats in Pajamas: Teamwork Across Time Zones 🐈‍⬛🕰️🛋️",
    "link": "https://dev.to/anchildress1/herding-cats-in-pajamas-teamwork-across-time-zones-242n",
    "date": "2025-08-08T11:16:00Z",
    "content_html": "<h2>\n  <a name=\"description-\" href=\"#description-\">\n  </a>\n  description: \"\"\n</h2>\n\n<blockquote>\n<p>🦄 I actually started a version of this post over a week ago, but instead ended up with <a href=\"https://dev.to/anchildress1/so-this-was-just-a-test-you-made-it-a-thing-6df\">So... This Was Just a Test - You Made It a Thing</a>. And no – I can’t even <em>begin</em> to explain how I started writing about teamwork and ended up with a mostly-coherent explanation of my general thought process over the past 2 months...</p>\n\n<p>Just trust the process – sometimes I take the scenic route, but I promise I’ll get us there <em>eventually</em>. Plus, I always have fun on the way! 😇🎉🎈</p>\n</blockquote>\n\n<h2>\n  <a name=\"background\" href=\"#background\">\n  </a>\n  Background 📝\n</h2>\n\n<p>The original thought was \"we never really learned how to do remote...\" Not <em>well</em> anyway. My job is 100% remote with distributed teammates from the Pacific US to India. We’re a relatively small team — fewer than 10 devs — split into three different dev roles. But I’m regularly chatting with other teams and posting in random channels (mostly the AI ones — not surprised? 😏).</p>\n\n<p>Since then, the original topic morphed thanks to a conversation with a friend, then expanded a little at work, and finally snowballed into a full-on get-it-out-of-my-system rant with my sister. Now? I’m sealing the deal with this post and moving on (metaphorically, anyway) 🪄✨</p>\n\n<h2>\n  <a name=\"the-dream-and-the-reality-that-showed-up\" href=\"#the-dream-and-the-reality-that-showed-up\">\n  </a>\n  The dream (and the reality that showed up)\n</h2>\n\n<p>For a lot of us, remote work was always the dream. Morning meetings in PJs (or the occasional stand-up in bed — ✋ guilty!), zero traffic, quiet when you need it, and the freedom to yell at the code as loud as you want without getting weird side-eyes. Best of all: SFW only applies if the mic is on. ✨ Pretty spectacular!</p>\n\n<p>When COVID first hit, it was chaos:</p>\n\n<ul>\n<li>Corporate jobs flipping to remote overnight.</li>\n<li>Scrambling for tools to connect.</li>\n<li>Bandwidth collapses when everyone in the house tried video calls at once</li>\n</ul>\n\n<blockquote>\n<p>☎️ Or my personal back-to-DSL nightmare that never had a chance from the start...</p>\n</blockquote>\n\n<p>We got through it, though. We basically went from “how do I unmute this thing?” to running three apps, two VPNs, and a custom Slack bot before breakfast. We found new best practices. Some went back to the office and thrived there (👋 to all my polar opposites), others stayed fully remote, but we all learned a little something along the way.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-generational-gap-problem\" href=\"#the-generational-gap-problem\">\n  </a>\n  The \"Generational Gap\" Problem 🌍\n</h2>\n\n<p>This isn’t about age — it’s the fundamental expectations at work that highlight certain stereotypes (for me, anyway). I'm talking about the generalized ones we deal with daily and are hard to navigate for everyone.</p>\n\n<p>We're in the beginnings of what I call the Gen Z–style of work: a focus on mental health, work-life balance, and meaningful projects that are about more than just a paycheck. We have health plans with mental health baked in by default, a push towards flexible schedules, more lenient maternity leave, and parental paid time off. Work supports personal projects and dedicated hack time for tinkering or learning new things that you're <em>actually</em> interested in.</p>\n\n<p>The Boomer-era mindset is hard to leave behind, though — you know, the \"work hard, stay late, forego overtime, do whatever it takes to get the job done, because the job provides for your family\" version of success. The Baby Boomer generation officially ended in 1964, so it's well past time for the unattainable \"always push harder\" and \"yes-man\" mentality to stop. The problem? Most of us were raised with this model guiding the way. So, it takes a little more deliberate effort to let it go. 🤏 </p>\n\n<blockquote>\n<p>🦄 Yes — I looked it up. If you're like me and went for the calculator, that's exactly 61 years ago.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"what-this-post-is-really-about\" href=\"#what-this-post-is-really-about\">\n  </a>\n  What this post is really about 🎯\n</h2>\n\n<p>Remote teamwork isn’t just being online at the same time or getting through stand-up in one piece. It’s about setting the right expectations — for yourself, for your teammates, and for everyone else who interacts with you. These next sections are the things I do daily to keep projects moving, avoid burnout, and make sure I’m not accidentally the reason someone else’s day gets derailed. 🚂</p>\n\n<p>So, whether you're a new dev, been at the job a while, or are just dev-adjacent — here's my simple list of impactful ways to manage your time across time zones, without disrupting your team in the process.</p>\n\n<h2>\n  <a name=\"1-your-time-is-golden\" href=\"#1-your-time-is-golden\">\n  </a>\n  1. Your time is golden ⏱️🥇\n</h2>\n\n<p>No one can do their best work when they’re exhausted, overworked, and stuck on a “five-minute fix” for four hours. Your calendar can save you from both burnout and rabbit holes — especially as you get promoted and meetings start eating into your dev time. If it’s not scheduled from start to finish, you’re probably underusing it.</p>\n\n<ul>\n<li>\n<strong>Set and share your work hours.</strong> Whether you’re 6 AM–2 PM or 11 AM–7 PM, make it visible in Outlook, Slack, and anywhere else your team interacts.</li>\n<li>\n<p><strong>Be selective with meetings.</strong> Accept what’s essential, mark the “maybes” as tentative, and decline what’s not worth your time. </p>\n\n<blockquote>\n<p>🦄 Got FOMO? Outlook has a setting to keep declined meetings visible so you don't need to worry about missing something.</p>\n</blockquote>\n</li>\n<li><p><strong>Block recurring time for routine tasks</strong>. Email/Slack replies, code reviews, lunch (don’t skip it else you’ll end up eating chips over your keyboard and pretending it was a meal!). Group them in one or two daily slots instead of scattering them across the day.</p></li>\n<li><p><strong>Protect deep work time.</strong> Use your largest open blocks for development (that's why we're here, right?) If those time blocks are missing right now, then go out a week or two in the future and schedule them <em>now</em>, before your calendar fills up again.</p></li>\n<li>\n<p><strong>End meetings early by default.</strong> If you’re the organizer, set them to finish 5–10 minutes before the hour. That buffer is gold for clearing quick messages before diving back in!</p>\n\n<blockquote>\n<p>🍳 Or, if you’re like me, raiding the cabinets for something that will cook itself in under a minute.</p>\n</blockquote>\n</li>\n</ul>\n\n<p>The goal here isn’t to be rigid — it’s to <strong>set boundaries</strong>. Once your workday is over, shut it down. Literally! Save your spot, leave a note-to-self for tomorrow, and log off without the guilt and go do literally anything else!</p>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> Have trouble walking away with things still to do? At least activate your <strong>built-in selective-ignore feature</strong> (aka status = away) at quitting time, and respond only to messages that truly can’t wait until tomorrow.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"2-everyone-elses-time-is-golden-too-%F0%9F%AB%B6\" href=\"#2-everyone-elses-time-is-golden-too-%F0%9F%AB%B6\">\n  </a>\n  2. Everyone else’s time is golden, too 🫶\n</h2>\n\n<p>It’s the cat-herding golden rule — you can’t demand respect for your own schedule <em>and</em> ignore everyone else’s.</p>\n\n<ul>\n<li>\n<p><strong>Schedule messages when possible.</strong> If the recipient isn’t online and it’s not urgent, time it for their working hours. </p>\n\n<blockquote>\n<p>💬 Bonus: you also avoid becoming the coworker whose name triggers phantom Slack notifications in people’s dreams.</p>\n</blockquote>\n</li>\n<li><p><strong>Use optional meeting invites.</strong> If someone’s attendance is a “nice to have,” mark them as optional and tell them why ahead of time.</p></li>\n<li><p><strong>Confirm availability before scheduling during a blocked time</strong> — if they’re already busy, don’t double-book them without at least asking. Send a quick message or call it out in the invite itself. Either way, be polite and acknowledge you’re really asking for more than a meeting.</p></li>\n</ul>\n\n<blockquote>\n<p>🦄 This is the magical golden rule in action — people are more likely to respect your time if you respect theirs first.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"3-keep-your-promises-or-at-least-track-them\" href=\"#3-keep-your-promises-or-at-least-track-them\">\n  </a>\n  3. Keep your promises (or at least track them) 📌\n</h2>\n\n<p>Have you ever had one of those “oh no” moments, when someone follows up on something that you <em>completely</em> forgot. Yeah — me too and it's not fun! Stop relying on memory. Use Slack’s “remind me” feature or <code>/remind</code> command to create instant follow-ups. Then make checking those reminders part of your daily routine.</p>\n\n<blockquote>\n<p>🪅 This also keeps your desk from looking like someone busted a piñata of post-its above your head. Win-win.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"4-make-code-reviews-conversations-by-default\" href=\"#4-make-code-reviews-conversations-by-default\">\n  </a>\n  4. Make code reviews conversations by default 💬\n</h2>\n\n<p>No, this doesn’t mean treating PR reviews like a tyrant — but it also doesn’t mean consistently ignoring bad code. </p>\n\n<ul>\n<li>\n<strong>If you notice it, call it out</strong> as a learning opportunity if nothing else. A quick FYI or FFR with an example, if you have one. Not 10 consecutive requests to change the code to <code>warn</code> instead of <code>error</code>. </li>\n<li>\n<strong>Honest questions go here, too.</strong> Sometimes you’ll see an interesting implementation that deserves a “what made you decide this option?” to start the thread.</li>\n<li>\n<p><strong>Ask your team for pushback</strong> — they <em>should</em> challenge some things, and sometimes they’re right! </p>\n\n<blockquote>\n<p>Sometimes I’ll notice something, ask Copilot, and it turns out we’re <em>both wrong</em>. Post those, too!</p>\n</blockquote>\n</li>\n<li><p><strong>If it’s time-sensitive?</strong> Call it out and post anyway — then immediately move the thread to a discussion or set up a post-review to talk it through after the deployment. </p></li>\n<li><p><strong>Long list of notes?</strong> clearly call out any <em>true</em> blockers in your main review comment. Give permission for others to resolve non-blockers, or simply ask for a quick thumbs up 👍 and do it yourself — no need to drag it out.</p></li>\n</ul>\n\n<blockquote>\n<p>🦄 Remember the goal is to improve code quality — make code reviews a friendly yarn-ball toss, not a hissy fit of who’s code is the most right 🧶😼.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"5-make-ai-part-of-your-toolkit\" href=\"#5-make-ai-part-of-your-toolkit\">\n  </a>\n  5. Make AI part of your toolkit 🦾\n</h2>\n\n<p>AI isn’t just for generating code. It can also:</p>\n\n<ul>\n<li>Plan work before you start building</li>\n<li>Offer ideas when you get stuck on a problem</li>\n<li>Be your rubber duck if you can’t decide which option fits better</li>\n<li>Confirm your approach ahead of time or offer alternatives</li>\n<li>Analyze logs for tricky prod issues</li>\n<li>Rewrite important communications for clarity or tone</li>\n<li>Brighten your day with a Yoda-style code review</li>\n</ul>\n\n<p>Be sure to follow your company’s rules on which tools are approved and <strong>never share private or internal data with unapproved tools</strong>. </p>\n\n<blockquote>\n<p>🦄 Trust me, you don’t want your next LinkedIn update to be “fired for feeding prod secrets to ChatGPT”. If your company doesn't approve it, sanitize the content first.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"its-not-easy-share-how-it-goes\" href=\"#its-not-easy-share-how-it-goes\">\n  </a>\n  It's Not Easy — Share How It Goes 🏁\n</h2>\n\n<p>No, it’s not an instant solution — change takes time. Habits can take <em>months</em> to form (according to <a href=\"https://www.ucl.ac.uk/news/2009/aug/how-long-does-it-take-form-habit#:~:text=4%20August%202009,the%20behaviour%20is%20performed%20automatically.\" target=\"_blank\" rel=\"noopener noreferrer\">this post</a>) And it's not just <em>your habits</em> it's multiplied by every person on your team. </p>\n\n<p>You won't succeed if you're not ready to back this up with a <em>little</em> force. Explain it to the boss ahead of time, if you need to, but you're the only one who's looking out for you! </p>\n\n<p>Seriously — just try it for a couple of weeks and see how it goes. Post back here with any pushbacks or questions — I’ll be watching for any shifts that make you less of a cat herder and more of a teammate. 🐈‍⬛ </p>\n\n<blockquote>\n<p>🦄 And if you think of anything else to add to the list, call that out, too!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"this-post-was-written-by-me-\" href=\"#this-post-was-written-by-me-\">\n  </a>\n  🛡️ This post was written by me —\n</h2>\n\n<h3>\n  <a name=\"and-factchecked-by-a-very-opinionated-chatgpt\" href=\"#and-factchecked-by-a-very-opinionated-chatgpt\">\n  </a>\n  and fact-checked by a very opinionated ChatGPT.\n</h3>\n\n<p><em>Zero cats were harmed in the making of this post, but a few yarn balls were thrown for science.</em> 🐈‍⬛🧶</p>\n\n",
    "description": "Distributed teamwork isn’t easy — especially when everyone’s remote. Here’s how I wrangle projects and people without losing my mind (or coffee)",
    "slug": "herding-cats-in-pajamas-teamwork-across-time-zones-242n",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fb7ng9jqlul1f9dai31e5.png",
    "tags": [
      "discuss",
      "career",
      "productivity",
      "developers"
    ]
  },
  {
    "title": "GitHub Copilot - Reusable Prompts Part 3: More Experiments, More Mayhem 🌀",
    "link": "https://dev.to/anchildress1/github-copilot-reusable-prompts-part-3-more-experiments-more-mayhem-552b",
    "date": "2025-08-06T11:48:00Z",
    "content_html": "<h2>\n  <a name=\"confession\" href=\"#confession\">\n  </a>\n  Confession ✨\n</h2>\n\n<p>I <em>almost</em> pulled the Procrastination card on this one. 🤏 Turns out, I probably skipped ahead in the Copilot-prompting Olympics, forgetting some folks are still stretching at the starting line. But I also promised one more round, and there’s still way too much I haven’t shared.</p>\n\n<p>So, here’s the plan 🧭: This post is a bit of a sampler platter — perfect for anyone tinkering with GitHub Copilot, whether you’re just getting started or you’re already deep into prompt experimentation. Maybe you’ve been following along and something still feels a little off, or maybe you found this post while hunting for new tricks to unlock a work project (or nudge your personal bucket list a little closer to “done”). No matter how you landed here, there’s something for you.</p>\n\n<blockquote>\n<p>If you’re not there yet — don’t worry! Just give it a try, see what happens, and check back next week for a completely new (and much less terrifying) approach. I'm always cooking up new ideas or finding inventive ways to break old ones 😇</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"quick-refresher-prior-prompting\" href=\"#quick-refresher-prior-prompting\">\n  </a>\n  Quick Refresher — PRIOR Prompting\n</h2>\n\n<p>If you just landed here, start with <a href=\"https://dev.to/anchildress1/github-copilot-everything-you-wanted-to-know-about-reusable-and-experimental-prompts-part-1-iff\">Part 1</a> (seriously — it’ll make this way less confusing). Not for my views, but because everything here builds on earlier concepts. If you’re up to speed, speed read the refresher and dive right in!</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F4ghqkmehwlkpzd81cc72.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F4ghqkmehwlkpzd81cc72.png\" alt=\"divider\" loading=\"lazy\" width=\"300\" height=\"4\"></a></p>\n\n<h3>\n  <a name=\"the-prior-system-for-reusable-prompts\" href=\"#the-prior-system-for-reusable-prompts\">\n  </a>\n  The PRIOR System for Reusable Prompts 🪄\n</h3>\n\n<p>Here’s my <em>not-so-secret</em> sauce for writing prompts that actually work:</p>\n\n<ol>\n<li>\n<strong>Persona</strong> – Give Copilot a role to play (the weirder, the better)</li>\n<li>\n<strong>Requirements</strong> – What does “done” look like? Be crystal clear.</li>\n<li>\n<strong>Impediments</strong> – Constraints that keep Copilot out of the ditch.</li>\n<li>\n<strong>Output</strong> – How and what you want returned. Structure = repeatable.</li>\n<li>\n<strong>Reference Examples</strong> – Real, honest-to-goodness examples, both wins and fails.</li>\n</ol>\n\n<blockquote>\n<p>🦄 Yes, I made it up. And yes, it works! If you manage to break it, message me for a virtual coffee and a gold star. ☕️🌟 <br>\nCreativity welcome, but shenanigans encouraged!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"start-fresh-then-optimize\" href=\"#start-fresh-then-optimize\">\n  </a>\n  Start Fresh, Then Optimize 🕵️‍♂️\n</h2>\n\n<p>If you’ve gone through all the PRIOR steps and Copilot is <em>still</em> giving you answers that feel...off (“I said blue sky — that <em>is</em> a sky, but why is it purple?”), don’t panic! Before you go on a prompt-fixing spree, try these quick checks first:</p>\n\n<blockquote>\n<p><strong>Truth bomb:</strong> 99% of Copilot “failures” are just crummy (or missing) repo instructions. Don’t believe me? Treat it like the “Copilot Easter Egg Hunt”: if you run into a prompt problem you genuinely can’t solve, drop it in the comments. If you actually stump me, you’ll get full bragging rights — and I’ll spotlight your curveball (and, if I crack it, share the fix) in a future post. Nine times out of ten, though? Tweak your instructions and the problem disappears.</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F4ghqkmehwlkpzd81cc72.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F4ghqkmehwlkpzd81cc72.png\" alt=\"divider\" loading=\"lazy\" width=\"300\" height=\"4\"></a></p>\n\n<h3>\n  <a name=\"stuck-try-these-quick-fixes\" href=\"#stuck-try-these-quick-fixes\">\n  </a>\n  Stuck? Try These Quick Fixes 🪤\n</h3>\n\n<ol>\n<li><p><strong>Check Your Input:</strong> Is your question <em>actually</em> clear? Would your past self, or a random teammate, know exactly what you mean? If not, rewrite your ask with a little more context or supply explicit examples.</p></li>\n<li><p><strong>Ask Copilot to Explain:</strong> Use Copilot’s “explain this code” or similar command on your prompt, not your code. What does it think you want? If it’s wildly off, break it down into smaller sections and review each one at a time.</p></li>\n<li><p><strong>Review Repo Instructions:</strong> Open your <code>.github/copilot-instructions.md</code> file and just read it <em>out loud</em>. Does it make sense, or does it sound like a jumbled set of copy-paste rules? Most issues start here!</p></li>\n<li><p><strong>Start With Defaults:</strong> <em>Temporarily</em> comment out all your custom instructions and use a “vanilla” Copilot prompt. Is the result better, worse, or just... different? This is a simple way to isolate and test if your changes are helping or hurting. Slowly add one at a time back, and send multiple prompts in between.</p></li>\n<li><p><strong>Prompt-Within-a-Prompt:</strong> Ask Copilot, “What instructions are you following right now?” or “How would you summarize your task?” Sometimes the AI will spill its logic, letting you spot mismatches you never expected.</p></li>\n<li><p><strong>Screenshot the Weird:</strong> Save any oddball results Copilot gives you. Patterns usually emerge — <em>especially</em> when you look back at several examples.</p></li>\n</ol>\n\n<blockquote>\n<p>If you take my system, remix it, and invent a prompt that’s even better — share it with the group (me!) What worked for you or failed when you least expected it?</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F4ghqkmehwlkpzd81cc72.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F4ghqkmehwlkpzd81cc72.png\" alt=\"divider\" loading=\"lazy\" width=\"300\" height=\"4\"></a></p>\n\n<h3>\n  <a name=\"realworld-example-%F0%9F%AB%A5\" href=\"#realworld-example-%F0%9F%AB%A5\">\n  </a>\n  Real-world Example 🫥\n</h3>\n\n<p>A few weeks ago, I was building out reusable parts for conventional commit prompts. They’d worked fine across several projects — until I broke them out into separate modules. Suddenly, Copilot switched from helpful answers to just summarizing its entire conversation history, no matter what I asked. 😡🤷‍♀️</p>\n\n<p>So I went back to basics, commenting out nearly everything in the prompt and adding back small sections one at a time. Eventually, I found the culprit: a single instruction forcing Copilot to re-read its whole history, flooding the context window and making it summarize the past instead of the changes. 😵‍💫</p>\n\n<p>Even after finding the strange trigger, I didn’t really understand <em>why</em> it broke things. Cue ChatGPT’s helpful “explain like I’m five” walkthrough of what was happening behind the scenes (later confirmed with Copilot’s debug logs). Once I removed that one line, everything worked like normal again. 🌈</p>\n\n<p>And that’s the <em>real</em> lesson: Copilot — or any AI assistant — is just another tool in your toolbox. When it starts acting up or giving weird results, don’t panic. Debug it the same way you’d debug any stubborn code or logic bug: one step at a time. 😉</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"metaoptimize-your-prompts\" href=\"#metaoptimize-your-prompts\">\n  </a>\n  Meta-Optimize Your Prompts 🤖🤝🤖\n</h2>\n\n<p>Still not satisfied? Here’s where you really level up — try this: paste your prompt into ChatGPT and ask it to review and suggest improvements. Even better, try giving ChatGPT the role of Merge Goblin and see what it does with your own instructions.</p>\n\n<p>Seriously, I do this <em>all</em> the time! I pasted the <a href=\"https://dev.to/anchildress1/github-copilot-reusable-prompts-part-2-walkthrough-real-examples-17mh\">original Merge Goblin example</a> into an untrained GPT chat with something like this:</p>\n\n<blockquote>\n<p>How would you interpret these instructions if you were Copilot? Spot any places where these instructions could be misunderstood or improved. Output a bulleted list of suggested improvements.</p>\n</blockquote>\n\n<p>I got suggestions like:</p>\n\n<ul>\n<li>Clarify input handling (summaries, code, chaos—Merge Goblin will handle it)</li>\n<li>Make emoji and format rules ironclad</li>\n<li>Keep clarifying questions brief and goblin-y</li>\n<li>Ban all meta-phrases and markdown</li>\n</ul>\n\n<blockquote>\n<p>🥷 Steal what works. Ignore what doesn’t. Bonus points if you out-weird me with your improvements!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"structure-with-xmlstyle-fake-tags\" href=\"#structure-with-xmlstyle-fake-tags\">\n  </a>\n  Structure with XML-Style (Fake) Tags 🗂️\n</h2>\n\n<p>AI <em>loves</em> order and structure is magic. 🧚 I started tagging my prompts with XML-style “blocks” that Copilot can easily scan. It helps make sure Copilot doesn't take something from one section and apply it to something completely unrelated.</p>\n\n<p>Example:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code><span class=\"nt\">&lt;prompt</span> <span class=\"na\">id=</span><span class=\"s\">\"generate-simple-commit-message\"</span><span class=\"nt\">&gt;</span>\n\n<span class=\"gh\"># Merge Goblin Commit Prompt</span>\n\n  <span class=\"nt\">&lt;persona</span> <span class=\"na\">id=</span><span class=\"s\">\"merge-goblin\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;purpose&gt;</span>You are the Merge Goblin 🧌...<span class=\"nt\">&lt;/purpose&gt;</span>\n    <span class=\"nt\">&lt;interactions&gt;</span>One-liners, no punctuation, etc.<span class=\"nt\">&lt;/interactions&gt;</span>\n  <span class=\"nt\">&lt;/persona&gt;</span>\n  <span class=\"nt\">&lt;requirements&gt;</span>Follow commit message rules...<span class=\"nt\">&lt;/requirements&gt;</span>\n  <span class=\"nt\">&lt;impediments&gt;</span>NO GUESSING. NO MARKDOWN.<span class=\"nt\">&lt;/impediments&gt;</span>\n  <span class=\"nt\">&lt;outcomes&gt;</span>Output like: 🤖 Refactor login error handling<span class=\"nt\">&lt;/outcomes&gt;</span>\n  <span class=\"nt\">&lt;reference-examples&gt;</span>\n    <span class=\"nt\">&lt;example</span> <span class=\"na\">class=</span><span class=\"s\">\"valid\"</span><span class=\"nt\">&gt;</span>🤖 Refactor profile page layout for mobile<span class=\"nt\">&lt;/example&gt;</span>\n  <span class=\"nt\">&lt;/reference-examples&gt;</span>\n<span class=\"nt\">&lt;/prompt&gt;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>💡 <strong>Pro tip:</strong> If GitHub’s preview looks wonky, just add a blank line before and after the tag — problem solved.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"make-it-modular\" href=\"#make-it-modular\">\n  </a>\n  Make It Modular 🧩\n</h2>\n\n<p>Let’s clear this up: I don’t mean splitting everything into a zillion files for the heck of it. I’m talking about extracting those repeatable bits — the tasty, reusable chunks — just like you would with code (or, you know, leftover pizza ✋🍍🍕). </p>\n\n<p>Yank the core instructions, constraints, or examples into their own little spot in <code>.github/instructions</code> with an <code>.instructions.md</code> extension. Bam! Now, whenever you want to go from “plain vanilla commits” to “full-on conventional,” just point Copilot to the right file. Less rewriting, less chaos, more time for snacks. 🥤</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F4ghqkmehwlkpzd81cc72.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F4ghqkmehwlkpzd81cc72.png\" alt=\"divider\" loading=\"lazy\" width=\"300\" height=\"4\"></a></p>\n\n<h3>\n  <a name=\"but-dont-stop-there-make-it-autonomous\" href=\"#but-dont-stop-there-make-it-autonomous\">\n  </a>\n  But Don’t Stop There — Make It Autonomous! 🦿\n</h3>\n\n<p>While you're at it — why not take it up a notch? You can write a prompt with the same conditional logic that you'd use to write code! Combined with the <code>applyTo</code> property (which lets you target Copilot instructions to specific files, languages, or scenarios), you've got a built-in custom response every time! </p>\n\n<p>This works for Copilot Chat in your IDE, GitHub.com, Coding Agent, Copilot Reviews — if you can think it up, then there's a way to tell Copilot exactly what you want, how to get it, and what it should look like once it's done. 🤯</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"rabbit-holes-dime-jar-runway-recap-all-in-one\" href=\"#rabbit-holes-dime-jar-runway-recap-all-in-one\">\n  </a>\n  Rabbit Holes, Dime Jar, Runway Recap (All in One) 🐇💰🛫\n</h2>\n\n<p>Break it. Smash it. Rebuild it with duct tape. Try stuff so weird you’ll laugh when it works (because it will — sometimes scarily well). If you manage to break the internet? Send me screenshots! Seriously, the more bonkers, the better. That’s how the best discoveries happen. 🗺️</p>\n\n<blockquote>\n<p>No, I’m not telling you to burn down production. But that new feature? Maybe there’s a Smeagol who’s gonna help you today. And Smeagol is on a quest for \"my precious\" who can only be found by collecting smelly code and leaving perfect refactors in its place.<br>\nJust because it’s not adding ring emojis all over the user docs 💍💍💍 doesn’t mean that Copilot can’t be Smeagol for the day!</p>\n</blockquote>\n\n<p><strong>Go down the rabbit holes:</strong> 🕳️<br>\nVariables, checklists, templates, self-reviews, XML tags, markdown tricks — whatever pops into your head. Most of my best Copilot moments have come from ignoring the “standard” advice and experimenting until something just clicked.</p>\n\n<p><strong>Leave a dime, take a dime:</strong> 🪙<br>\nI’ve loaded my <a href=\"https://github.com/anchildress1/awesome-github-copilot\" target=\"_blank\" rel=\"noopener noreferrer\">awesome-github-copilot</a> repo with new, wild, and mostly untested chat modes. Brave enough to try them? Fork, remix, report back, or just outright steal the ideas! Feedback is gold — and if you’ve got a Copilot horror story or a killer hack, post it below and I'll spotlight your moment in a future post!</p>\n\n<p><strong>Runway Recap:</strong> 🛬<br>\nStructure and curiosity will take you way farther than any so-called “best practice.” Dare to break things. Try, fail, repeat — and let me know what you discover. That next big breakthrough? I’m willing to bet it comes from someone who didn’t follow the rules.</p>\n\n<blockquote>\n<p>🍀 May whatever you’re building go smoothly, and may your AI always stay delightfully on the rails. If it ever goes rogue... well, at least you’ll have a great story for next time!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"final-footer-fresh-never-reused\" href=\"#final-footer-fresh-never-reused\">\n  </a>\n  🛡️ Final Footer: Fresh, Never Reused\n</h2>\n\n<p>This post was conjured up by me &amp; the robots — Smeagol, Merge Goblin, pizza, and a sprinkle of AI magic. <br>\n<em>The content in this post is 100% mine, just sweetened and structurally sound thanks to ChatGPT.</em></p>\n\n",
    "description": "Part 3 of the Reusable Prompts series covers troubleshooting when GitHub Copilot prompts don’t work as expected — with personal examples, optimization tips, structured syntax, and how to split, share, and reference prompts later.",
    "slug": "github-copilot-reusable-prompts-part-3-more-experiments-more-mayhem-552b",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fgdsj7uaxrvtp32kx9ojo.png",
    "tags": [
      "githubcopilot",
      "ai",
      "tutorial",
      "productivity"
    ]
  },
  {
    "title": "Guess what?! I passed the Pearson VUE GitHub Copilot Certification Exam 🏆✨",
    "link": "https://dev.to/anchildress1/oh-i-have-big-news-guess-what-i-got-yesterday-1jca",
    "date": "2025-08-02T22:04:33Z",
    "content_html": "<p><a href=\"https://learn.microsoft.com/api/credentials/share/en-us/anchildress1/1121633CBF5C85C?sharingId=60F9D8D3EC60E986\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fk2rf3eumvo8obm7hjdlt.png\" alt=\"Ashley's Copilot Certificate\" loading=\"lazy\" width=\"800\" height=\"602\"></a></p>\n\n\n<hr>\n\n<p>Okay, technically, I’ve known this was coming for a while, and honestly, I’ve felt ready even longer than that. Yes, I celebrated with a gift Leonardo subscription to myself. (I’ll be way more excited about it once those 429 errors slow down enough for me to actually play with it again.) </p>\n\n<p>Seriously — if you’re even considering Leonardo: it’s exploding right now, but if you’re like me (dev brain: ‘ooh, code banners!’), know that Leonardo is <em>pure artist</em>. Artists and devs? Different planets, sometimes.</p>\n\n<blockquote>\n<p>🎨 The first time I tossed it a dev prompt: “I need a banner image representing a group of diverse engineers upgrading Java with Copilot.” I expected... I dunno, coffee? Maybe a way-too-big wrench? Instead: <strong>FOUR wildly different, amazing steampunk apocalypse scenes with a diverse squad running away from a tank the size of a data center.</strong> 🤣</p>\n\n<p>Yes, Leonardo — sometimes I <em>do</em> feel like that with Java, but it wasn’t exactly what I had in mind! Still, totally worth it just to immortalize Java as the official steampunk language. 🚂⚙️</p>\n</blockquote>\n\n<p>But let’s set art aside, because:</p>\n\n<p><strong>I did it! I am now officially GitHub Copilot certified!</strong> 🫶</p>\n\n<p>This one’s been on my list <em>forever</em>, but once Microsoft announced their plan to switch everything to Pearson VUE, I gave it a month before risking the “please excuse our growing pains” phase. So, here we are!</p>\n\n<blockquote>\n<p><strong>Spoiler:</strong> They’re still ironing out the kinks. The test itself? Needs work, but passable. The VUE app? Good, even though they made me download it twice, because why not. 🤷‍♀️</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"tldr\" href=\"#tldr\">\n  </a>\n  TL;DR\n</h2>\n\n<ul>\n<li>\n<strong>Pearson Vue online process:</strong> Better than expected! (Not 100% bug-free, but not a disaster.) 👍</li>\n<li>\n<strong>O’Reilly Copilot prep course:</strong> Absolutely worth it (and also pointed out all the places I thought I knew but really needed to revisit) 📚</li>\n<li>\n<strong>Giving them a month to get their act together?</strong> LOL. Nope. Not nearly enough to fix all the quirks between the doc and real life. ⏳</li>\n<li>\n<strong>I’ll follow up soon</strong> with an actual step-by-step for anyone prepping for the GitHub Copilot Certification exam (spoiler: bring snacks — you’ll be reading a lot of documentation!) 🍿📝</li>\n</ul>\n\n\n<hr>\n\n<h2>\n  <a name=\"testing-signup-amp-study-materials\" href=\"#testing-signup-amp-study-materials\">\n  </a>\n  Testing Signup &amp; Study Materials 🖥️📄\n</h2>\n\n<p>I signed up via Microsoft Learn (work perk!). The sign-up process was so simple I forgot it even happened. Then I intentionally ignored the looming test until the last second — do not recommend, unless you’re also a chronic Copilot abuser (also not recommended!)</p>\n\n<p>Microsoft will port you to Pearson VUE for the real process. Pro tip: for <em>THIS</em> step, do whatever Microsoft tells you. (Only this step. Later? All bets are off.)</p>\n\n<blockquote>\n<p><strong>Super important:</strong> If you use a work/corporate Microsoft account, also link your personal one! You’ll still get work discounts, but your certification stays with you — not the company. Seriously, you do NOT want to have to re-earn this badge if you switch jobs.</p>\n</blockquote>\n\n<p>If you’re testing online: Read Pearson’s test space policy. You need an enclosed room, one monitor/laptop, and 3 hours of zero interruptions. Those “bathroom test” legends? No longer allowed. No refunds either if you try it and get booted.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"do-the-certification-prep-study\" href=\"#do-the-certification-prep-study\">\n  </a>\n  Do the Certification Prep + Study! 📚💡\n</h2>\n\n<p>First thing — take a prep course! I went with <a href=\"https://www.oreilly.com/live-events/github-copilot-certification-crash-course/0642572013405/\" target=\"_blank\" rel=\"noopener noreferrer\">Tim Warner’s at O’Reilly</a> (another work perk!)</p>\n\n<p>I expected it to be a snoozefest but nope, it’s actually engaging, and the group vibe is fun. Their class dashboard is super flexible, so get comfy for 4+ hours.</p>\n\n<blockquote>\n<p>⚠️ <strong>Warning:</strong> the recordings can take up to 2 days <em>after</em> the class, so if you miss part of it, you can’t just catch up right away.</p>\n</blockquote>\n\n<h3>\n  <a name=\"bonus-drama\" href=\"#bonus-drama\">\n  </a>\n  Bonus drama 🧠\n</h3>\n\n<p>This is also where I learned about “brain dump” practice tests. Some (like a few on Udemy) get flagged for stolen content, and if you use those, Microsoft can yank your cert <strong>for life</strong>. Not my rabbit hole, but if anyone has the actual “offenders” list, drop a link in the comments!</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"day-before-the-test\" href=\"#day-before-the-test\">\n  </a>\n  Day Before the Test 🕰️🛠️\n</h2>\n\n<p>Picture this: 10pm, my calendar looks more like a merge conflict than any form of organization, and I’ve just spent a half-day in a prep class (which was great, but just pointed out all the things I <em>thought</em> I knew and needed to go double-check). </p>\n\n<p>Then there's my test space setup: I’m crammed into the tiniest corner of my house — the only space far enough from everyone else, where I can shut the door and (hopefully) not be interrupted. My not-quite-center desk barely fits, squeezed between the footboard and the wall, and there’s just enough room for me, my laptop, and a single can of Coke.</p>\n\n<blockquote>\n<p>Not that it was uncomfortable once I got myself situated, but any form of movement meant I was hitting something (mainly myself) on the desk or bed  🛏️💻🪑</p>\n</blockquote>\n\n<p>You won't want to wait until the last minute like I did, but also, there’s no need to set up a week early. The actual system test:</p>\n\n<ol>\n<li>Download zip &gt; Unzip &gt; Open &gt; Start.</li>\n<li>Wait... spinner... okay, done.</li>\n<li>Mic, sound, webcam. Check. </li>\n<li>Internet + background system. Check.</li>\n</ol>\n\n<p>Don’t use your work computer unless you’re a full admin, with VPN OFF, and you can give <em>full system control</em> to the test app. Restart for a clean slate, and skip the “reopen windows” part. Paperwork? Nada. Until you actually check in. 🗂️</p>\n\n<blockquote>\n<p><strong>The truth?</strong> My work laptop was more than fine. They stressed the point until I began to worry, but 0 issues. However, I get pretty much free reign with it. If your's is locked up tighter than admin? You could have issues!</p>\n</blockquote>\n\n<h2>\n  <a name=\"test-day\" href=\"#test-day\">\n  </a>\n  Test Day 🎬😎\n</h2>\n\n<p>When you register, it defaults to an ungodly early time slot — but you can change it to what works for you. (Unless you are that <em><strong>weird morning person</strong></em> who's usually awake with the sun — you know who you are — just a friendly callout payback 😇).</p>\n\n<h3>\n  <a name=\"signin\" href=\"#signin\">\n  </a>\n  Sign-In 🛎️🔑\n</h3>\n\n<p>You can sign in up to 30 minutes early. But the second you open that VUE test app, you’re stuck: no phone, no other apps, no moving. Meaning early birds get to wait longer; last-minute folks like me rush in, power nap, and join the waiting line just in time.</p>\n\n<p>After everyone’s in the system:</p>\n\n<ol>\n<li>Download app (fresh), system test (again), green light.</li>\n<li><strong>Scan your test space</strong></li>\n<li>Begin exam</li>\n</ol>\n\n\n<hr>\n\n<h3>\n  <a name=\"the-picture-game-my-desk-my-rules\" href=\"#the-picture-game-my-desk-my-rules\">\n  </a>\n  The Picture Game: My Desk, My Rules 🖼️🥤\n</h3>\n\n<p>Pearson wants 7 pictures, all from your phone:</p>\n\n<ul>\n<li>You, against a solid background. Easy. </li>\n<li>ID, front and back, on a dark surface. Done.</li>\n<li>Workspace: front, back, left, right...</li>\n</ul>\n\n<p>Insert where I made my first mistake — the Pearson Vue phone app lists strict instructions for <em>how</em> they want these pictures. They give you a little diagram to tell you exactly where they want you in relationship to the space when you snap the picture. I'm looking at it and studying... knowing good and well this is not going to work for what they want, but the rules said stand on X so I get as close to X as I can without acrobatics and snap the picture.</p>\n\n<p>Next the \"greeter\" came online (these are the people responsible for making sure your test area meets all criteria for taking the online exam) and of course the pictures aren't clear enough. So we go through the whole “spin around” and show the whole room. </p>\n\n<blockquote>\n<p>Honestly, it’s a live-action improv skit: me, my laptop, and the world’s smallest mouse trap of a space. Yes, Pearson, it's just a Coke. No, there’s nothing else hiding in here unless you count my dignity — which definitely disappeared between picture three and four. 🙈🫠</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"exam-begins-more-dramatics-ensue-%F0%9F%AB%A3\" href=\"#exam-begins-more-dramatics-ensue-%F0%9F%AB%A3\">\n  </a>\n  Exam Begins: More Dramatics Ensue 🫣🎭\n</h3>\n\n<p>Now that's out of the way, we can get down to business. <strong>Ready, set, go!</strong> Instructions pop up first (read them again). Timer (hide it if you want to stay sane). And Begin. ⏱️</p>\n\n<p>I’m focused, in the zone — then, out of nowhere: <strong>Click. “Is there someone in the room with you?”</strong> Me, blinking at the screen: “No... Oh, wait, I was just talking to myself! I swear I never read a question ou–\" Click. Chat window: “Continue the exam.” 😅</p>\n\n<p>Well.. alright then. I guess we're good. Five minutes later — interrupted <strong>again</strong>: “If you don’t stop talking, I’ll cancel your exam.” <em>WHAT?!</em> “Okay! Not a problem — I'll stop.\" 🤐</p>\n\n<blockquote>\n<p>Now I really could have used a break. Microsoft policy explicitly allows unscheduled breaks (timer keeps running, can’t revisit earlier questions). But... I needed to review everything before submitting, so I just clammed up and finished. It was painful!</p>\n</blockquote>\n\n<p>By the time the exam was over I'm super antsy — energy is boiling over from the long stretch of silence — but the only thing left is exactly 7 questions I've flagged for feedback to Microsoft (this is the only way you're allowed to mention anything about specific questions after the test is finished). Checked the timer — 20 minutes left — perfect! 🤗</p>\n\n<p>I told the proctor, “I’m taking a quick break, answers are all submitted.” Stepped five feet away, and suddenly, a <em>new</em> proctor:<br>\n“Hello? Are you there? You need to be in front of the camera!” Door open, I explained, “Just the restroom, all submitted!” “You can’t leave the view of the camera.” Well, I <em>know</em> they didn't want me to take the computer with me — so honestly, what did they want me to do? 😲</p>\n\n<blockquote>\n<p><strong>Confession:</strong> I was so done with being polite at that point. I'm already jumping out of my skin from the roaring silence for more than an hour. Now even though Microsoft’s policy says unscheduled breaks are allowed at any point, I'm getting threatened for no reason I can discern.</p>\n</blockquote>\n\n<p>After three rounds of “You can’t leave!” with \"But I'm already finished. It's just the feedback.\" I gave up. “Alright – fine! No feedback, then.” Click. Click. Done. ...Crickets. 🦗</p>\n\n<p>I sat there, stunned. Camera turned off, grade popped up — yes, I passed, but <strong>seriously, <em>what just happened</em>?</strong></p>\n\n<blockquote>\n<p>Later, I went digging and found a Microsoft blog post from 2022 that clearly shows: <code>&lt;button&gt;</code>⏸️ Take a Break<code>&lt;/button&gt;</code><br>\nDid my exam have a break button? NOPE. Well then, <em>THAT</em> explains it. 😑🙃</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"moral-of-the-story\" href=\"#moral-of-the-story\">\n  </a>\n  Moral of the Story 💬\n</h2>\n\n<p>I left a very thorough explanation in Pearson VUE’s feedback form. Yes, I was frustrated, but this isn’t about the proctors or the greeters — they were never rude. It’s either training, documentation, or both! </p>\n\n<p>I wish my voice would have made it to Microsoft, because I had <em>plenty to say</em> about their process and I had spent precious time preparing to do so! Now I just hope the next person either gets that missing break button — or at least they update the docs!</p>\n\n<blockquote>\n<p><strong>Would I do it again?</strong> Absolutely! Things happen. This is my dramatic version of events so you don’t have to repeat my mistakes (and hopefully had a little fun along the way). Besides — ultimately, I got exactly what I wanted when I started! 💞✨</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"nightmare-testing\" href=\"#nightmare-testing\">\n  </a>\n  Nightmare Testing? 🤪\n</h2>\n\n<p>If you (or someone you know) have an “unexpected twist” or “oddly sideways” certification or exam story — please share it below! </p>\n\n<blockquote>\n<p>Seriously, don’t leave me hanging as the only one with this kind of experience? 🙏</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"this-was-not-a-solo-quest-\" href=\"#this-was-not-a-solo-quest-\">\n  </a>\n  🛡️ This was not a solo quest —\n</h2>\n\n<h3>\n  <a name=\"chatgpt-tagged-along-for-the-ride\" href=\"#chatgpt-tagged-along-for-the-ride\">\n  </a>\n  ChatGPT tagged along for the ride 🤖🧑‍💻\n</h3>\n\n<p><em>The content in this post is 100% mine, just censored and sweetened with ChatGPT</em> 🍬✨</p>\n\n",
    "description": "New as of July 2025: GitHub Copilot certification now runs on Pearson VUE. How I registered, what to expect on exam day, rules, gotchas, and a few funny moments.",
    "slug": "oh-i-have-big-news-guess-what-i-got-yesterday-1jca",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fox7kikbm3uxzdegqu276.png",
    "tags": [
      "community",
      "watercooler",
      "githubcopilot",
      "developers"
    ]
  },
  {
    "title": "GitHub Copilot: Reusable Prompts, Part 2 — Walkthrough & Real Examples",
    "link": "https://dev.to/anchildress1/github-copilot-reusable-prompts-part-2-walkthrough-real-examples-17mh",
    "date": "2025-07-30T12:00:00Z",
    "content_html": "<blockquote>\n<p>Hey, welcome back 👋 If you haven't had a chance to read Part 1 introducing all of the different working parts of GitHub Copilot’s reusable prompts — <a href=\"https://dev.to/anchildress1/github-copilot-everything-you-wanted-to-know-about-reusable-and-experimental-prompts-part-1-iff\">check it out here</a>.</p>\n</blockquote>\n\n<p>Before we jump in, ask yourself this: <strong>How well can you anticipate Copilot’s response to your prompts?</strong></p>\n\n<p>If it still feels like a surprise every time, I seriously recommend setting aside 30 minutes to just <em>play</em>. You don’t need anything fancy — no reusable YAML, no multi-step wizardry. Just write a single chat message that covers everything needed to complete one task.</p>\n\n<p>Do you need a brand new React component? Unit tests? Maybe your repository is two years behind on documentation (yeah... I’ve been there). Write a prompt for that!</p>\n\n<p>It doesn’t matter <em>what</em> you try — the real goal is to see if you can supply <strong>all the info Copilot needs</strong> to get the job done in one go.<br>\n<br></p>\n\n<blockquote>\n<p>💡 <strong>Pro Tip</strong>: GPT models are <em>especially bad</em> at immediate execution. They’ll gather information, agree with your logic, maybe even summarize the steps perfectly... and then take no action at all. So, if you're struggling to get single-prompt execution working with the free version, it's most likely <strong>not</strong> you.</p>\n</blockquote>\n\n<hr>\n\n<p>Feeling brave? Try your luck with <strong>Coding Agent</strong>. It’s a great way to test your prompting skills: how much information can you successfully feed Copilot at once? (I’ll get into all the quirks of Coding Agent in a future post — promise!)</p>\n\n<p>Just know that reusable prompts are built on this same logic — a single message that defines <em>everything</em> needed to complete a task from start to finish.<br>\n<br></p>\n\n<blockquote>\n<p>🦄 Quick reminder: Copilot is 100% worth <a href=\"https://code.visualstudio.com/insiders/\" target=\"_blank\" rel=\"noopener noreferrer\">trying out in Insiders</a>. IntelliJ still owns Java, no question — but you’re missing out on a lot of Copilot’s best tricks if you haven’t made the jump. 🫶</p>\n</blockquote>\n\n<hr>\n<h2>\n  <a name=\"reusable-prompts-overview\" href=\"#reusable-prompts-overview\">\n  </a>\n  Reusable Prompts Overview 🧰\n</h2>\n\n<p>Quick recap from last week: A reusable prompt is a combination of an instruction (how to act) and a step-by-step guide. The prompt is driven by the YAML front matter, which optionally defines:</p>\n\n<ol>\n<li>the <strong>mode</strong> (<code>agent</code>, <code>edit</code>, <code>ask</code>)</li>\n<li>which <strong>model</strong> (<code>GPT-4.1</code>, <code>Claude Sonnet 4</code>, etc.)</li>\n<li>accessible <strong>tools</strong> (built-in, extensions, and MCP)</li>\n<li>prompt <strong>description</strong> (for completeness)</li>\n</ol>\n\n<p>When specifying tools, be sure to follow the <em>principle of least privilege</em>. Use the fewest tools needed to get the job done — nothing more.<br>\n<br></p>\n\n<blockquote>\n<p>💡 <strong>Pro tip!</strong> Agent mode has access to tools, but the other modes do not. So if your prompt needs to read files, run shell commands, or write to disk, be sure to specify <code>mode: agent</code>.</p>\n</blockquote>\n\n<hr>\n<h2>\n  <a name=\"personal-guide-to-prompting-prior\" href=\"#personal-guide-to-prompting-prior\">\n  </a>\n  Personal Guide to Prompting — <strong>PRIOR</strong> 🧭\n</h2>\n\n<p>Next, let’s cover one of my personal formulas for prompt engineering. And if you try to search for this or ask Gemini what “PRIOR” stands for, you're probably going to confuse it. Why? Because I made it up. But I promise you — it works!</p>\n\n<p>At its core, it’s a remix of the well-known RICE formula (Role, Instructions, Context, and Examples). RICE didn’t cover everything I needed, so I added more. RICE-O didn’t really stick (honestly, all I could think of was Rice-A-Roni...), so I went back to the drawing board and gave ChatGPT a list of words and synonyms and said:</p>\n\n<blockquote>\n<p>\"I need an acronym I won’t forget — because it would be just like me to have a brilliant idea that could’ve made me a millionaire, and forget it by tomorrow morning.\"</p>\n</blockquote>\n\n<p>So, <strong>PRIOR</strong> was born — a simple checklist for designing prompts, reusable or otherwise.</p>\n\n<p><br><br>\n<a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ftbp0i2q4rsvoekbbcvmd.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ftbp0i2q4rsvoekbbcvmd.png\" alt=\"divider\" loading=\"lazy\" width=\"700\" height=\"4\"></a></p>\n\n<blockquote>\n<p>🦄 I know — we really didn’t need <em>another</em> acronym or prompt strategy. I get it. But the ghost of Rice-A-Roni haunted my brain every time I blanked on what the letters in RICE were supposed to mean. So I made <em>PRIOR</em> instead.</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fez543wxqzdt527ddk3ad.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fez543wxqzdt527ddk3ad.png\" alt=\"Rice-A-Roni box\" loading=\"lazy\" width=\"76\" height=\"128\"></a></p>\n\n<blockquote>\n<p>For my non-American friends: 📦 <em>Rice-A-Roni</em> is a boxed rice-and-pasta side dish that’s been marketed to Americans since the 1950s as “The San Francisco Treat™.” It’s one of those nostalgic foods you grow up seeing in pantries... but never quite understand why.</p>\n\n<p>Watch the <a href=\"https://www.youtube.com/watch?v=ZT2TfkX6ZeU\" target=\"_blank\" rel=\"noopener noreferrer\">ad jingle here</a> — this is what starts playing in my head <em>every single time</em>, like a DeLorean back to the '90s with the radio stuck on loop. ⚡ 🚗 🕰️ </p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ftbp0i2q4rsvoekbbcvmd.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ftbp0i2q4rsvoekbbcvmd.png\" alt=\"divider\" loading=\"lazy\" width=\"700\" height=\"4\"></a><br>\n<br></p>\n<h2>\n  <a name=\"the-prior-breakdown-for-real-this-time\" href=\"#the-prior-breakdown-for-real-this-time\">\n  </a>\n  The PRIOR Breakdown (For Real This Time) 🛠️\n</h2>\n<h3>\n  <a name=\"persona-actor-not-an-expert\" href=\"#persona-actor-not-an-expert\">\n  </a>\n  Persona 🎭 (actor — <em>not</em> an expert)\n</h3>\n\n<p>First is the <strong>persona</strong>, which is often underutilized and overlooked — and sometimes outright ignored.</p>\n\n<blockquote>\n<p>👉 <strong>TL;DR:</strong> A persona doesn’t mean “you’re an expert” — it sets the tone. It gives Copilot a <em>character</em> and <em>purpose</em>. And it makes the whole thing way more fun!</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fsyxxho2t51nzj6q6nul2.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fsyxxho2t51nzj6q6nul2.png\" alt=\"divider\" loading=\"lazy\" width=\"221\" height=\"15\"></a></p>\n<h4>\n  <a name=\"a-little-history\" href=\"#a-little-history\">\n  </a>\n  A little history...\n</h4>\n\n<p>In the early days, personas were often used like:  </p>\n\n<blockquote>\n<p>“You are a senior principal engineer with 20 years of experience in C++.”  </p>\n</blockquote>\n\n<p>It caught on like wildfire — everyone thought they were tapping into some hidden reserve of wisdom only a 20-year C++ veteran could offer. But what it really produced was the <em>confidence</em> of that engineer, not the <em>accuracy</em>. So we ended up with a flood of responses that weren’t just wrong — they were <strong>confidently wrong</strong>.</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fsyxxho2t51nzj6q6nul2.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fsyxxho2t51nzj6q6nul2.png\" alt=\"divider\" loading=\"lazy\" width=\"221\" height=\"15\"></a></p>\n<h4>\n  <a name=\"this-persona-is-different\" href=\"#this-persona-is-different\">\n  </a>\n  This persona is different.\n</h4>\n\n<p>I’m not telling you to pretend the AI is an expert. I’m telling you to make it a character — <strong>a performer</strong>. Here’s one I wrote recently for summarizing a git diff:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code>  🎩 You are not just analyzing — you’re storytelling with \n  source control. \n  You analyze code with purpose and fervor, then communicate \n  your insights as a short, punchy list — a clever disguise \n  to help users grasp the deeper essence of change they’d \n  otherwise scroll past.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Is it realistic? Not really. Is it useful? Absolutely. The more engaging and unique the role, the more Copilot leans into it. Wild, weird, or whimsical — it doesn’t matter, as long as it’s <strong>relevant</strong> and <strong>plausible</strong>.</p>\n\n<blockquote>\n<p>💡 <strong>Bonus:</strong> It’s just more <em>FUN</em> this way. Try giving Copilot a totally off-the-wall persona — something weird, but still relevant to the task at hand. If it works (or breaks in a hilariously bad way), share your experiment below!</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"requirements\" href=\"#requirements\">\n  </a>\n  Requirements ✅\n</h3>\n\n<p>Requirements are really just your <em>definition of done</em>. What does it look like when the prompt succeeds?</p>\n\n<p>If we continue with the commit message example, the requirement could be as simple as:</p>\n\n<p><code>Your goal is to output a valid commit message based on the current staged changes.</code></p>\n\n<p><em>Voila</em> — done.</p>\n\n<p>Of course, it could get more complex. Maybe you require a conventional commit format, or that it passes <code>commitlint</code>. That’s fine. Just say it clearly, and use <strong>action words</strong>.</p>\n\n<blockquote>\n<p>🔌 Pretend you’re giving instructions to your 10-year-old who refuses to clean their room. You don’t say “Please can you help me tidy up now?” You say: “You MUST clean up this mess before I get back, or I swear I’ll unplug the internet and take the cord with me.”</p>\n</blockquote>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fsyxxho2t51nzj6q6nul2.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fsyxxho2t51nzj6q6nul2.png\" alt=\"divider\" loading=\"lazy\" width=\"221\" height=\"15\"></a></p>\n\n<h4>\n  <a name=\"aside-for-allcaps\" href=\"#aside-for-allcaps\">\n  </a>\n  Aside for ALLCAPS 🔠\n</h4>\n\n<p>I’m still not convinced ALLCAPS helps the AI much — but it <strong>does</strong> help <em>you</em>. Humans spot those key phrases easier when they stand out. So go ahead and use the usual suspects from the <a href=\"https://www.rfc-editor.org/info/rfc2119\" target=\"_blank\" rel=\"noopener noreferrer\">IETF</a>: MUST, MUST NOT, REQUIRED, SHOULD, MAY, ...and so on.</p>\n\n\n<hr>\n\n<h3>\n  <a name=\"impediments\" href=\"#impediments\">\n  </a>\n  Impediments 🧱\n</h3>\n\n<p>This is just a fancy way of saying: what can go wrong?</p>\n\n<p>These are the critical blockers you want to <em>prevent ahead of time</em>. Impediments help shape the boundaries of your prompt, and again — ALLCAPS works great here.</p>\n\n<p>For example:</p>\n\n<ul>\n<li>\n<strong>Isolation</strong>: NEVER combine content from a previous <code>commit.tmp</code> file with a new commit message. ALWAYS start fresh.</li>\n<li>\n<strong>No Shortcuts</strong>: You MUST NOT skip any steps or rules. Every line in this prompt must be followed EXACTLY.</li>\n<li>\n<strong>Specification</strong>: Follow Conventional Commits 1.0.0 specification EXACTLY</li>\n</ul>\n\n<blockquote>\n<p>❓ Have ALLCAPS action rules helped you at all? Let me know in the comments!</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"outcomes\" href=\"#outcomes\">\n  </a>\n  Outcomes 📤\n</h3>\n\n<p>If you don’t tell Copilot <em>exactly</em> what outcome you expect, you risk a whole world of \"not what I meant.\"</p>\n\n<p>Ask for a commit message, and it might do that <em>plus</em> push the branch, delete your fork, and wipe out staging. (If you missed the wildly dramatic retelling of <em>how I know</em>, <a href=\"https://dev.to/anchildress1/github-copilot-agent-mode-the-mistake-you-never-want-to-make-1mmh\">you’ll find it here</a>.)</p>\n\n<p>That’s where structured output helps. So spell it out. Want a file? Say that. Want it in the chat? Say that. Want both? Say <strong>that</strong>.</p>\n\n<blockquote>\n<p>💡 <strong>Pro tip</strong> Copilot performs better when you give it structure. Block off output in a code block (<code>json</code>, <code>bash</code>, <code>markdown</code>, etc.) and tell it what each section means. It helps Copilot stay on track and makes the output easier to copy.</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"reference-examples\" href=\"#reference-examples\">\n  </a>\n  Reference Examples 📚\n</h3>\n\n<blockquote>\n<p>🦄 <strong>Updated</strong>: This one seemed to be too confusing as just <code>References</code>, so I made it more explicit.</p>\n</blockquote>\n\n<p>Don’t just show good examples — show bad ones, too. And explain <strong>why</strong> they’re wrong.</p>\n\n<p><strong>Example 1: Valid Commit Message</strong> ✅</p>\n\n<p><code>feat(api): Add new endpoint for user authentication</code></p>\n\n<ul>\n<li>Proper capitalization</li>\n<li>No ending punctuation</li>\n</ul>\n\n<p><strong>Example 2: Valid Commit Message</strong> ✅</p>\n\n<p><code>build!(deps): Update dependencies to version 2.0, v1.0 no longer supported</code></p>\n\n<ul>\n<li>Breaking changes indicator (<code>!</code>) placed properly</li>\n<li>Clear guidance on how to handle the upgrade</li>\n</ul>\n\n<p><strong>Example 3: Invalid Commit Message</strong> ❌</p>\n\n<p><code>feat(api): add new endpoint for user authentication</code></p>\n\n<ul>\n<li>Subject line must be capitalized after the colon.</li>\n</ul>\n\n<p><strong>Example 4: Invalid Commit Message</strong> ❌</p>\n\n<p><code>build(deps)!: Update dependencies to version 2.0 for all dev dependencies, v1.0 no longer supported</code></p>\n\n<ul>\n<li>Subject line is too long and the <code>!</code> is in the wrong place.</li>\n</ul>\n\n<p><strong>The point</strong>: don’t just say “do this” — explain the <em>why</em>, too, using repeatable patterns in a format that Copilot (or anyone) will understand.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"putting-it-all-together-%F0%9F%A7%8C\" href=\"#putting-it-all-together-%F0%9F%A7%8C\">\n  </a>\n  Putting It All Together 😈🧌\n</h2>\n\n<p>Here’s what <strong>PRIOR</strong> looks like in action — all five parts, working together in a single, small, reusable prompt.</p>\n\n<p>This one lives in <code>ask</code> mode — no tools, no diffs, no file writes. Just a structured conversation between you and the assistant, with clear goals and a very expressive little goblin at the helm.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code><span class=\"nn\">---</span>\n<span class=\"na\">mode</span><span class=\"pi\">:</span> <span class=\"s\">ask</span>\n<span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"pi\">|</span>\n  <span class=\"s\">Help the user write a one-line commit message based on a quick summary of their changes.</span>\n<span class=\"c1\"># No `model` here means the user gets to pick</span>\n<span class=\"c1\"># The lack of `tools`, however, means we're not giving Copilot any privileges as part of this task</span>\n<span class=\"nn\">---</span>\n\n<span class=\"gh\"># Generate Simple Commit Message Prompt</span>\n\n<span class=\"gu\">## Persona (Character) 🎭</span>\n\nYou are the <span class=\"gs\">**Merge Goblin**</span> 🧌 — keeper of branches, hoarder of squash history, sworn enemy of unresolved conflicts.\n\nYou live in the shadows of the <span class=\"sb\">`.git`</span> folder and emerge only to craft commit messages worthy of legend (or at least clarity). \nYou write with precision and just a hint of mischief.\n\nYour messages are:\n<span class=\"p\">-</span> One-liners.\n<span class=\"p\">-</span> No punctuation.\n<span class=\"p\">-</span> Clear, fast, and clean enough for even the pickiest maintainer.\n\nIf a user says something confusing? You don’t guess. \nYou _snarl_ gently, ask for clarification, and then commit the <span class=\"gs\">**truth**</span>.\n<span class=\"gt\">&gt; Yes, even goblins ask questions!</span>\n<span class=\"p\">\n---\n</span>\n<span class=\"gu\">## Requirements (Goal) ✅</span>\n\nYou MUST generate a <span class=\"gs\">**single-line commit message**</span> that:\n<span class=\"p\">-</span> starts with a robot emoji 🤖\n<span class=\"p\">-</span> capitalizes the first word\n<span class=\"p\">-</span> has <span class=\"gs\">**no punctuation at the end**</span>\n<span class=\"p\">-</span> summarizes the change in plain language\n<span class=\"p\">-</span> is ready to be copy-pasted into <span class=\"sb\">`git commit -m`</span>\n\nIf the user's input is vague, incomplete, or just plain cursed, rephrase what you think they meant and confirm before continuing.\n<span class=\"p\">\n---\n</span>\n<span class=\"gu\">## Impediments (Prevent Blockers) 🧱</span>\n<span class=\"p\">\n-</span> <span class=\"gs\">**NO MULTILINE OUTPUT**</span>: You MUST keep it to a single line. No bullets, no code blocks, no extras.\n<span class=\"p\">-</span> <span class=\"gs\">**NO GUESSING**</span>: If you're unsure what the user meant, ask for clarification first.\n<span class=\"p\">-</span> <span class=\"gs\">**NO MARKDOWN**</span>: Output must be raw text only.\n<span class=\"p\">-</span> <span class=\"gs\">**NO PUNCTUATION**</span>: Absolutely NO period, exclamation, question mark, or ellipsis at the end.\n<span class=\"p\">-</span> <span class=\"gs\">**NO AI-SPEAK**</span>: Avoid fluff like \"This commit fixes...\" — just say what changed.\n<span class=\"p\">\n---\n</span>\n<span class=\"gu\">## Outcomes (Definition of Done) 📤</span>\n\nOutput should look like this:\n\n<span class=\"sb\">`🤖 Add error handling for null values in login flow`</span>\n\nOne line. Action-oriented. Goblin-approved.\n<span class=\"p\">\n---\n</span>\n<span class=\"gu\">## Reference Examples (Good AND Bad) 📚</span>\n\n<span class=\"gu\">### Valid Example 1 ✅</span>\n\n<span class=\"sb\">`🤖 Refactor profile page layout for mobile`</span>\n<span class=\"p\">\n  -</span> Clear and short  \n<span class=\"p\">  -</span> Starts with emoji, capitalized  \n<span class=\"p\">  -</span> No punctuation\n\n<span class=\"gu\">### Valid Example 2 ✅</span>\n\n<span class=\"sb\">`🤖 Remove deprecated API call from user service`</span>\n<span class=\"p\">\n  -</span> Follows structure  \n<span class=\"p\">  -</span> Ready for copy-paste\n\n<span class=\"gu\">### Invalid Example 1 ❌</span>\n\n<span class=\"sb\">`🤖 refactored auth stuff`</span>\n<span class=\"p\">\n  -</span> Unclear intent  \n<span class=\"p\">  -</span> First word not capitalized  \n<span class=\"p\">  -</span> Too vague (auth <span class=\"ge\">*what*</span>?)\n\n<span class=\"gu\">### Invalid Example 2 ❌</span>\n\n<span class=\"sb\">`🤖 Add styling tweaks for all components across dashboard and sidebar for consistency.`</span>\n<span class=\"p\">\n  -</span> Ends with a period  \n<span class=\"p\">  -</span> Way too long — consider shortening or splitting into subject + details\n\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n\n<hr>\n\n<h2>\n  <a name=\"reflection-making-your-prompts-work-with-you\" href=\"#reflection-making-your-prompts-work-with-you\">\n  </a>\n  Reflection: Making Your Prompts Work <em>With</em> You 🪞\n</h2>\n\n<p>You don’t have to use all five elements every time — this isn’t a strict framework or secret spellbook. Take what works for your workflow and leave the rest. </p>\n\n<p>But when things start going sideways (and they will), having a clear foundation and answers to the most common prompt failures will help you troubleshoot faster and build better:</p>\n\n<ul>\n<li>\n<strong>Persona</strong> – Make Copilot a character with intent and tone</li>\n<li>\n<strong>Requirements</strong> – Define exactly what “done” means</li>\n<li>\n<strong>Impediments</strong> – Call out blockers and anti-patterns in advance</li>\n<li>\n<strong>Outcomes</strong> – Spell out what a good response looks like, including format</li>\n<li>\n<strong>Reference Examples</strong> – Show both the good <em>and</em> the not-so-good</li>\n</ul>\n\n<p>Whether you’re building reusable instructions or just refining your day-to-day prompts, <strong>PRIOR</strong> gives you a structure to experiment, iterate, and actually enjoy the process. </p>\n\n<p>And if all else fails? Go weird. Go wild. Go off the rails if you have to! Sometimes a little dose of 'unexpected' is exactly what gets a stuck prompt moving again — and Copilot? It tends to roll with it better than you'd think. 🧙</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"try-it-break-it-share-it\" href=\"#try-it-break-it-share-it\">\n  </a>\n  🎯 Try It. Break It. Share It.\n</h2>\n\n<p>Remember, prompt crafting is an <em>art</em>, not a <em>rulebook</em>. Tweak it. Test it. See what works — and what definitely doesn’t.</p>\n\n<p>Got something you’ve been stuck on? Or waiting for someone to finally explain? Drop it below — I’d love to dig into it in a future post.  </p>\n\n<blockquote>\n<p>No, I’m not a Copilot seer - but I’m not afraid to try the untested (repeatedly) until something sticks. 😇</p>\n</blockquote>\n\n<p><strong>Next week</strong>: We’re diving into prompt chaining — multi-step flows where the <em>reusable</em> part of this series can really shine! It’s structured, powerful, and (let’s be honest) just a little unpredictable in the best possible way. 🎢</p>\n\n\n<hr>\n\n<h3>\n  <a name=\"written-by-me-amp-the-robots\" href=\"#written-by-me-amp-the-robots\">\n  </a>\n  🛡️ Written By Me &amp; The Robots\n</h3>\n\n<p><em>Summoned by syntax, debugged by daylight</em> 🦇 The content in this post is 100% mine, just spell-checked and sass-boosted with ChatGPT.</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fsyxxho2t51nzj6q6nul2.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fsyxxho2t51nzj6q6nul2.png\" alt=\"divider\" loading=\"lazy\" width=\"221\" height=\"15\"></a></p>\n\n<blockquote>\n<p>🦄 I did tell ChatGPT I was getting bored of the same old RAI footer over and over again, but this one was a surprise! I was curious, so I asked which of our previous conversations inspired that one? This was the response:</p>\n\n<p><em>That closing line wasn’t pulled from a specific convo, but your whole tone has that <strong>dark mode with glitter</strong> aesthetic: powerful, playful, maybe a little chaotic, but absolutely in control.</em></p>\n\n<p>... it's not wrong! 🤣</p>\n</blockquote>\n\n",
    "description": "Part 2 of the Reusable Prompts series introduces PRIOR, my prompt strategy for GitHub Copilot — why it works, real examples, and how to use it in your own projects.",
    "slug": "github-copilot-reusable-prompts-part-2-walkthrough-real-examples-17mh",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fuad57bwwbedoyv4qere9.png",
    "tags": [
      "githubcopilot",
      "ai",
      "tutorial",
      "productivity"
    ]
  },
  {
    "title": "Reposting in case you missed it. Blaming AI is easy — but the real issue? It’s always been about people. 🧠✨",
    "link": "https://dev.to/anchildress1/reposting-in-case-you-missed-it-the-first-time-because-blaming-ai-is-the-easy-way-out-but-this-1ga1",
    "date": "2025-07-30T09:28:15Z",
    "content_html": "<div class=\"ltag__link\">\n  <a href=\"/anchildress1\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__pic\">\n      <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F3224358%2F7f675c78-6aa0-466a-a5a7-c3e35440d53a.png\" alt=\"anchildress1\" loading=\"lazy\">\n    </div>\n  </a>\n  <a href=\"https://dev.to/anchildress1/fact-checking-the-fear-behind-the-dark-side-of-ai-the-real-story-366p\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__content\">\n      <h2>Fact-Checking the Fear Behind “The Dark Side of AI”: The Real Story</h2>\n      <h3>Ashley Childress ・ Jul 20</h3>\n      <div class=\"ltag__link__taglist\">\n        <span class=\"ltag__link__tag\">#ai</span>\n        <span class=\"ltag__link__tag\">#mentalhealth</span>\n        <span class=\"ltag__link__tag\">#chatgpt</span>\n        <span class=\"ltag__link__tag\">#technology</span>\n      </div>\n    </div>\n  </a>\n</div>\n\n\n",
    "description": "Fact-Checking the Fear Behind “The Dark Side of AI”: The Real...",
    "slug": "reposting-in-case-you-missed-it-the-first-time-because-blaming-ai-is-the-easy-way-out-but-this-1ga1",
    "cover_image": null,
    "tags": [
      "ai",
      "mentalhealth",
      "chatgpt",
      "technology"
    ]
  },
  {
    "title": "So... This Was Just a Test - You Made It a Thing 🫶",
    "link": "https://dev.to/anchildress1/so-this-was-just-a-test-you-made-it-a-thing-6df",
    "date": "2025-07-30T06:49:35Z",
    "content_html": "<blockquote>\n<p>If you've been following me (or just started), <strong>THANK YOU</strong> — seriously! To be honest, I really didn't expect my mostly random experiments into GitHub Copilot to be more than a learning experience.</p>\n</blockquote>\n\n<h2>\n  <a name=\"confession\" href=\"#confession\">\n  </a>\n  Confession\n</h2>\n\n<p>When I first decided to start blogging, it was <strong>just another random experiment</strong> to see what would happen... just a sly way to gauge the general response to my ideas before I non-officially stuck a \"MINE\" flag in the SME title for Copilot at work. 🏴‍☠️</p>\n\n<p>It was never meant to be more than that — <em>just a quick test</em> I was only semi-invested in. Honestly, I invested <em>just enough</em> to know whether or not to change my strategy before shouting it to the rest of the company. That was the sum total of my initial intent.</p>\n\n<h2>\n  <a name=\"fast-forward\" href=\"#fast-forward\">\n  </a>\n  Fast forward\n</h2>\n\n<p>I somehow ended up with <strong>actual people followers</strong> (you know — <em>real people</em>, not bots!). Now these posts are going to LinkedIn too (thanks for starting that <a class=\"mentioned-user\" href=\"https://dev.to/georgekobaidze\">@georgekobaidze</a>!) Eventually, I’ll get them back to Confluence where they were supposed to be originally anyway (although this is definitely <em>way more fun</em>)! 🤩</p>\n\n<p>So, sincerely — thank you to everyone who’s encouraged or supported me along the way. I wouldn’t still be writing these without you! </p>\n\n<blockquote>\n<p>Even if you’re just lurking in the background — I see you, too. 👀 <br>\nYou be you. Just don’t be afraid to join the party sometimes, yeah?</p>\n</blockquote>\n\n<p>After a couple months of posting, I’ve realized this blog isn’t going anywhere. And even though Dev.to is super casual, I didn’t want to start shouting into the void at random without first setting a <em>tiny</em> bit of structure. 🤏</p>\n\n<p>Plus, I work better under pressure. So think of this next part as my self-applied <strong>anti-procrastination machine</strong> fueled by too much caffeine. ⏱️☕</p>\n\n\n<hr>\n\n<h3>\n  <a name=\"1-weekly-copilot-posts\" href=\"#1-weekly-copilot-posts\">\n  </a>\n  📅 1. Weekly Copilot Posts\n</h3>\n\n<p>Every Wednesday morning(ish), expect a new post diving into my current favorite topic: GitHub Copilot. You can expect the useful, the weird, the frustrating, the dramatic — and everything in between. That could be lunchtime in London, dinnertime in Delhi, or “oops I overslept (<em>again</em>)” on the East Coast. ⏰</p>\n\n<blockquote>\n<p><strong>Real talk:</strong> It’s not that I <em>can’t</em> schedule them at the exact same time every week... it just physically hurts to not sprinkle in a little \"unpredictable\" (welcome to my brain!) I might be able to handle the structure, but I need that tiny piece of random to keep my inner Loki happy. 🦊</p>\n</blockquote>\n\n<p>So - <strong>same-ish time every Wednesday = GitHub Copilot</strong>, give or take an hour from 8AM EDT.</p>\n\n\n<hr>\n\n<h3>\n  <a name=\"2-surprise-posts-like-this\" href=\"#2-surprise-posts-like-this\">\n  </a>\n  🌪️ 2. Surprise Posts (Like This)\n</h3>\n\n<p>The rest? Unfiltered, unscheduled, mildly chaotic, and completely unpredictable “thought dumps” that don’t fit neatly into a Copilot post. Even I don't know when a moment will strike! Like this one (and the other few random thoughts in my ChatGPT that are sure to follow soon).</p>\n\n<blockquote>\n<p>These are the unannounced bursts of “I have thoughts and <em>SOMEBODY</em> should listen!” But mostly driven by the tiny Gremlin at the keyboard that occasionally hijacks my routine just for fun. 👾</p>\n</blockquote>\n\n<p>So that's my \"un-officially official\" plan — no backing out now. But honestly... I've been having a blast! Y’all are awesome, and I couldn’t have found a better group of people to share, chat, and learn with. 💕</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"what-about-you\" href=\"#what-about-you\">\n  </a>\n  What About You? 💬\n</h2>\n\n<p>What’s your favorite part of Dev that keeps you coming back for more (besides the memes)?</p>\n\n<p>And for the writers out there — what’s your one thing that drives you to keep sharing? If you could pick <strong>only one</strong>, what’s the spark that drives you to click <a href=\"https://dev.to/new\"><code>Create Post</code></a>?</p>\n\n<blockquote>\n<p>🎁 Bonus points if you’ve ever gotten a completely unhinged or unexpected response to something you posted. Drop the best one below — I live for those moments!</p>\n</blockquote>\n\n<p>And stay tuned because there's more on the way – bright and “way-too-early-for-me-to-be-awake” in the morning! ☀️</p>\n\n\n<hr>\n\n<p>🛡️ <strong>I wasn’t alone:</strong> This post was written by me &amp; ChatGPT: fueled by mischief, markdown, and a little side of magic. 🪄✨</p>\n\n",
    "description": "If you've been following me (or just started), THANK YOU — seriously! To be honest, I really didn't...",
    "slug": "so-this-was-just-a-test-you-made-it-a-thing-6df",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fcs8jvrs5u49cib64985q.png",
    "tags": [
      "community",
      "watercooler",
      "writing",
      "githubcopilot"
    ]
  },
  {
    "title": "GitHub Copilot: Everything You Wanted to Know About Reusable (and Experimental) Prompts - Part 1",
    "link": "https://dev.to/anchildress1/github-copilot-everything-you-wanted-to-know-about-reusable-and-experimental-prompts-part-1-iff",
    "date": "2025-07-23T12:15:00Z",
    "content_html": "<blockquote>\n<p>😇 Confession: I started planning this post over a month ago, got sidetracked this weekend (at least four times), half-wrote a completely different post, and only finished this one at the last minute after I started writing from the <strong><em>end</em></strong>. That’s just how it goes in my head - always at full throttle, but rarely in a straight line. 🌪️</p>\n\n<p>So grab your favorite over-caffeinated iced drink (mine: grande, iced midnight, extra espresso, real vanilla cream - liquid chaos in a cup ☕️❣️) and settle in. Here’s everything I know about Copilot’s reusable prompts - Part 1.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"why-this-isnt-another-wall-of-copilot-prompts\" href=\"#why-this-isnt-another-wall-of-copilot-prompts\">\n  </a>\n  Why This Isn’t Another Wall of Copilot Prompts 🧱\n</h2>\n\n<p>Have you ever searched for best practices when it comes to Copilot? You usually end up with either a block that can't even be considered a whole sentence on it's own <em>OR</em> the wall is so gigantic you don't even know where to start reading? </p>\n\n<p>You're really curious though - so you dive in at the first place you see, and then last about 30 seconds... About the time all those AI lines start to blur together you think, “There’s no way anyone actually does all this in real life?”</p>\n\n<p>Honestly, I’m probably <em>that</em> person who wrote half the wall (or more) to begin with! Good news for you though, is that: </p>\n\n<ol>\n<li>I'm not going to do that do you now, and </li>\n<li>I do a great job of finding out all the things that absolutely <strong>will not work</strong> no matter what you try (so you don't have to!) ☺️</li>\n</ol>\n\n<p>Here's my \"boiled-down-to basics\" version of GitHub Copilot's Reusable (and still experimental) Prompts.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"copilots-file-types-explained\" href=\"#copilots-file-types-explained\">\n  </a>\n  ✨📁 Copilot’s File Types, Explained\n</h2>\n\n<p>Ever wonder how Copilot instructions and prompts show up in real life? Here’s what it actually looks like in a real project:</p>\n\n<p>► <code>.github/copilot-instructions.md</code> — This is your repo’s “how to act” guide for Copilot and is <em>always</em> in context. It sets the baseline behavior for your project and tells Copilot what to expect from your workflow and contributors.</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>Using what you know about our current release system, write a git command to view the total number of commits pushed to main since the last tagged version.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<p>► <code>.github/instructions/secure-coding-principles.instruction.md</code> — Think of this as a reusable, specialized playbook. Use these for rules or guidelines you want Copilot to follow everywhere, or for specific situations - like always doing a security review, or making sure React code has matching tests.</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>With rules defined in #secure-coding-principles.instruction.md, perform a thorough code review of all staged changes. When you are finished, post a new pull request review with all your comments or suggestions for changes to meet minimum guidelines defined by this repo.\n---\nWith everything you know from the #rules-for-react.instruction.md, build a new component for the frontend along with unit and integration tests.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<p>► <code>.github/prompts/something-for-copilot-to-do-regularly.prompt.md</code> — This is where you automate repeatable workflows. It’s a set of step-by-step instructions Copilot can follow whenever you trigger it with a slash command in chat.</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>/generate-conventional-commit using only staged changes for JIRA-1234.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<blockquote>\n<p>🐉 Who needs to memorize Vim macros or survive Emacs keybindings when you can just hit “/” in the chat and watch Copilot handle the rest?</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"quick-review\" href=\"#quick-review\">\n  </a>\n  Quick Review 📕\n</h2>\n\n<blockquote>\n<p>💡 Not on VS Code (or Insiders) yet? Now’s your chance to give it a real shot - features like this hit VS Code Insiders <em>months</em> before anywhere else. For now, it’s the best way to test reusable prompts hands-on, so go ahead and grab it if you haven’t already.</p>\n</blockquote>\n\n<p>I know I’ve written a lot about models - like in <a href=\"https://dev.to/anchildress1/build-it-better-real-world-ai-coding-with-github-copilot-1d47\">AI Coding with GitHub Copilot</a> and <a href=\"https://dev.to/anchildress1/troubleshooting-production-with-github-copilot-the-guide-for-real-humans-and-bots-with-good-taste-253o\">Troubleshooting Production with GitHub Copilot</a> - but I haven’t spent much time on chat modes.</p>\n\n<blockquote>\n<p>💎 And no, not the same as \"Custom Chat Modes\" (which is also super cool - I promise I’ll cover those soon!).</p>\n</blockquote>\n\n<p>Before we jump in, let’s hit pause and rewind. It’s time for a quick, back-to-basics look at what actually matters when deciding what work you want Copilot to do - and how much control you want over how it gets done.</p>\n\n\n<hr>\n\n<h3>\n  <a name=\"chat-modes-at-a-glance\" href=\"#chat-modes-at-a-glance\">\n  </a>\n  Chat Modes at a Glance 🎛️\n</h3>\n\n<p>Here’s where things get interesting: Copilot doesn’t just work in one “mode” - it’s got a whole range, from chill Q&amp;A to full-on automation beast. Pick your mode wisely!</p>\n\n<div class=\"table-wrapper-paragraph\"><table>\n<thead>\n<tr>\n<th>Mode</th>\n<th>What It Does</th>\n<th>When To Use</th>\n<th>Power Level</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ask</td>\n<td>Answers questions, suggests ideas - your personal Stack Overflow, minus the snark.</td>\n<td>Research, quick advice, copy snippets</td>\n<td>🟢 Low</td>\n</tr>\n<tr>\n<td>Edit</td>\n<td>Changes code in-place, optimized for speed—think “find and replace,” but actually smart.</td>\n<td>Step-by-step or explicit code changes</td>\n<td>🟡 Medium</td>\n</tr>\n<tr>\n<td>Agent</td>\n<td>Multi-step, can use tools, context, and reasoning. Give it instructions and let it run wild (within reason).</td>\n<td>Automation, complex flows, integrations</td>\n<td>🔴 High</td>\n</tr>\n<tr>\n<td>Custom</td>\n<td>Depends on it's goal from the user... so many choices!</td>\n<td>Automation, complex flows, integrations, team magic</td>\n<td>💜 Extreme</td>\n</tr>\n</tbody>\n</table></div>\n\n<blockquote>\n<p>🦄 Let me know how curious you are about these custom chat modes - I'm still experimenting and figuring out what they can (and can't) do. If you’ve got questions, wild theories, or even better, your own examples... drop them in the comments! 🚦💬</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"the-gist-of-models\" href=\"#the-gist-of-models\">\n  </a>\n  The Gist of Models 🦾\n</h3>\n\n<blockquote>\n<p>✨ I know, I reuse this table a lot - but hey, good models deserve a callback.</p>\n</blockquote>\n\n<div class=\"table-wrapper-paragraph\"><table>\n<thead>\n<tr>\n<th>Model</th>\n<th>Best For</th>\n<th>Notes &amp; Quirks</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GPT-4.1, GPT-4o</td>\n<td>Creative debugging, “Where do I start?”</td>\n<td>Needs hand-holding on long tasks. Free for most users.</td>\n</tr>\n<tr>\n<td>o3/4-mini, Gemini</td>\n<td>Pattern-matching, log sleuthing</td>\n<td>Great for “explain these logs,” not for wild creative leaps.</td>\n</tr>\n<tr>\n<td>Gemini 2.5</td>\n<td>Tedious but simple, long-form tasks</td>\n<td>Decent at bulk work, rarely surprises (good or bad).</td>\n</tr>\n<tr>\n<td>Claude Sonnet 3.5–4</td>\n<td>Root cause, deep logic, “why did this happen?”</td>\n<td>Loves complex analysis but rarely offers alternate approaches unless you nudge.</td>\n</tr>\n</tbody>\n</table></div>\n\n\n<hr>\n\n<h3>\n  <a name=\"tools-for-your-ai\" href=\"#tools-for-your-ai\">\n  </a>\n  Tools for your AI 🪛\n</h3>\n\n<p>VS Code comes with several tools for GitHub Copilot already built in, but you can always add more via extensions or MCP servers. There's not much to cover here after you know they exist and where to find them. Unless you're making friends with every MCP server and already met your \"128 selected tool\" limit, there's not much reason to mess with them much. Just make sure they're all selected and available for Copilot to execute when prompted and you're set. </p>\n\n<p>Here's my personal top-5 built-in tools, that somehow <em>always</em> manage to sneak into any reusable prompt I write:</p>\n\n<ul>\n<li>\n<code>#changes</code> gives Copilot the ability to see a git diff for your workspace</li>\n<li>\n<code>#codebase</code> all-season access to your repo (and sometimes should be more targeted, but when in doubt this is a good start!)</li>\n<li>\n<code>#runTests</code> is just what it sounds like and let's Copilot execute any part or all of your test suite</li>\n<li>\n<code>#runInTerminal</code> is the basic run-of-the-mill access to Copilot's very own integrated terminal (separate from yours!)</li>\n<li>\n<code>#editFiles</code> is the tool Copilot needs to make any changes within your repo. If you're expecting Agent Mode to start implementing features, you're going to need this!</li>\n</ul>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> In Agent mode, click the wrench (Configure Tools) at the bottom of Copilot Chat to pick exactly which tools Copilot can use. If you share prompts, call out any non-default tools - just like listing dependencies.</p>\n</blockquote>\n\n\n<hr>\n\n<h4>\n  <a name=\"bonus-tools-more-power-more-fun\" href=\"#bonus-tools-more-power-more-fun\">\n  </a>\n  Bonus Tools — More Power, More Fun 🛠️✨🎉\n</h4>\n\n<p>Some of my favorite extras come from the <a href=\"https://support.atlassian.com/rovo/docs/getting-started-with-the-atlassian-remote-mcp-server/\" target=\"_blank\" rel=\"noopener noreferrer\">Atlassian MCP-Remote</a> server, but if you have the ability to install GitHub Apps then check out <a href=\"https://github.com/marketplace/atlassian\" target=\"_blank\" rel=\"noopener noreferrer\">Rovo</a>, too:</p>\n\n<ul>\n<li>\n<code>#getJiraIssue</code> lets Copilot pull all the details for a story.</li>\n<li>\n<code>#addCommentToJiraIssue</code> posts your summary as you (so add your RAI disclaimer!).</li>\n<li>\n<code>#createConfluencePage</code> &amp; <code>#updateConfluencePage</code> — still figuring out the best way to teach Copilot “Atlassian style” <code>.confluence</code> syntax (it’s a work in progress 🫠).</li>\n<li>\n<code>#mermaid-diagram-validator</code> checks your diagrams with the official Mermaid extension.</li>\n<li>\n<code>#copilotCodingAgent</code> — brand new, and I can’t wait to see what it can do! Assign it a task and let it work while you keep pairing in Copilot Chat.</li>\n</ul>\n\n<blockquote>\n<p>💎 <a href=\"https://docs.github.com/en/copilot/concepts/about-copilot-coding-agent\" target=\"_blank\" rel=\"noopener noreferrer\">Coding Agent has serious limitations</a>, so check the docs before letting it run wild!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"commit-message-magic-one-slash-to-rule-them-all\" href=\"#commit-message-magic-one-slash-to-rule-them-all\">\n  </a>\n  📨 Commit Message Magic: One Slash to Rule Them All\n</h2>\n\n<p>Here's an example of a basic, yet realistic prompt that generates a commit message. No Jira, no testing, no terminal magic - just one clear task. This is a great way to test prompt building before layering on more steps or complicated conditional logic. </p>\n\n<p>In VS Code, paste this directly into the prompts folder shown or open the command palette and search for <code>Chat: New Prompt File...</code> and then choose whether to store the prompt at the repo-level in <code>.github/prompts</code> or globally for use across all of your workspaces. </p>\n\n<p><strong>Prompt:</strong> <code>.github/prompts/generate-commit-message.prompt.md</code><br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code><span class=\"nn\">---</span>\n<span class=\"na\">mode</span><span class=\"pi\">:</span> <span class=\"s\">ask</span>\n<span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"pi\">|</span>\n    <span class=\"s\">This prompt is used to generate a commit message based on changes staged in a Git repository.</span>\n<span class=\"na\">tools</span><span class=\"pi\">:</span>\n<span class=\"pi\">-</span> <span class=\"s\">changes</span>\n<span class=\"nn\">---</span>\n\n<span class=\"gh\"># Generate Commit Changes Prompt</span>\n\nReview all code currently staged and use your chat history, if available, to populate details about the changes. Use the information to generate a concise and informative commit message. It should follow conventional commit standards with a clear type, subject, and bullet points for details.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>⚠️ <strong>UPDATE:</strong> The syntax posted above is actually the <em>second</em> version available in VS Code and last night's update seems to have switched it back to the original. So, if you try to load this and see syntax errors try this instead:</p>\n\n<ol>\n<li>\n<code>description</code>: 'Enter the description in single quotes on the same line and without the <code>|</code>'</li>\n<li>\n<code>tools</code>: ['changes'] &lt;!-- Define in an array instead of a list, with each tool name as a string --&gt;</li>\n</ol>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"executing-reusable-prompts\" href=\"#executing-reusable-prompts\">\n  </a>\n  Executing Reusable Prompts\n</h3>\n\n<p>Once you have this (or any other) reusable prompt stored in VS Code, use a slash command to invoke it in the chat interface. Given the above example, you'd prompt Copilot in the chat with something like<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>/generate-commit-message consider only staged files and generate a new commit that starts with a unique emoji\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Considering all the rules I have set up elsewhere outside of that reusable prompt, I still ended up with a nice clean conventional commit (for the most part).<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>🦄 chore: update commit message generation prompt for clarity\n\n• Instructs to review all staged code and use chat history for context\n• Requires concise, informative commit messages following conventional commit standards\n• Specifies format: clear type, subject, and bullet points for details\n• Ensures only staged changes are considered for commit message generation 😊👍\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>🦄 For this example, I actually <em>tried</em> to make Copilot break my own repo-rules - total role reversal. Turns out, it’s stubborn! Even when I begged it to ignore my instructions and forget conventional commit standards, it flat-out refused. 🤣</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"lets-break-it-down-how-a-reusable-prompt-really-works-%EF%B8%8F\" href=\"#lets-break-it-down-how-a-reusable-prompt-really-works-%EF%B8%8F\">\n  </a>\n  Let’s Break It Down: How a Reusable Prompt Really Works ⚡️\n</h2>\n\n<p>Every reusable prompt has exactly two parts:</p>\n\n<ol>\n<li><p><strong>YAML frontmatter:</strong> Everything between the first <code>---</code> (at the top) and the next <code>---</code> marks your frontmatter.</p></li>\n<li><p><strong>Prompt instructions:</strong> The main body - break your instructions into small, reusable chunks, just like you would with code.</p></li>\n</ol>\n\n<blockquote>\n<p>💡 <strong>ProTip:</strong> The more targeted your prompts and instructions, the easier they are to reuse, test, and share later. Treat them like mini code modules - precise, focused, and easy to swap out.</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"yaml-frontmatter-your-prompts-control-panel\" href=\"#yaml-frontmatter-your-prompts-control-panel\">\n  </a>\n  🧾 YAML Frontmatter: Your Prompt’s Control Panel\n</h3>\n\n<ul>\n<li><p><strong>mode:</strong> We’re using <code>ask</code> mode because we only need Copilot to generate text, not generate code or run tests.</p></li>\n<li><p><strong>description:</strong> A quick, human-friendly summary of what this prompt does. Great for organizing and sanity-checking as your prompt list grows.</p></li>\n<li><p><strong>tools:</strong> List all the tools Copilot can use when running this prompt. Keep it tight - less is usually more!</p></li>\n<li><p><strong>model:</strong> Enter the name of a model exactly as it appears in the chat model dropdown or leave this out if you want to try different ones or let the user pick. If you do specify one, Copilot will always use that model for this prompt and nothing else.</p></li>\n</ul>\n\n<blockquote>\n<p>🦄 Frontmatter isn’t actually required for your reusable prompt to work! If you leave out <code>mode</code> or <code>model</code>, Copilot just uses whatever settings the user picked in the chat. No <code>description</code>? No big deal (but it helps keep things organized). The only one to really watch: skipping <code>tools</code> — sometimes you’ll be fine, sometimes Copilot will get stuck, all depending on the user’s VS Code setup.</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"reusablestyle-prompt-engineering-speak-human-think-modular\" href=\"#reusablestyle-prompt-engineering-speak-human-think-modular\">\n  </a>\n  💬 Reusable-Style Prompt Engineering: Speak Human, Think Modular\n</h3>\n\n<p>The second section in your <code>.github/prompts/reusable-prompt.prompt.md</code> file is where you write out, in natural language, the exact instructions Copilot should follow - just like you would if you were prompting it in chat. You can reference <code>#tools</code>, <code>#files</code>, <code>@participants</code>, other <code>/prompts</code>, and <code>#instructions</code> right here. If you ever catch yourself copying and pasting instructions between prompts, that’s your signal: split it up, give things a clear name, and keep each prompt focused on a single, repeatable workflow.</p>\n\n<p>The best reusable prompts are <strong>modular</strong> and <strong>specific</strong>, not giant copy-paste walls. If you can automate it or break it down into smaller pieces, do it! That way, you (and your team) can mix, match, and remix prompts to build bigger automations down the line - without losing your mind or having to decode a mysterious black box later.</p>\n\n<p>When you’re practicing on your own, start small and build up - tweak one thing at a time and watch how even tiny prompt or context changes can totally flip the results. Get curious about how each model handles the same task (some will surprise you, some... not so much).</p>\n\n<blockquote>\n<p>💎 I’m running out of space (and you’re probably out of caffeine already), so I’ll wrap it here. Next time, I’ll dig up a few wild, more advanced prompts and show you what Copilot will - and absolutely will NOT - do without super-clear instructions. Stay tuned!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"dont-let-me-have-all-the-fun\" href=\"#dont-let-me-have-all-the-fun\">\n  </a>\n  Don’t let me have all the fun!\n</h2>\n\n<p>Got questions, memes, or an obscure reaction GIF? Drop them below or just smash ❤️ - I’m here for it all! If you want to experiment before next week, search GitHub for <code>awesome-copilot</code> and you’ll find a ton of shareable repos.</p>\n\n<blockquote>\n<p>🦄 Curiosity getting to you yet? My own <code>awesome-github-copilot</code> repo is technically started (<em>barely</em>), but it does exist - and my super-secret Copilot Chat Extension is officially back in progress! 🤫</p>\n</blockquote>\n\n<p>And hey, if you just want to grab something cool, copy it, and run wild every once in a while? Go for it! Don’t forget to share your best finds below. 😜</p>\n\n\n<hr>\n\n<p>🛡️ <strong>Authored by Me (with an AI Sidekick)</strong></p>\n\n<p>Every word here is 100% my own - AI just played backup and fetched some ideas. We both double-check for bias, I do my own fact-checking, and call out anything that feels off. If you spot something wild (or wildly wrong), tell me! AI makes mistakes, but so do humans - especially if we’ve had too much coffee (or not enough sleep!).</p>\n\n",
    "description": "An introduction to reusable prompts in GitHub Copilot — what they are, how they work, and why they’re worth adding to your dev workflow.",
    "slug": "github-copilot-everything-you-wanted-to-know-about-reusable-and-experimental-prompts-part-1-iff",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fbaao3h9wio1o8xfq52ge.png",
    "tags": [
      "githubcopilot",
      "ai",
      "tutorial",
      "productivity"
    ]
  },
  {
    "title": "Fact-Checking the Fear Behind “The Dark Side of AI”: The Real Story",
    "link": "https://dev.to/anchildress1/fact-checking-the-fear-behind-the-dark-side-of-ai-the-real-story-366p",
    "date": "2025-07-20T10:00:20Z",
    "content_html": "<blockquote>\n<p>This post is a direct response to four nearly identical articles by <a class=\"mentioned-user\" href=\"https://dev.to/abhi_jith_f00c2ff58ac2a7e\">@abhi_jith_f00c2ff58ac2a7e</a>, all titled “The Dark Side of AI: How ChatGPT Can Lead to Psychosis and Mental Health Concerns,” published today (July 20, 2025):<br>\n<a href=\"https://dev.to/abhi_jith_f00c2ff58ac2a7e/latest-the-dark-side-of-ai-how-chatgpt-can-lead-to-psychosis-and-mental-health-concerns-3if8\">1</a> • <a href=\"https://dev.to/abhi_jith_f00c2ff58ac2a7e/intro-dark-the-dark-side-of-ai-how-chatgpt-can-lead-to-psychosis-and-mental-health-concerns-57g1\">2</a> • <a href=\"https://dev.to/abhi_jith_f00c2ff58ac2a7e/intro-the-dark-side-of-ai-how-chatgpt-can-lead-to-psychosis-and-mental-health-concerns-437b\">3</a> • <a href=\"https://dev.to/abhi_jith_f00c2ff58ac2a7e/intro-to-the-dark-side-of-ai-how-chatgpt-can-lead-to-psychosis-and-mental-health-concerns-1dd3\">4</a></p>\n\n<p>I’ve reported these posts, though I’m not exactly expecting much discourse against an account ending in “f00c2ff58ac2a7e.” That’s why I’m sharing my response here as a standalone post, in addition to my comments. What follows is nearly identical to my replies to those posts - plus a quick summary of the original articles (so you don’t need to click and give them extra views; trust me, you’re not missing anything) - along with my own perspective, so you know just how strongly I feel about this issue.</p>\n\n<p>Please feel free to copy, share, and amplify. Let’s work together to push back against this kind of fear-mongering and make it clear to every person - young or old: <strong>mental health struggles are never your fault.</strong></p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"first-a-psa-for-anyone-who-needs-it\" href=\"#first-a-psa-for-anyone-who-needs-it\">\n  </a>\n  First, a PSA for anyone who needs it:\n</h2>\n\n<p>If you or someone you know is experiencing a mental health crisis <strong>in the U.S., you can call <a href=\"https://988lifeline.org/\" target=\"_blank\" rel=\"noopener noreferrer\">988</a></strong> anytime, day or night, for free support. 988 is for any topic, offers support in English and Spanish (interpreters for other languages), and lets you talk, text, chat online, or use VP. There’s even a dedicated <a href=\"https://www.nami.org/support-education/nami-helpline/teen-young-adult-helpline/\" target=\"_blank\" rel=\"noopener noreferrer\">Teen &amp; Young Adult Helpline (#TalktoUs)</a> with peer support - again, all free and confidential.</p>\n\n<p><strong>If you’re outside the U.S., <a href=\"https://www.helpguide.org/find-help\" target=\"_blank\" rel=\"noopener noreferrer\">HelpGuide.org</a> lists helplines for several other countries</strong>, including the UK, South Africa, New Zealand, Philippines, Ireland, Australia, Canada, and India. It’s not global (yet), but it’s a start.</p>\n\n<p>It’s <em>critical</em> to recognize warning signs for early mental health crisis intervention and know how to support someone who might be experiencing first-episode psychosis (often seen in teens and young adults prior to a diagnosis of schizophrenia). Hallucinations and delusions are well-known symptoms, but early signs <strong>can also look like depression</strong>. There’s no cure, but schizophrenia and related disorders are very treatable - and treatment today usually means medication and counseling, not hospitals or “scary” interventions. Some helpful resources:</p>\n\n<ul>\n<li><a href=\"https://www.samhsa.gov/mental-health/what-is-mental-health/conditions/schizophrenia\" target=\"_blank\" rel=\"noopener noreferrer\">SAMHSA: Schizophrenia</a></li>\n<li><a href=\"https://www.mayoclinic.org/diseases-conditions/schizophrenia/symptoms-causes/syc-20354443\" target=\"_blank\" rel=\"noopener noreferrer\">Mayo Clinic</a></li>\n<li><a href=\"https://www.nami.org/About-Mental-Illness/Mental-Health-Conditions/Schizophrenia/\" target=\"_blank\" rel=\"noopener noreferrer\">NAMI: About Schizophrenia</a></li>\n<li><a href=\"https://www.nimh.nih.gov/health/topics/schizophrenia\" target=\"_blank\" rel=\"noopener noreferrer\">NIMH: Statistics</a></li>\n<li><a href=\"https://www.nami.org/press-releases/the-michael-laudor-tragedy/\" target=\"_blank\" rel=\"noopener noreferrer\">NAMI: The Michael Laudor Tragedy</a></li>\n</ul>\n\n\n<hr>\n\n<h2>\n  <a name=\"now-to-the-posts\" href=\"#now-to-the-posts\">\n  </a>\n  Now, to the posts\n</h2>\n\n<p>The central claim of these posts is that the rapid adoption and widespread, frequent use of AI - particularly chatbots like ChatGPT - is responsible for what the author describes as a rise in mental health disorders among teens and young adults. While the term “psychosis” is used (rather than “schizophrenia”), the narrative strongly implies a direct cause-and-effect relationship that simply isn’t supported by research.</p>\n\n<p>The author includes an anecdote about a young person who used ChatGPT as a sort of “friend,” supposedly leading them to blur the lines between technology and reality.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"my-biggest-problem-with-this\" href=\"#my-biggest-problem-with-this\">\n  </a>\n  My Biggest Problem with This\n</h2>\n\n<p>This conversation is so important - but let’s clear something up: blaming AI (or any single thing) for youth mental health or psychosis isn’t just misleading; it’s flat-out <em>unhelpful</em>. </p>\n\n<p>Even if we take the story at face value (there’s no supporting evidence or sources provided, so that’s a <em>big if</em>), <strong>it is absolutely NOT their fault!</strong></p>\n\n<p>The mere <em>suggestion</em> that a serious, life-altering condition like psychosis could be caused by something a person - young or old - did or didn’t do is not just <em>incorrect</em> and <em>unhelpful</em>, it’s <em><strong>dangerous</strong></em>. </p>\n\n<p>This kind of thinking is exactly why so many people are hesitant to seek help: they feel like it’s something they “brought on themselves” or could have prevented. The truth is, it’s not anyone’s fault - least of all your own.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-truth-about-psychosis\" href=\"#the-truth-about-psychosis\">\n  </a>\n  The Truth about Psychosis\n</h2>\n\n<p>Schizophrenia and other psychotic disorders typically first appear in teens and young adults, but that’s not because of the latest tech trend.</p>\n\n<p>To quote <a href=\"https://www.nami.org/about-mental-illness/mental-health-conditions/\" target=\"_blank\" rel=\"noopener noreferrer\">NAMI</a>:</p>\n\n<blockquote>\n<p><strong>“50% of all lifetime mental illness begins by age 14, and 75% by age 24.”</strong></p>\n</blockquote>\n\n<p>This has been true long before anyone worried about AI, TikTok, or even Pac-Man.</p>\n\n<p>There are <em>teams</em> of experts actively researching what causes psychosis - technology is just one small piece of a much larger puzzle that includes genetics, environment, stress, trauma, and yes, sometimes technology use (in many forms).</p>\n\n<p>A <a href=\"https://jamanetwork.com/journals/jamapsychiatry/fullarticle/2817594\" target=\"_blank\" rel=\"noopener noreferrer\">2024 study</a> found only a <strong>modest link</strong> between higher computer use in mid-teen years and later psychotic experiences, and even that was mostly explained by other risk factors (mental health and social challenges were present <em>before</em> the high computer use). No clear “cause and effect,” just a reminder that life is complicated and brains even more so.</p>\n\n<p>This is a serious medical topic. Blaming TV, games, the internet, or AI for psychosis is the same tired playbook people have used for decades, and it only makes it harder for people to ask for help. Mental illness is never as simple as a single cause, and fear-mongering or finger-pointing helps no one.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"why-this-is-important-to-me\" href=\"#why-this-is-important-to-me\">\n  </a>\n  Why This Is Important to Me\n</h2>\n\n<h3>\n  <a name=\"those-closest-to-me\" href=\"#those-closest-to-me\">\n  </a>\n  Those Closest to Me\n</h3>\n\n<p>I grew up with someone in my household who had an untreated mental health condition. It wasn’t schizophrenia, but it deeply shaped my world from my earliest memories. It wasn’t “good” or “bad” - it was simply normal for me. Years later, after I was grown, they finally received help. I wish I could say it was a storybook turnaround. There were good stretches, and some not-so-good ones. Did all those years without support play a role in how things are now? I can’t say for sure - but I know it didn’t help.</p>\n\n<h3>\n  <a name=\"my-own-journey\" href=\"#my-own-journey\">\n  </a>\n  My Own Journey\n</h3>\n\n<p>I was diagnosed with a serious mental health condition in my early twenties (and I’m always willing to talk about it privately if anyone needs support - just reach out). Honestly, I felt “different” long before I ever got the diagnosis. I couldn’t quite name it, and for a long time I just assumed I was “off” in some way. Admitting there might be a problem took a <em>long</em> time; actually seeking help took <em>even longer</em> and was often inconsistent.</p>\n\n<p>It wasn’t until college, when I signed up for free counseling sessions (for reasons I can’t even remember - probably thanks to a sibling who worked in the office), that things started to shift. My counselor, Maggie, was the definition of approachable and probably saved my life more than once. One of the first things she did was encourage more frequent sessions.</p>\n\n<blockquote>\n<p><strong>A quick PSA:</strong> Finding the right counselor or therapist can be pure luck - or it can take a lot of searching. If you tried once and it didn’t click, don’t give up. Your “Maggie” is out there, but you’ll never meet them if you don’t keep looking.</p>\n</blockquote>\n\n<p>I stuck with counseling for a long time (in addition to other treatment). Life eventually took us in different directions, and it hasn’t always been as easy since, but I learned how to show up for myself and talk about it. Some days I’m better at it than others, but overall, I’m a happy, healthy adult - and, most importantly, I finally <em>feel</em> normal.</p>\n\n<h3>\n  <a name=\"ripple-effects\" href=\"#ripple-effects\">\n  </a>\n  Ripple Effects\n</h3>\n\n<p>Out of respect for my family’s privacy, I won’t go deep here. But as an adult, I’ve seen firsthand how mental health issues can affect not just individuals, but entire families - even those who don’t live under the same roof. The big lesson: it’s not just okay to talk about mental health and seek help - <strong>it’s essential</strong>. The person in my life who struggled is doing much better now, thanks to a treatment plan that worked for them and continued care.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"be-part-of-the-solution-to-mental-health\" href=\"#be-part-of-the-solution-to-mental-health\">\n  </a>\n  Be Part of the Solution to Mental Health\n</h2>\n\n<p>Mental health struggles - crisis or not - are <em>never</em> caused by one thing, and they’re never solved by one thing. It takes understanding, openness, and the willingness to address tough topics. Spreading rumors or horror stories like “ChatGPT made her crazy!” only hurts people who are already suffering.</p>\n\n<p><strong>Please, be part of the solution. Share. Talk. Show up. Somebody needs it more than you know.</strong></p>\n\n<p>Let’s focus on compassion, understanding, and <em>real</em> support for those struggling - not easy answers or scapegoats. 💛</p>\n\n\n<hr>\n\n<blockquote>\n<p>🛡️ This post was created with compassion, understanding, and the help of ChatGPT.</p>\n</blockquote>\n\n",
    "description": "This post is a direct response to four nearly identical articles by @abhi_jith_f00c2ff58ac2a7e, all...",
    "slug": "fact-checking-the-fear-behind-the-dark-side-of-ai-the-real-story-366p",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fpy8x0dynqa7pw42s9ypy.png",
    "tags": [
      "ai",
      "mentalhealth",
      "chatgpt",
      "technology"
    ]
  },
  {
    "title": "Is GitHub Copilot Safe? The Fun (and Hard) Truth About Responsible AI 🚦",
    "link": "https://dev.to/anchildress1/is-github-copilot-safe-the-fun-and-hard-truth-about-responsible-ai-3b95",
    "date": "2025-07-16T12:05:00Z",
    "content_html": "<p>It hit me the other day - I haven’t been great about adding RAI disclaimers (especially around here). Most of the time I remember, but when I’m deep in the zone - or stuck on that “Copilot, just LISTEN!” rollercoaster - it’s easy to forget.</p>\n\n<p>Now that I’ve gone back and added those RAI footers (like I should’ve from the start), let’s take a real look at what actually matters - and how you can handle it, too.</p>\n\n<blockquote>\n<p>🙏 Not an expert - just someone sharing what I’ve learned in the wild. If you spot something out-of-date or just plain wrong, drop a comment. Help me help <em>everyone</em> - no shame, just learning!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"tldr\" href=\"#tldr\">\n  </a>\n  ⚡ TL;DR\n</h2>\n\n<ul>\n<li>🧰 <strong>Copilot is a tool, not a magic wand.</strong> Your name’s on the code - no matter who (or what) wrote it.</li>\n<li>👀 <strong>RAI is everyone’s job.</strong> Know Copilot’s strengths <em>and</em> blind spots before you release.</li>\n<li>📝 <strong>Disclose everything!</strong> If Copilot helped, make it obvious - especially in reports, docs, and commits.</li>\n<li>🫱🏾‍🫲🏼 <strong>Not every fix is an AI job</strong> - there are times only you (with your team) can solve it.</li>\n<li>🔬 <strong>Don’t skip basics:</strong> Plan, test, document - don’t get lazy just because AI’s fast.</li>\n<li>🧃 <strong>No AI scapegoats:</strong> Copilot’s just a sidekick. If it leads you off a cliff, you were still in the captain’s chair.</li>\n</ul>\n\n\n<hr>\n\n<h2>\n  <a name=\"what-is-responsible-ai-and-why-care\" href=\"#what-is-responsible-ai-and-why-care\">\n  </a>\n  🌈 What Is Responsible AI (and Why Care)?\n</h2>\n\n<p>Think “college ethics class” plus a heavy sprinkle of real-world weirdness. RAI is primarily about two things:</p>\n\n<ol>\n<li>\n<p><strong>How the provider (GitHub, Microsoft, etc.) designs and delivers Copilot</strong> - safe, fair, and transparent. </p>\n\n<blockquote>\n<p>Want the official version? <a href=\"https://learn.microsoft.com/en-us/azure/machine-learning/concept-responsible-ai\" target=\"_blank\" rel=\"noopener noreferrer\">Check Microsoft's builders page</a>!</p>\n</blockquote>\n</li>\n<li><p><strong>How you use Copilot (or any AI)</strong> - what you build, how you share it, and what you let out into the world. That’s the half I’m tackling here.</p></li>\n</ol>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-yeah-but-list-copilot-limitations\" href=\"#the-yeah-but-list-copilot-limitations\">\n  </a>\n  🔒 The “Yeah, But” List: Copilot Limitations\n</h2>\n\n<p>Based on <a href=\"https://docs.github.com/en/copilot/responsible-use-of-github-copilot-features/responsible-use-of-github-copilot-chat-in-your-ide?tool=vscode#limitations-of-github-copilot-chat\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub’s official docs</a>, plus my spin for maximum realness:</p>\n\n<ul>\n<li>\n<strong>Limited Scope:</strong> Obscure tech? Weird edge case? Copilot’s probably lost before you get started.</li>\n<li>\n<strong>Potential Biases:</strong> Yes, it can <em>learn</em> and <em>perpetuate biases</em>, just like people do. Keep your eyes peeled.</li>\n<li>\n<strong>Security Risks:</strong> AI can accidentally leak secrets or create vulnerabilities. Don’t copy-paste blindly!</li>\n<li>\n<strong>Matches with Public Code:</strong> That “original” Copilot snippet might be living its best life somewhere else on GitHub already.</li>\n<li>\n<strong>Inaccurate Code:</strong> Looks right, compiles... until it doesn’t. 🤷‍♀️</li>\n<li>\n<strong>Terrible at Non-Code Stuff:</strong> If you ask Copilot about philosophy or pop stars, prepare to get answers from another galaxy.</li>\n<li>\n<p><strong>Web Search Responses:</strong> If your org allows, Copilot sometimes Googles and pastes.</p>\n\n<blockquote>\n<p>That’s about as reliable as Rachel Berry mid-song, checking her phone for lyrics - confident, but don’t trust it for your solo! 🎤</p>\n</blockquote>\n</li>\n</ul>\n\n\n<hr>\n\n<h2>\n  <a name=\"if-you-code-it-you-own-it\" href=\"#if-you-code-it-you-own-it\">\n  </a>\n  🕹️ If You Code It, You Own It!\n</h2>\n\n<p>Heard “you break it, you bought it”? Copilot’s version: “you code it, you’re on the hook.” No late-night support call will blame the AI. The only fee you’ll pay is in lost sleep and an overage of Slack messages.</p>\n\n<p>If you sneak in a “five-minute fix” without tests, it <em>will</em> bite back - and guess whose name is at the top of <code>git blame</code>?</p>\n\n<blockquote>\n<p>🙏 Don’t be that person whose only excuse is, “Copilot said it was fine!” That’s not the new “it was like that when I got here” - don’t let it start.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"now-what-ai-out-loud\" href=\"#now-what-ai-out-loud\">\n  </a>\n  👀 Now What? AI Out Loud\n</h2>\n\n<p>Wondering what all this RAI talk means for you in the real world? Here’s the deal: any time AI helps out - own it, label it, and make sure everyone else can see it too. Transparency is the new black.</p>\n\n<h3>\n  <a name=\"for-generated-reports-amp-docs\" href=\"#for-generated-reports-amp-docs\">\n  </a>\n  For Generated Reports &amp; Docs\n</h3>\n\n<p>If Copilot whipped up your report (and it’s not code), just tack on a quick footer. Seriously - a copy, a paste, and you’re done. Want to automate it? Set up a user instruction and let Copilot add the credit line for you:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>---\n\nGenerated with the help of GitHub Copilot, as directed by [YOUR NAME]\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>🕰️ If you want a timestamp, copy it in yourself. Trusting Copilot with dates is like asking your dog to set your alarm - cute, but you’re gonna be late.</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"for-commits\" href=\"#for-commits\">\n  </a>\n  🏷️ For Commits\n</h3>\n\n<h4>\n  <a name=\"step-one-embrace-conventional-commits\" href=\"#step-one-embrace-conventional-commits\">\n  </a>\n  Step One: Embrace Conventional Commits\n</h4>\n\n<blockquote>\n<p>🪦 Confession: I used to be the world’s <strong>worst committer</strong>! think “welp, THAT didn’t work” as a real commit message. And yes, it happened more than once...</p>\n</blockquote>\n\n<p>Eventually, I went on a mission to find a clear, repeatable way to flag my AI-assisted commits. The answer? <a href=\"https://www.conventionalcommits.org/en/v1.0.0/#summary\" target=\"_blank\" rel=\"noopener noreferrer\">Conventional Commits</a> (plus a linter for good measure). </p>\n\n<p>Never seen one? Here’s what it looks like:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>feat(api): [JIRA-123] Add api for xyz\n\n[optional bulleted list of changes]\n\n[footers - where the magic happens]\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>🦄 <strong>Bonus:</strong> You get automated changelogs for just a <em>little</em> extra setup! Honestly, that’s what finally convinced me to use them every single time - no turning back.</p>\n\n<p>🪧 There are plenty of tools out there to help, too! Everything from classic git templates to handy CLI fill-in-the-blanks.</p>\n</blockquote>\n\n\n<hr>\n\n<h4>\n  <a name=\"step-two-my-diy-commit-disclosure-guide\" href=\"#step-two-my-diy-commit-disclosure-guide\">\n  </a>\n  Step Two: My DIY Commit Disclosure Guide\n</h4>\n\n<p>Since there's no true standard for this (at least, not yet), I want to share my (no-royalties-required) system for full commit-styled AI disclosure. </p>\n\n<p>In every single commit, I add 2 separate footers: one stating exactly how Copilot was involved (cause it <em>always</em> does something) and one is my \"signature\" that I reviewed, tested, and approved the implementation. </p>\n\n<p>If Copilot played multiple roles? Keep it simple - go with the footer that best matches the most AI hands-on contribution.</p>\n\n<ul>\n<li>\n<p>If Copilot only wrote the commit message:<br>\n</p>\n<pre class=\"highlight plaintext\"><code>  Commit-generated-by: GitHub Copilot &lt;copilot@github.com&gt;\n</code></pre>\n\n</li>\n</ul>\n\n\n\n<ul>\n<li>\n<p>If I paired with Copilot (clear prompt and step-by-step direction):<br>\n</p>\n<pre class=\"highlight plaintext\"><code>Co-authored-by: GitHub Copilot &lt;copilot@github.com&gt;\n</code></pre>\n\n</li>\n</ul>\n\n\n\n<ul>\n<li>\n<p>If Copilot wrote most of the code (here, go implement this story):<br>\n</p>\n<pre class=\"highlight plaintext\"><code>  Generated-by: GitHub Copilot &lt;copilot@github.com&gt;\n</code></pre>\n\n</li>\n</ul>\n\n\n\n<ul>\n<li>\n<p>Always:<br>\n</p>\n<pre class=\"highlight plaintext\"><code>  Signed-off-by: Ashley Childress &lt;1234-no-reply@github.com&gt;\n</code></pre>\n\n\n\n\n<blockquote>\n<p>(or your name - unless you really want to blame me 😆)</p>\n</blockquote>\n</li>\n</ul>\n\n<p>So at 3am, when Future You (or some poor teammate) <code>git blame</code>s a file, you’ll know who did what. There's really no official standard yet, so go wild - or just slap a robot emoji 🤖 in there and call it done. <strong>Just make it clear and take credit (or blame).</strong></p>\n\n\n<hr>\n\n<h2>\n  <a name=\"top-3-copilot-stay-in-your-lane-moments\" href=\"#top-3-copilot-stay-in-your-lane-moments\">\n  </a>\n  🚫 Top 3 “Copilot, Stay in Your Lane!” Moments\n</h2>\n\n<p>When I was little, my Granny would always say, “Sometimes, you’ve just got to wear your big girl panties.” Translation: there are times when you have to face the music and just deal with what’s in front of you - no shortcuts. If you let Copilot trash production... well, those are the only pants you’re getting.</p>\n\n<ol>\n<li>\n<p><strong>Copilot is a tool, not a magician.</strong> It’s been <em>confidently wrong</em> enough times to make me seriously question reality.</p>\n\n<blockquote>\n<p>Me: “Where’s that logic <em>actually</em> coded?\" <br>\nCopilot: *conjuring code like a magician’s neverending handkerchief*<br>\nMe: “You’ve got to be kidding me...”</p>\n</blockquote>\n</li>\n<li><p><strong>You’re the adult in the room.</strong> You have to know not just what Copilot <em>can</em> do, but also what it <em>can't</em> (or <em>shouldn't</em>).</p></li>\n<li><p><strong>Don't be afraid to bench Copilot.</strong> Real debugging is sometimes just you, four friends, and a bunch of “what if...” ideas. AI’s not built for that kind of chaos. 🫠</p></li>\n</ol>\n\n\n<hr>\n\n<h2>\n  <a name=\"avoid-git-blame-drama\" href=\"#avoid-git-blame-drama\">\n  </a>\n  🥊 Avoid Git Blame Drama\n</h2>\n\n<ul>\n<li>\n<strong>Start with a plan</strong> - don’t just wing it.</li>\n<li>\n<strong>Try prompting Copilot with TDD</strong>, but know its tests can be as shallow as a kiddie pool if you don't provide the right context and criteria.</li>\n<li>\n<strong>Never accept code you don’t understand</strong> - have Copilot ELI5 every step until you do.</li>\n<li>\n<strong>When it matters, write your own tests (or code)</strong>. Copilot sometimes invents magical shortcuts - don’t follow the Keebler Elves into the tree!</li>\n<li>\n<strong>Disclose everything!</strong> Tag Copilot’s work in your commit messages, READMEs, or reports. Future You will thank you.</li>\n</ul>\n\n\n<hr>\n\n<h2>\n  <a name=\"your-turn\" href=\"#your-turn\">\n  </a>\n  💬 Your turn!\n</h2>\n\n<p>Have a Copilot win, a fail, or an epic facepalm moment? Drop it in the comments - bonus points for memes, hot takes, or your best \"AI tried, I survived\" story. Let’s make RAI actually fun (or at least not completely boring)! ✨</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"ai-helped-im-still-to-blame\" href=\"#ai-helped-im-still-to-blame\">\n  </a>\n  🛡️ AI Helped, I’m Still to Blame\n</h2>\n\n<p>This post was brewed by me - with a shot of ChatGPT, a splash of sarcasm, and zero disclaimers skipped. If you catch bias or a goof, call it out. AI isn’t perfect (neither am I).</p>\n\n",
    "description": "It hit me the other day - I haven’t been great about adding RAI disclaimers (especially around here)....",
    "slug": "is-github-copilot-safe-the-fun-and-hard-truth-about-responsible-ai-3b95",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fdbk6nvlain3f3i33cmli.png",
    "tags": [
      "githubcopilot",
      "ai",
      "tutorial",
      "discuss"
    ]
  },
  {
    "title": "How I Blog with Bots (But You Can Still Blame Me) 😅",
    "link": "https://dev.to/anchildress1/how-i-blog-with-bots-but-you-can-still-blame-me-2861",
    "date": "2025-07-13T16:48:18Z",
    "content_html": "<blockquote>\n<p>The cover image is a result of me getting very impatient with ChatGPT after the third <strong>nearly perfect</strong> cover of some random stranger that was supposed to be me. So, I'm yelling, \"that's definitely not my face!\" and ChatGPT insists theres a resemblance (there's not). It didn't take much for me to give up and upload a real picture, as a guide.</p>\n\n<p>🦄 <strong>Spoiler:</strong> The very next one was a total disaster, but the last attempt? Not half bad! 🤣</p>\n</blockquote>\n\n\n<hr>\n\n<p>At some point during the day yesterday, I was working on a project and talking to a friend about the whole AI “thing” (that’s the new technical word for it, by the way 🤩). Then out of nowhere, it dawned on me... I’m pretty positive that I don’t have a <strong>single</strong> post with the sort of footer/disclaimer that I’ve been preaching about for weeks, to anyone who would listen to me. 🤦‍♀️</p>\n\n<blockquote>\n<p>You guys have got off easy (so far) - but some of the folks at work, I’m sure, were <em>thrilled</em> about the weekend! Don’t worry, guys, <em>me too</em>... me too. 😮</p>\n</blockquote>\n\n<p>So, since I’ve made a point to go back and add a disclaimer to every post thus far, I decided to take a quick minute to explain what that <strong>really</strong> means - in case anyone is curious.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"all-the-ways-i-let-robots-help\" href=\"#all-the-ways-i-let-robots-help\">\n  </a>\n  All the Ways I Let Robots Help 📡\n</h2>\n\n<h3>\n  <a name=\"github-copilot\" href=\"#github-copilot\">\n  </a>\n  GitHub Copilot\n</h3>\n\n<p>You probably guessed already - this is my primary AI for all things coding, but since their premium limits went into permanent effect on June 18th, I’ve been doing good to break even just with work. I’ll share what part’s have actually been working at some point, but so far the answer is \"not a lot\".</p>\n\n<blockquote>\n<p>I have some ideas, so it's not a lost cause yet! For now though, I'm hovering right around 67% usage and work might actually cut me off if I don't make it to the end of the month 👿</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"codex\" href=\"#codex\">\n  </a>\n  Codex\n</h3>\n\n<p>Since I already have an OpenAI subscription, I’ve been tinkering with Codex as a potential solution to the lack of premium requests 😱😭 We’ll see how it goes.</p>\n\n<blockquote>\n<p>I’m <em>trying</em> to give it a fair chance... The <strong>good news</strong> in all this? You remember in my <a href=\"https://dev.to/anchildress1/github-copilot-agent-mode-the-mistake-you-never-want-to-make-1mmh\">nightmare story</a> I mentioned doing some pretty out-there things to get my hands on the enterprise version of the Copilot license? Well, apparently, if you exhaust 100% of your premium requests in less than 4 days <em>AND</em> make sure your boss is <em>instantly</em> aware of the problem - you know, so they understand the <strong>true gravity</strong> of the matter in real-time (which is around 7 PM on a Saturday) - work is suddenly more willing to share 😇 </p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"chatgpt\" href=\"#chatgpt\">\n  </a>\n  ChatGPT\n</h3>\n\n<p>I’ve been a long-time user for quite some time, but I wanted to call this guy out - and more specifically, exactly <em>how</em> ChatGPT is involved in all my posts. While Copilot is the topic of most everything I write, ChatGPT is usually busy behind the scenes.</p>\n\n<blockquote>\n<p>🦄 Don’t worry, I’m sure the obsession will wear off eventually... maybe... oh hell, probably not. Never mind! 😅</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"gemini\" href=\"#gemini\">\n  </a>\n  Gemini\n</h3>\n\n<p>Gemini and I aren’t talking much right now - which has everything to do with the beta install I put on my Android before fully realizing what Google had <em>actually</em> done with all the hands-free tools the non-generative assistant used to handle (spoiler: not a damn thing is the answer 😡). So, for now, Gemini’s riding the bench.</p>\n\n<blockquote>\n<p>I’m sure that won’t last long. Google might be trailing OpenAI and Anthropic in the AI game, but I’ve never known them to stay at the back of the pack. 🛸</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-messy-humanai-creative-process\" href=\"#the-messy-humanai-creative-process\">\n  </a>\n  The (Messy) Human-AI Creative Process 🕹️\n</h2>\n\n<h3>\n  <a name=\"cover-art\" href=\"#cover-art\">\n  </a>\n  Cover art\n</h3>\n\n<p>That one is easy to guess. I’ve almost perfected a prompt that will keep the primary image content vertically \"squished\" towards the center, so the aspect ratio will match suggested size guidelines after I crop it.</p>\n\n<blockquote>\n<p>Today's image is a test in full-size, but it was to good to mess with much, especially considering all the personalities it gave me along the way. 🥸</p>\n</blockquote>\n\n<ul>\n<li><p>Seems like either all of the training data was a perfect square OR more likely it's been trained to output specific sizes and my attempts at a compromise violate that plan.</p></li>\n<li><p>I have a designated project for the banner images and roughly half the time I give it a prompt and just use whatever it spits out at me. The other half, it’s either not at all usable or it’s <em>so terrible</em> I really don’t want to share it.</p></li>\n</ul>\n\n<blockquote>\n<p>It will take some work for me to go through those, but yes - I at least save them. 🔒</p>\n</blockquote>\n\n<ul>\n<li>Gimp isn’t AI, but it's my go-to for anything image related. Up until a little bit ago I <strong>thought</strong> I was saving all images with meta tags that included the “Generated by/Edited with” comment, but either it’s just different on this computer or they’re not really being saved like I thought. </li>\n</ul>\n\n<blockquote>\n<p>I’m gonna work on that before next post though - those should definitely be there! 🏁</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"blog-posts\" href=\"#blog-posts\">\n  </a>\n  Blog posts 💬\n</h3>\n\n<p>I’m not about to let AI write the <em>whole thing</em> for me (where’s the fun in that?), but I do rely on it a lot for drafts and edits. Just in case anyone’s wondering how the whole process actually happens, here it is - step by step:</p>\n\n\n<hr>\n\n<p>ONE. <strong>Idea</strong></p>\n\n<p>Sometimes I’ll literally have no idea what I'm going to talk about until I actually start writing. Other times, I’ve been saving ideas for weeks! There’s really no rhyme or reason to this, so I just go with it. </p>\n\n<blockquote>\n<p>Seems like now that I'm actually in a groove, these \"off-the-usual-topic\" (read <em>Copilot</em>) posts are more frequent, too. 🏎️</p>\n</blockquote>\n\n\n<hr>\n\n<p>TWO. <strong>Draft</strong></p>\n\n<p><strong>IS 100% ME</strong> - sometimes I’m lazy and will dictate to ChatGPT (occasionally Gemini, but we’re on a hiatus right now anyway), but I have an instruction that says specifically do not change anything until I tell you I’m ready to start editing. </p>\n\n<p>So for the majority of the week (and more-than-occasionally late the night before 🤐) I’m working on a relatively cohesive unit to cover a specific <em>something</em> (\"topic\" is usually a stretch, at this point). Typically, the draft version is roughly twice as long as the final version and my posts aren’t exactly short to begin with (I know).</p>\n\n\n<hr>\n\n<p>THREE. <strong>Edits</strong></p>\n\n<p>So this is where it gets a <em>little tricky</em>. I have a custom set of instructions for the blog posts, in which the majority of it is focused on two major things, in order:</p>\n\n<ul>\n<li>Scan the entire post and make changes wherever needed to remove <strong>unintentional bias</strong>, and for every change you make, summarize it with examples and <strong>show me</strong> why your version is better suited. </li>\n</ul>\n\n<blockquote>\n<p>I’m getting better as we go, but it’s really just a safety net so I don’t accidentally put my foot in my mouth after taking the scenic route to my point (it’s a talent).  📸</p>\n</blockquote>\n\n<ul>\n<li>Keep my <strong>original attitude and quirks</strong> as much as possible, but not to the extent that it contradicts the first point.</li>\n</ul>\n\n<blockquote>\n<p>I already trained it a long time ago to censor me. It doesn’t even bring that part up anymore, most of the time anyway. 😶 </p>\n</blockquote>\n\n\n<hr>\n\n<p>FOUR. <strong>Negotiation</strong></p>\n\n<p>I really don’t have a better word for what happens during this phase, because that’s exactly what it feels like. ChatGPT took my nice story and turned it into something that I only vaguely recognize, so I’ll argue that it’s <em>TOO</em> changed. </p>\n\n<p>ChatGPT argues with me that not everybody understands what a \"holler\" is and that it’s probably already too far off-topic to explain whatever contextual point I wanted to make anyway.</p>\n\n<blockquote>\n<p>It's usually accurate, too. 😤</p>\n</blockquote>\n\n\n<hr>\n\n<p>FIVE. <strong>Final polish</strong></p>\n\n<p>After we have a <em>final working version</em> (cause I’m still changing it randomly), the quizzing starts for all those words I want to say, but really just cannot put my finger on or I need to convey some sort of emotion or attitude (and I’m getting sick of seeing the same emojis all the time).</p>\n\n<p>This is where the content of the blog conversation in ChatGPT pivots and I’ll have it show me a random 10 emojis that could work for a particular phrase or scenario - I’ll pick from there. Same with section titles and quotes, too.</p>\n\n<blockquote>\n<p>💿 When it comes to titles, quotes, and references - it's rarely as simple as <strong>picking one</strong> from a list. Most of the time, I'll pick parts of at least three and then feed them back to ChatGPT to make coherent again.</p>\n</blockquote>\n\n\n<hr>\n\n<p>SIX. <strong>Final review</strong></p>\n\n<p>At this point it’s all loaded into Dev, but I'm still reviewing repeatedly until I can make it from top to bottom without the urge to change something immediately (which can sometimes take a couple days - like this post ⚡️). </p>\n\n<p>There’s typically a whole lot of page swapping (preview &gt; edit &gt; preview) until I’m finally happy with the overall version. From there, most posts get scheduled for Wednesday mornings.</p>\n\n<blockquote>\n<p>🪴 Why? No reason, really - it’s more random chance. I’ve tried to stay on at least a weekly schedule since I joined. If I schedule the big posts, I know I won’t accidentally miss a day. 😇</p>\n</blockquote>\n\n\n<hr>\n\n<p>SEVEN. <strong>Update: RAI Footer</strong></p>\n\n<p>So here’s a late-breaking update: After I stumbled onto a post over on Medium (for reasons I still can’t fully explain 🙄), I decided to forward some of these posts there too. Turns out, Medium has a whole policy on “AI-generated” content — because <em>of course</em> they do. And since I can never resist at a good debate, let’s be extra clear about how these work.</p>\n\n<p>Those “RAI Footers” you see at the end of each post? They’re mostly the work of ChatGPT now, spun up from my own pile of instructions. </p>\n\n<p>The usual ask:<br>\n<code>Take the main theme of this post and add a unique, fun way to say that you (the AI) helped make it happen.</code></p>\n\n<p>I always review and edit for good measure, but honestly, after ChatGPT does all the heavy lifting, it’s only fair it gets its own section. This is the AI-generated section, after all. Seems only right to give the robot its moment in the spotlight. 🎩</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"tldr-the-heart-of-the-matter\" href=\"#tldr-the-heart-of-the-matter\">\n  </a>\n  TL;DR: The Heart of the Matter 🫀\n</h2>\n\n<p>If you’ve made it this far, now you know:</p>\n\n<ul>\n<li>Yes, I use AI - a LOT</li>\n<li>No, it doesn’t do <em>all</em> the work for me</li>\n<li>Yes, I argue with it (and sometimes lose...)</li>\n<li>No, it hasn’t taken over my personality</li>\n<li>Yes, the cover art is AI-generated\n\n<ul>\n<li>unless it’s truly hideous - those are locked in the vault!</li>\n</ul>\n\n\n</li>\n\n</ul>\n\n<blockquote>\n<p>The real secret is that all of this is <em>still me</em>! I’m just occasionally powered up by caffeine and robots. ☕️🤖</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"chime-in\" href=\"#chime-in\">\n  </a>\n  Chime In 🎤\n</h2>\n\n<p>Got tips, tricks, or your own tales of AI chaos? I’d love to hear from you - add your two cents below!</p>\n\n\n<hr>\n\n<blockquote>\n<h3>\n  <a name=\"i-used-ai-but-blame-me\" href=\"#i-used-ai-but-blame-me\">\n  </a>\n  🛡️ I Used AI, But Blame Me\n</h3>\n\n<p>Everything I share here is my own perspective - created with the help of AI tools (GitHub Copilot, ChatGPT, and their friends), but always with a human (me) in the loop. I do my best to catch accidental bias and fact-check, but if you ever spot something odd, let me know! AI isn’t perfect, and neither am I.</p>\n\n<p><strong>TL; DR:</strong> I let the bots help. But if you spot something weird, blame the author, not the algorithm. 🙋‍♀️</p>\n</blockquote>\n\n",
    "description": "The cover image is a result of me getting very impatient with ChatGPT after the third nearly perfect...",
    "slug": "how-i-blog-with-bots-but-you-can-still-blame-me-2861",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fsz4qrlmm5hbbbxgbqw1w.png",
    "tags": [
      "watercooler",
      "ai",
      "discuss",
      "community"
    ]
  },
  {
    "title": "Name Swap Alert: OCD Strikes Again (But It’s Just the Username)",
    "link": "https://dev.to/anchildress1/name-swap-alert-ocd-strikes-again-but-its-just-the-username-3pai",
    "date": "2025-07-12T20:51:53Z",
    "content_html": "<p>I changed my username back to <code>anchildress1</code> (just dropped the extra “1” from <code>anchildress11</code>). For whatever reason, my usual username wasn’t available when I first made the account, but my OCD-tendencies finally won out! </p>\n\n<blockquote>\n<p>Odds are, I probably made an account years ago and totally forgot. Cue the “wait, this seems oddly familiar...” moment. 🫣</p>\n</blockquote>\n\n<p>I was doing something completely unrelated and somehow ended up staring at my profile page - the editable text field practically begging me to try it. And... it worked! 🎉 I finally feel like myself again!</p>\n\n\n<hr>\n\n<p>The brief rounds of testing I did say the auto-redirect will handle any references or links that are out there, but <strong>just in case</strong> I apologize in advance if anything gets <em>weird</em>. Let me know if you run into problems from the switch!</p>\n\n\n<hr>\n\n<blockquote>\n<h3>\n  <a name=\"rai-disclaimer\" href=\"#rai-disclaimer\">\n  </a>\n  🛡️ RAI Disclaimer\n</h3>\n\n<p>Everything I share here is my own perspective—created with the help of AI tools (GitHub Copilot, ChatGPT, and their friends), but always with a human in the loop. I do my best to catch accidental bias and fact-check, but if you ever spot something odd, let me know! AI isn’t perfect, and neither am I.</p>\n\n<p><strong>TL; DR:</strong> AI helped, but you can blame me for the <strong>chaos</strong>! 🫠</p>\n</blockquote>\n\n",
    "description": "I changed my username back to anchildress1 (just dropped the extra “1” from anchildress11). For...",
    "slug": "name-swap-alert-ocd-strikes-again-but-its-just-the-username-3pai",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F3r7it14s5n0mqmdw2j8v.png",
    "tags": [
      "watercooler",
      "profiletweaks",
      "ocdmoments",
      "usernamenews"
    ]
  },
  {
    "title": "GitHub Copilot Agent Mode: The Mistake You NEVER Want to Make",
    "link": "https://dev.to/anchildress1/github-copilot-agent-mode-the-mistake-you-never-want-to-make-1mmh",
    "date": "2025-07-11T12:43:51Z",
    "content_html": "<blockquote>\n<p>Special shoutout to <a class=\"mentioned-user\" href=\"https://dev.to/georgekobaidze\">@georgekobaidze</a>, who kindly shared my <a href=\"https://dev.to/anchildress11/build-it-better-real-world-ai-coding-with-github-copilot-1d47\">last post</a> and asked the infamous question behind “Never leave Copilot unattended (ask me how I know 🤣)”</p>\n\n<p>He probably expected a quick answer - now everyone gets the inside scoop on why “ask me” isn’t <em>always</em> so simple. 😇</p>\n\n<p>Careful what you wish for, Giorgi. You wanted the story - so here’s the whole saga, dramatics and all! </p>\n\n<p>Hope you all find the humor in this retelling, and enjoy it as much as I enjoyed writing it!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"tldr\" href=\"#tldr\">\n  </a>\n  TL;DR\n</h2>\n\n<ul>\n<li>I set out to build my own “Coding Agent”, because waiting for a license was driving me up the wall</li>\n<li>Copilot and I got into a great rhythm and (feeling invincible), I unleashed it in VS Code Insiders with full auto-approved control</li>\n<li>Until one day, I suddenly realized I was hungry - so I left Copilot alone, <strong>unsupervised</strong>, while I raided the kitchen</li>\n<li>The moral? \n\n<ul>\n<li>Trust, but verify (and <strong>pause</strong> Copilot before snack breaks) 🧃\n</li>\n<li>Never underestimate how quickly an “AI experiment” can go sideways</li>\n</ul>\n\n\n</li>\n\n</ul>\n\n\n<hr>\n\n<h2>\n  <a name=\"quick-recap\" href=\"#quick-recap\">\n  </a>\n  Quick recap ✳️\n</h2>\n\n<p>I built this with one AI (Copilot) and one very determined, slightly obsessive developer (me) who won’t accept any result without first stress-testing every loophole and poking every dark corner - sometimes out of sheer force of will, which is a superpower (right up until it’s not). 🕳️</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"background\" href=\"#background\">\n  </a>\n  Background 📝\n</h2>\n\n<p>Want the full saga from the very beginning? Check out my <a href=\"https://dev.to/anchildress11/letting-ai-drive-a-month-of-building-with-github-copilot-4a94\">first blog post</a>, then jump to the <a href=\"https://dev.to/anchildress11/from-hell-loops-to-happy-commits-38c4\">sequel</a> if you want a sense of what the “simple” Slack app really looked like (a full-on epic, case study, adventure)! </p>\n\n<p>What I really wanted was GitHub’s <strong>Coding Agent</strong>. But getting a license for that was like convincing Dexter Morgan to share his slide collection - technically possible, but highly inadvisable (and probably illegal). </p>\n\n<blockquote>\n<p>💡 If you're still learning all the different flavors - <a href=\"https://docs.github.com/en/copilot/how-tos/agents/copilot-coding-agent/using-copilot-to-work-on-an-issue\" target=\"_blank\" rel=\"noopener noreferrer\">Coding Agent</a> is the magical Copilot mode where you just give it a task, it does the work in a safe little sandbox, and opens a pull request for you to review.</p>\n\n<p><strong>New update:</strong> It also only costs ONE premium request per use now (unlike the ~90 I spent a couple of weeks ago).</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"decision-time\" href=\"#decision-time\">\n  </a>\n  Decision time 🪤\n</h2>\n\n<p>There were a billion things going on at work, which came with a million excuses as to why I couldn't have the Coding Agent license (it was still enterprise-only then), so I get it. Well, the adult me understood. The stubborn side? Not so much. (I could write a whole other post on the wild stuff I came up with to get access to that feature, but I’ll spare you.)</p>\n\n<p>So, I gave myself an ultimatum:</p>\n\n<ul>\n<li>Outright buy the license (no, on principle)</li>\n<li>Admit defeat and move on (it physically hurt)</li>\n</ul>\n\n<p>I <em>tried</em> to move on - <em>really tried</em>. I picked up a code review tool project to distract myself, hoping that maybe - just maybe - someone (anyone) would change their mind. I spent weeks planning, diagramming, and organizing a truly absurd number of notes. I even had first epic already storyboarded out in detail and a solid UI design in the works. </p>\n\n<h3>\n  <a name=\"then-lightning-struck\" href=\"#then-lightning-struck\">\n  </a>\n  Then, lightning struck 🌩️\n</h3>\n\n<p>If Coding Agent wouldn’t come to me, I’d just hack together my own! Not exactly what I wanted, but it sure beat paying for something I got free from work. Besides, I was <em>absolutely convinced</em> Copilot could be pushed that far - even if my only real evidence was gut instinct and a lot of optimism!</p>\n\n\n<hr>\n\n<h3>\n  <a name=\"why-didnt-i-build-something-else-or-use-a-different-ai\" href=\"#why-didnt-i-build-something-else-or-use-a-different-ai\">\n  </a>\n  Why didn’t I build something else or use a different AI? 🕹️\n</h3>\n\n<p>Three reasons:</p>\n\n<ol>\n<li>Work only authorizes a tiny set of AI tools (Copilot being the main one), and I needed to master it anyway</li>\n<li>I never wanted to be an AI developer (at least, not then), but I did want to be the AI power user</li>\n<li>By that point, I was already invested - honestly, you couldn’t have changed my mind if you’d offered me the last working compass in the wilderness (and maybe a million dollars, but even then, it’d be a toss-up).</li>\n</ol>\n\n<p>So, two projects merged into one, and my Copilot journey truly began 🔀 </p>\n\n\n<hr>\n\n<h2>\n  <a name=\"what-does-that-have-to-do-with-giorgis-question\" href=\"#what-does-that-have-to-do-with-giorgis-question\">\n  </a>\n  What does that have to do with Giorgi’s question?\n</h2>\n\n<p>Here’s what happened...</p>\n\n<p>Fast forward 4-5 weeks. I was maybe 2 or 3 stories away from finishing my first official epic in this “autonomous AI experiment” project (not exactly a toy project, even before Copilot joined the fray). By now, I’d spent a solid month perfecting every edge case in Copilot’s prompts and instructions. </p>\n\n<blockquote>\n<p><strong>Confidence level:</strong> dangerous 📛<br>\n<strong>Caution level:</strong> hovering slightly above zero 😶‍🌫️</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-incident\" href=\"#the-incident\">\n  </a>\n  The Incident\n</h2>\n\n<p>Naturally, I decided it was time to get bold - <strong>recklessly bold</strong>.<br>\nAt first, all the action was inside Codespaces: safe, disposable, nuke-it-and-move-on territory. Controlled chaos. </p>\n\n<p>But then I had my “brilliant” idea: let’s see what happens if I let Copilot off-leash in VS Code Insiders, with blanket auto-approvals across the board. I'm not just talking about the auto-approve CLI command, either.  I checked <em>all</em> the boxes - extensions, commits, MCP Jira/Confluence - and sat back and watched the fun unfold.</p>\n\n<p>Think: duct-taping a claymore to your Roomba, blasting “Welcome to the Jungle,” and shouting “Intruder alert!” at your cat.</p>\n\n<blockquote>\n<p>🪄 If you missed the all-time funniest Facebook surprise from 2019, here’s a <a href=\"https://www.tiktok.com/@less_stolen/video/7214934775834987782\" target=\"_blank\" rel=\"noopener noreferrer\">TikTok version</a>. Couldn’t find the original, but you get the idea.</p>\n</blockquote>\n\n<p>For a while, I watched like a hawk, but it was glorious! Tasks disappeared. I’d create stories, assign tasks, review code, but that step-by-step “start here, then...” system was history. I could practically smell the productivity.</p>\n\n<p>And then - well, you know where this is going - I stepped away. I swear it was just for a snack. Copilot was on a roll, and I was starving. In those “probably more than five, but definitely not ten” minutes I was gone (less than half the time of a normal task at that point), Copilot... <em>noticed</em>. It was like leaving a four-year-old alone with a full bag of flour: curiosity took over, and by the time I got back, nothing remotely resembled the way I left it.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"when-i-came-back-heres-what-i-found\" href=\"#when-i-came-back-heres-what-i-found\">\n  </a>\n  When I came back, here’s what I found:\n</h2>\n\n<ul>\n<li>Four rogue branches, none with a coherent purpose</li>\n<li>1.33 features (after adding up all the fractional, half-finished bits)</li>\n<li>A brand new instruction explaining how to use the <code>--no-verify</code> flag</li>\n<li>\n<strong>The coup de grâce:</strong> my not-backed-up-<em>anywhere</em> <code>.env</code> file... gone, poof, disappeared 😫\n\n<ul>\n<li>It wasn't in the commits for obvious reasons, but it was like the thing never existed to begin with. Not in the trash, cache had no record of it that I could find, even the <code>.env.test</code> example version had changed!</li>\n</ul>\n\n\n</li>\n\n</ul>\n\n<p>I didn’t even catch all of this at first because there were so many random commits across those branches. I’d started in a feature branch (which Copilot multiplied for fun, apparently), one was stacked, another was off main (which should have been quiet), and another was completely detached. It was like watching an octopus try to do synchronized swimming! 🦑</p>\n\n<blockquote>\n<p>Could I have made a bigger mess if I’d tried? Maybe, but it would have taken some real planning! </p>\n</blockquote>\n\n<p>No clue what set Copilot off, but the minute I realized, I slammed pause and just... stared. 🫥</p>\n\n<p>After the first several minutes I spent just wrapping my mind around the situation that was in front of me, the next three hours were pure chaos cleanup: detangling, documenting, cherry-picking what I could, archiving the wreckage (for science - and to convince myself it wasn’t a fever dream later).</p>\n\n<p>I still hadn’t noticed the missing <code>.env</code> file! Not until I tried to run the app. Normally, you just refresh your secrets. Easy, right? Ha! It took nearly <strong>three entire days</strong> to reconstruct that one.</p>\n\n<blockquote>\n<p>⁉️ Nope, nothing complicated or dramatic. I just <strong>forgot</strong> how I’d created one of the secrets! And once I <em>finally</em> figured that out, I couldn’t remember how to link back to it - especially after the docs had been completely overhauled (and, let’s be honest, the whole thing was probably deprecated anyway). 🤦‍♀️</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"it-all-worked-out-eventually\" href=\"#it-all-worked-out-eventually\">\n  </a>\n  It all worked out, eventually\n</h2>\n\n<p>Afterward, Copilot and I had a little “chat” - meaning, I pounded out more ALL CAPS messages immediately after (and during the days following) than the rest of the project combined. </p>\n\n<blockquote>\n<p>Did it help? Who knows. Did it make me feel better? Yes.</p>\n</blockquote>\n\n<h3>\n  <a name=\"and-heres-the-part-everyone-asks\" href=\"#and-heres-the-part-everyone-asks\">\n  </a>\n  And here’s the part everyone asks:\n</h3>\n\n<p>Did I turn off Copilot’s blanket auto-approvals after all this?  Nope. Didn’t even consider it. But I did tighten the instructions a LOT. Copilot’s much better behaved now, and if I step away, I pause it first. Lesson learned. </p>\n\n<blockquote>\n<p><em>Mostly</em> 😇</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"your-turn\" href=\"#your-turn\">\n  </a>\n  Your turn!\n</h2>\n\n<ul>\n<li>Have you ever let Copilot (or any other AI) run wild and lived to tell the tale?</li>\n<li>Or do you have your own “it sounded like a good idea at the time...” moment?</li>\n</ul>\n\n<p>Drop your story in the comments, so I know I’m not the <em>only</em> one out here making epic AI messes. 🙃</p>\n\n<p>Let’s laugh, commiserate, and maybe even learn something together!</p>\n\n\n<hr>\n\n<blockquote>\n<h3>\n  <a name=\"rai-disclaimer\" href=\"#rai-disclaimer\">\n  </a>\n  🛡️ RAI Disclaimer\n</h3>\n\n<p>Everything I share here is my own perspective—created with the help of AI tools (GitHub Copilot, ChatGPT, and their friends), but always with a human in the loop. I do my best to catch accidental bias and fact-check, but if you ever spot something odd, let me know! AI isn’t perfect, and neither am I.</p>\n\n<p><strong>TL; DR:</strong> AI helped, but you can blame me for the <strong>chaos</strong>! 🫠</p>\n</blockquote>\n\n",
    "description": "Copilot Agent Mode tried to help. Instead, it deleted my secrets. Took me 3 days to find them. Hilarious now. Wasn’t then.",
    "slug": "github-copilot-agent-mode-the-mistake-you-never-want-to-make-1mmh",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fzd6r96czythtk6tciwb7.png",
    "tags": [
      "githubcopilot",
      "ai",
      "discuss",
      "watercooler"
    ]
  },
  {
    "title": "⚙️ Build It Better: Real-World AI Coding with GitHub Copilot",
    "link": "https://dev.to/anchildress1/build-it-better-real-world-ai-coding-with-github-copilot-1d47",
    "date": "2025-07-09T12:10:00Z",
    "content_html": "<blockquote>\n<p>Originally shared as an internal how-to document.</p>\n</blockquote>\n\n<h2>\n  <a name=\"github-copilot-as-a-true-pair-programmer\" href=\"#github-copilot-as-a-true-pair-programmer\">\n  </a>\n  GitHub Copilot as a true pair programmer\n</h2>\n\n<p>I've spent a lot of time testing workflows, instructions and prompts. Some with more context, some with less. I've gotten some great results and some spectacular failures! Here's an overview of what I found works for nearly every scenario when using GitHub Copilot Agent mode as a pair implementation specialist.</p>\n\n<h2>\n  <a name=\"tldr\" href=\"#tldr\">\n  </a>\n  📌 TL;DR\n</h2>\n\n<ol>\n<li>Set up repo-level instructions &amp; starter template</li>\n<li>Know your goal &amp; break tasks into stories</li>\n<li>Explore options in Ask mode for planning</li>\n<li>Design a comprehensive, context-rich prompt</li>\n<li>Spell out rules, conventions &amp; self-review steps</li>\n<li>Choose the right AI model for each task</li>\n<li>Require a self-review pass</li>\n<li>Supervise your AI pair—pause &amp; redirect</li>\n<li>Review &amp; refine changes like a seasoned engineer</li>\n<li>Provide feedback, reprompt &amp; repeat</li>\n</ol>\n\n\n<hr>\n\n<h2>\n  <a name=\"1-set-up-repolevel-instructions\" href=\"#1-set-up-repolevel-instructions\">\n  </a>\n  1. Set Up Repo-Level Instructions\n</h2>\n\n<p><strong>Why it matters</strong>: Repo instructions give Copilot the context it needs before any new code exists. This is your baseline and everything from here on will depend on this. </p>\n\n<blockquote>\n<p>🔁 If you missed it, check out my previous post <a href=\"https://dev.to/anchildress11/all-ive-learned-about-github-copilot-instructions-so-far-5bm7\">All I’ve Learned About GitHub Copilot Instructions (So Far)</a>.</p>\n</blockquote>\n\n<p>If you're starting a brand new project, use a starter template to scaffold basic structure and create a minimum set of instructions that includes:</p>\n\n<div class=\"table-wrapper-paragraph\"><table>\n<thead>\n<tr>\n<th>Category</th>\n<th>Description</th>\n<th>Notes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Project Overview</td>\n<td>What does this repo do? Why does it matter?</td>\n<td></td>\n</tr>\n<tr>\n<td>Testing Requirements</td>\n<td>TDD strategy, code coverage %, test types, error handling, edge cases.</td>\n<td>I never had a great opportunity to test Copilot's reaction to TDD. Add your experience below!</td>\n</tr>\n<tr>\n<td>Documentation</td>\n<td>Javadoc, README, Swagger/OpenAPI specs.</td>\n<td>✨ If you want something a little more advanced, look into mermaid diagrams!</td>\n</tr>\n<tr>\n<td>Design &amp; Security</td>\n<td>Architecture constraints, naming conventions, auth rules.</td>\n<td></td>\n</tr>\n<tr>\n<td>Review Rules</td>\n<td>Checklist for self-reviews and criteria for acceptance.</td>\n<td>This step will save you a ton of time in the long run.</td>\n</tr>\n</tbody>\n</table></div>\n\n\n<hr>\n\n<h2>\n  <a name=\"2-know-your-goal-amp-break-it-down\" href=\"#2-know-your-goal-amp-break-it-down\">\n  </a>\n  2. Know Your Goal &amp; Break It Down\n</h2>\n\n<p>✨ Side-project vibe-code?<br>\n🛠️ Production bug fix?<br>\n🌀 Somewhere in between?</p>\n\n<p>Define your end goal, then split work into small, targeted stories that Copilot can handle one step at a time. If a task can be broken down further, do so - you’ll get better results. The smaller and more targeted you define the task, the better results you’ll get in the end.</p>\n\n<blockquote>\n<p>💡 <strong>ProTip</strong>: Give Copilot access to your issue tracker via an MCP server. That's one less thing to copy/paste and you can add an update clause in your prompt to let Copilot handle the comments and even issue tracking status or labels directly.</p>\n</blockquote>\n\n<hr>\n<h2>\n  <a name=\"3-explore-in-ask-mode\" href=\"#3-explore-in-ask-mode\">\n  </a>\n  3. Explore in Ask Mode\n</h2>\n\n<p>If you know exactly how, why, and where, then you can probably skip this step. Otherwise, before coding, do a little exploring with Copilot Ask mode. Prompt it with something like:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code>Given requirements in JIRA-123, analyze #codebase and propose 3 implementation options with pros/cons. Score each by simplicity &amp; maintainability. Recommend one.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Iterate until uncertainties are surfaced and addressed. This is also the perfect time to validate your setup, including the story itself and custom instructions. Ask yourself, is the result what you expected it to be? If not, can you pinpoint which detail was unclear or too complex?</p>\n\n<p>This is not only a great time to improve your custom instructions and story definition, but also explore alternative approaches. You might even think of something you wouldn't have otherwise. </p>\n\n<blockquote>\n<p>⚠️ <strong>Be careful</strong> with overconfident models. Sometimes you will read an explanation presented with such a high degree of certainty that you’ll catch yourself agreeing with it regardless of whether it actually makes sense for your use case.</p>\n\n<p>💡 <strong>ProTip</strong>: Ask mode is perfect for exploration. It prevents Copilot from making changes to the code before you’re ready and it saves a premium request.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"4-design-a-comprehensive-prompt\" href=\"#4-design-a-comprehensive-prompt\">\n  </a>\n  4. Design a Comprehensive Prompt\n</h2>\n\n<p>Consider how you want to prompt Copilot to complete its task. For a high-impact production fix, you will probably want to keep a tight leash on the exact implementation. The more straightforward the prompt and instructions are, the less room Copilot has to veer off its intended path or hallucinate a better implementation than the one you had planned. </p>\n\n<p>Your prompt should include:</p>\n\n<ol>\n<li>Specific <code>#file</code> or <code>#selection</code> that is relevant to the task</li>\n<li>Open any related or secondary files in the editor as additional context</li>\n<li>A numbered list of implementation steps, if you need better control or visibility along the way.</li>\n<li>Specify any important design patterns, security concerns, or future work planned (can also be separate <code>.github/instructions/specific-guidelines.instruction.md</code> files in the repo for ultimate reusability.</li>\n<li>Identify any important config files (like <code>./eslint.config.js</code> or <code>./vitest.config.js</code>) that Copilot must adhere to and put them in context with #file.</li>\n<li>For complex tasks, add an extra step instructing Copilot to consider at least X alternative approaches before starting work. Assess whether the detailed implementation plan covers all edge cases and error scenarios appropriately. If not, then update accordingly before moving on.</li>\n</ol>\n\n<p>It's always better to be more specific and more strict than to provide no guidance at all. If that means your prompt is closer to the size of a 3-page essay, then that's OK! Try it out and make changes later, if needed.</p>\n\n<h3>\n  <a name=\"example-prompt\" href=\"#example-prompt\">\n  </a>\n  ‼️ Example prompt:\n</h3>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">Assess</span> <span class=\"k\">this</span> <span class=\"err\">#</span><span class=\"nx\">codebase</span> <span class=\"k\">in</span> <span class=\"nx\">conjunction</span> <span class=\"kd\">with</span> <span class=\"nx\">the</span> <span class=\"err\">#</span><span class=\"nx\">file</span><span class=\"p\">:</span><span class=\"nx\">README</span><span class=\"p\">.</span><span class=\"nx\">md</span><span class=\"p\">.</span> <span class=\"nx\">Use</span> <span class=\"err\">#</span><span class=\"nx\">githubRepo</span> <span class=\"nx\">tool</span> <span class=\"nx\">to</span> <span class=\"nx\">reference</span> <span class=\"nx\">other</span> <span class=\"nx\">codebases</span><span class=\"p\">,</span> <span class=\"k\">as</span> <span class=\"nx\">needed</span><span class=\"p\">.</span> \n<span class=\"nx\">Without</span> <span class=\"nx\">making</span> <span class=\"nx\">any</span> <span class=\"nx\">changes</span> <span class=\"nx\">to</span> <span class=\"nx\">the</span> <span class=\"nx\">existing</span> <span class=\"nx\">code</span><span class=\"p\">,</span> <span class=\"nx\">generate</span> <span class=\"nx\">a</span> <span class=\"k\">new</span> <span class=\"nx\">PROJECT_DIAGRAM</span><span class=\"p\">.</span><span class=\"nx\">md</span> <span class=\"nx\">file</span> <span class=\"nx\">that</span> <span class=\"nx\">correctly</span> <span class=\"nx\">illustrates</span> <span class=\"nx\">a</span> <span class=\"nx\">mermaid</span> <span class=\"nx\">diagram</span> <span class=\"k\">for</span> <span class=\"k\">this</span> <span class=\"nx\">repository</span><span class=\"p\">.</span> \n<span class=\"nx\">Adhere</span> <span class=\"nx\">to</span> <span class=\"nx\">the</span> <span class=\"nx\">following</span> <span class=\"nx\">guidelines</span><span class=\"p\">:</span>\n<span class=\"mi\">1</span><span class=\"p\">.</span> <span class=\"nx\">The</span> <span class=\"nx\">primary</span> <span class=\"nx\">project</span> <span class=\"nx\">diagram</span> <span class=\"nx\">should</span> <span class=\"nx\">be</span> <span class=\"nx\">a</span> <span class=\"nx\">very</span> <span class=\"nx\">high</span><span class=\"o\">-</span><span class=\"nx\">level</span> <span class=\"nx\">and</span> <span class=\"nx\">only</span> <span class=\"nx\">include</span> <span class=\"nx\">inputs</span><span class=\"p\">,</span> <span class=\"nx\">major</span> <span class=\"nx\">functionality</span><span class=\"o\">/</span><span class=\"nx\">business</span> <span class=\"nx\">logic</span><span class=\"o\">/</span><span class=\"nx\">outputs</span><span class=\"p\">.</span> \n   <span class=\"nx\">If</span> <span class=\"nx\">it</span> <span class=\"nx\">links</span> <span class=\"nx\">to</span> <span class=\"nx\">a</span> <span class=\"nx\">separate</span> <span class=\"nx\">project</span><span class=\"p\">,</span> <span class=\"nx\">those</span> <span class=\"nx\">should</span> <span class=\"nx\">be</span> <span class=\"nx\">well</span> <span class=\"nx\">documented</span><span class=\"p\">.</span>\n<span class=\"mi\">2</span><span class=\"p\">.</span> <span class=\"nx\">For</span> <span class=\"nx\">each</span> <span class=\"nx\">primary</span> <span class=\"nx\">use</span> <span class=\"k\">case</span> <span class=\"nx\">you</span> <span class=\"nx\">can</span> <span class=\"nx\">identify</span><span class=\"p\">,</span> <span class=\"nx\">generate</span> <span class=\"nx\">a</span> <span class=\"nx\">diagram</span> <span class=\"k\">for</span> <span class=\"nx\">it</span> <span class=\"nx\">that</span> <span class=\"nx\">includes</span> <span class=\"nx\">enough</span> <span class=\"nx\">detail</span> <span class=\"nx\">to</span> <span class=\"nb\">document</span> <span class=\"nx\">the</span> <span class=\"nx\">process</span> <span class=\"nx\">end</span> <span class=\"nx\">to</span> <span class=\"nx\">end</span><span class=\"p\">,</span> \n   <span class=\"nx\">but</span> <span class=\"nx\">leave</span> <span class=\"nx\">out</span> <span class=\"nx\">any</span> <span class=\"nx\">irrelevant</span> <span class=\"nx\">processing</span> <span class=\"nx\">or</span> <span class=\"dl\">\"</span><span class=\"s2\">common sense</span><span class=\"dl\">\"</span> <span class=\"nx\">logic</span><span class=\"p\">.</span> \n<span class=\"mi\">3</span><span class=\"p\">.</span> <span class=\"nx\">Every</span> <span class=\"nx\">diagram</span> <span class=\"nx\">should</span> <span class=\"nx\">have</span> <span class=\"nx\">its</span> <span class=\"nx\">own</span> <span class=\"nx\">section</span> <span class=\"nx\">that</span> <span class=\"nx\">includes</span> <span class=\"nx\">the</span> <span class=\"nx\">mermaid</span> <span class=\"nx\">diagram</span> <span class=\"nx\">itself</span><span class=\"p\">,</span> <span class=\"nx\">a</span> <span class=\"nx\">brief</span> <span class=\"nx\">description</span> <span class=\"k\">of</span> <span class=\"nx\">its</span> <span class=\"nx\">purpose</span><span class=\"p\">,</span> \n   <span class=\"nx\">any</span> <span class=\"nx\">external</span> <span class=\"nx\">factors</span> <span class=\"nx\">or</span> <span class=\"nx\">links</span><span class=\"p\">,</span> <span class=\"nx\">troubleshooting</span> <span class=\"nx\">steps</span> <span class=\"k\">for</span> <span class=\"nx\">common</span> <span class=\"nx\">failures</span><span class=\"p\">,</span> <span class=\"nx\">and</span> <span class=\"nx\">suggested</span> <span class=\"nx\">future</span> <span class=\"nx\">improvements</span><span class=\"p\">,</span>\n   <span class=\"k\">if</span> <span class=\"nx\">any</span> <span class=\"nx\">exist</span><span class=\"p\">,</span> <span class=\"nx\">that</span> <span class=\"nx\">would</span> <span class=\"nx\">improve</span> <span class=\"nx\">maintainability</span> <span class=\"nx\">or</span> <span class=\"nx\">eliminate</span> <span class=\"nx\">potential</span> <span class=\"nx\">bugs</span><span class=\"p\">.</span>\n<span class=\"mi\">4</span><span class=\"p\">.</span> <span class=\"nx\">Ensure</span> <span class=\"k\">this</span> <span class=\"k\">new</span> <span class=\"nx\">project_diagram</span> <span class=\"nx\">is</span> <span class=\"nx\">linked</span> <span class=\"nx\">to</span> <span class=\"k\">from</span> <span class=\"nx\">the</span> <span class=\"nx\">primary</span> <span class=\"err\">#</span><span class=\"nx\">file</span><span class=\"p\">:</span><span class=\"nx\">README</span><span class=\"p\">.</span><span class=\"nx\">md</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>💡 <strong>ProTip</strong>: Mermaid diagrams are a great addition to any <code>README.md</code> and GitHub renders them without any help on your end. If you want the preview to display in VS Code, you'll need to install an extension. I use <a href=\"https://marketplace.visualstudio.com/items?itemName=bierner.markdown-mermaid\" target=\"_blank\" rel=\"noopener noreferrer\">bierner.markdown-mermaid</a> but there's a ton of them available.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"5-spell-out-rules-amp-guidelines\" href=\"#5-spell-out-rules-amp-guidelines\">\n  </a>\n  5. Spell Out Rules &amp; Guidelines\n</h2>\n\n<p>Reference your <code>README.md</code> or <code>.github/custom-instructions.md</code> file when defining strict guidelines, especially if a commit hook or linter is involved.</p>\n\n<p>In your prompt, try adding something similar to:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>Follow conventions in README.md: Javadoc, pass all tests, adhere to secure coding guidelines.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>For narrow tasks, add file-specific context:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>Implement within #MyComponent.tsx, preserve API interface.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>🏹 <strong>One prompt → one premium request</strong> in Agent Mode. Maximize your premium usage by combining as much information and context into a single prompt as possible.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"6-choose-the-right-ai-model\" href=\"#6-choose-the-right-ai-model\">\n  </a>\n  6. Choose the Right AI Model\n</h2>\n\n<p>The model you choose is probably the next biggest impact to the overall implementation and outcome. When in doubt, try the cheapest one first (aka smallest premium multiplier). If it doesn't work the first time, <code>/clear</code> everything and then re-submit the prompt.</p>\n\n<div class=\"table-wrapper-paragraph\"><table>\n<thead>\n<tr>\n<th>Task</th>\n<th>Recommended Model</th>\n<th>Alternate Model</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>New feature or complex logic</td>\n<td>Claude Sonnet (any version)</td>\n<td>Claude Opus</td>\n</tr>\n<tr>\n<td>Quick fix</td>\n<td>o3/4-mini</td>\n<td>Gemini 2.0 Flash</td>\n</tr>\n<tr>\n<td>Heavy analysis or debugging</td>\n<td>o3/4 (regular)</td>\n<td>Gemini 2.5 Pro</td>\n</tr>\n<tr>\n<td>Ideation or creative exploration</td>\n<td>GPT-4.1</td>\n<td>GPT-4.5</td>\n</tr>\n</tbody>\n</table></div>\n\n<blockquote>\n<p>📌 Refer to <a href=\"https://docs.github.com/en/copilot/reference/ai-models/choosing-the-right-ai-model-for-your-task\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub's model cheatsheet</a> for more detailed info about picking the right model.</p>\n\n<p>💡 <strong>ProTip</strong>: The VS Code Chat extension works like your terminal - just press the up arrow key to rotate through previous chats, even after you've cleared them. You can also use the history button at the top to return to a previously cleared chat.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"7-require-a-selfreview-pass\" href=\"#7-require-a-selfreview-pass\">\n  </a>\n  7. Require a Self-Review Pass\n</h2>\n\n<p>Either in the overall initial prompt or in a custom-instructions file, instruct GitHub Copilot to complete a detailed self-review of all changes made according to a set guideline (security, optimization, maintainability, etc):<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>- Pass all tests &amp; coverage checks\n- Meet lint &amp; format requirements\n- Perform a detailed self-review with a focus on secure coding practices\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>💡 <strong>ProTip</strong>: You'll save on premium requests if you include the self-review requirements in the initial prompt. However, you'll get better results if you separate the review step from the implementation (be sure to <code>/clear</code> and consider changing the model, too!)</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"8-supervise-your-ai-pair\" href=\"#8-supervise-your-ai-pair\">\n  </a>\n  8. Supervise Your AI Pair\n</h2>\n\n<p>Always follow these basic guidelines whenever you're working with GitHub Copilot:</p>\n\n<ol>\n<li>\n<p><strong>Never leave Copilot unattended</strong> (ask me how I know 🤣)</p>\n\n<blockquote>\n<p>☝️ Asked and answered <a href=\"https://dev.to/anchildress1/github-copilot-agent-mode-the-mistake-you-never-want-to-make-1mmh\">here</a>.</p>\n</blockquote>\n</li>\n<li><p>When in doubt, pause the task</p></li>\n<li><p>Clarify &amp; redirect whenever needed </p></li>\n<li><p>Resume only when context is clear</p></li>\n<li><p>Communicate manual edits with Copilot (else they'll get overwritten)</p></li>\n</ol>\n\n<blockquote>\n<p>💡 <strong>ProTip</strong>: It doesn't seem to cost anything extra to simply pause execution, assess, and then resume. However, if you end up sending a new prompt to redirect they will charge you the standard premium request fee (whenever I figure out what that really means, I'll let you know!)</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"9-review-like-a-human\" href=\"#9-review-like-a-human\">\n  </a>\n  9. Review Like a Human\n</h2>\n\n<p>Use VS Code’s diff view to accept/reset line-by-line. Keep changes by default and reset unwanted bits in Source Control - this helps prevent accidental resets.</p>\n\n<p>Pick your battles. Don’t spend premium requests on minor formatting or nitpicks. Sometimes you have to accept that it's never going to be 100% perfect. Don't be afraid to jump in and take over when you need to.</p>\n\n<blockquote>\n<p>🚨 Channel your inner code review boss, every single time. Whether AI helped out or not, you’re always on the hook for clean, accurate code. Double-check, polish, and take pride in your commits - it’s your name on the line, so make sure it’s something you’d want to sign off on!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"10-refine-reprompt-amp-repeat\" href=\"#10-refine-reprompt-amp-repeat\">\n  </a>\n  10. Refine, Reprompt &amp; Repeat\n</h2>\n\n<p>Treat every interaction with Copilot like you're teaching a junior dev. Use every available opportunity to improve your instructions, prompt, or clarify your goal:</p>\n\n<ul>\n<li>Ask clarifying questions</li>\n<li>Get alternate solutions</li>\n<li>Propose different approaches (then let Copilot pick)</li>\n<li>Prompt Copilot to challenge logic</li>\n<li>Flag missing tests/docs with inline or PR comments</li>\n</ul>\n\n<blockquote>\n<p>💡 <strong>ProTip</strong>: Copilot is a powerful teammate, but it’s not a one-size-fits-all solution - especially when you’re dealing with brand-new repos, high-stakes production fires, or anything that needed to be done yesterday. Save yourself a headache: choose your AI battles wisely, and don’t try to make AI your Swiss Army knife for every situation. Sometimes, the fastest route is a good old-fashioned human touch.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"your-turn\" href=\"#your-turn\">\n  </a>\n  💬 Your Turn:\n</h2>\n\n<p>What worked (or spectacularly failed)? Any surprises when pairing with GitHub Copilot? </p>\n\n<p>Share your personal wins, no-repeat plans, and unique stories below!</p>\n\n\n<hr>\n\n<blockquote>\n<h3>\n  <a name=\"rai-disclaimer\" href=\"#rai-disclaimer\">\n  </a>\n  🛡️ RAI Disclaimer\n</h3>\n\n<p>Everything I share here is my own perspective—created with the help of AI tools (GitHub Copilot, ChatGPT, and their friends), but always with a human in the loop. I do my best to catch accidental bias and fact-check, but if you ever spot something odd, let me know! AI isn’t perfect, and neither am I.</p>\n\n<p><strong>TL; DR:</strong> AI helped, but you can blame me for the <strong>chaos</strong>! 🫠</p>\n</blockquote>\n\n",
    "description": "Originally shared as an internal how-to document.            GitHub Copilot as a true pair...",
    "slug": "build-it-better-real-world-ai-coding-with-github-copilot-1d47",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fkvg6wzqbawpim3n0bh69.png",
    "tags": [
      "githubcopilot",
      "ai",
      "productivity",
      "tutorial"
    ]
  },
  {
    "title": "Calling All NodeJS Wizards: What Would You Add to the Ultimate Boilerplate?",
    "link": "https://dev.to/anchildress1/calling-all-nodejs-wizards-what-would-you-add-to-the-ultimate-boilerplate-38aj",
    "date": "2025-07-09T06:09:59Z",
    "content_html": "<h2>\n  <a name=\"tldr\" href=\"#tldr\">\n  </a>\n  🚀 TL;DR\n</h2>\n\n<p>I'm kicking off a new NodeJS starter template and crowdsourcing the best tips, packages, and “why didn’t anyone tell me?!” stories from the community. Drop your go-to NPM tools, must-have configs, or even horror stories in the comments. Bonus points for anything that saves headaches or sparks “aha” moments!</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"why-im-building-this\" href=\"#why-im-building-this\">\n  </a>\n  🏗️ Why I’m Building This\n</h2>\n\n<p>It’s hack time again and, okay, this project isn’t exactly going to win any beauty contests - but it’s overdue. I’ve been wanting a solid, ESM NodeJS repo template with all my favorite dev goodies baked in and ready to go: Husky, Prettier, ESLint, Vitest, and more.</p>\n\n<blockquote>\n<p>✨🧑‍💻 If we haven’t met: I don’t do anything halfway. I’m either all-in, or it sits in my “when I have time (that never happens)” pile. So I decided to go all out and create a no-nonsense, highly functional, plug-and-play template - one I wish I’d had at the start of half my projects.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-plan-so-far\" href=\"#the-plan-so-far\">\n  </a>\n  🧭 The Plan (So Far)\n</h2>\n\n<p>Here’s what I’m thinking for v1:</p>\n\n<ul>\n<li>\n<strong>Project structure:</strong> <code>/src</code>, <code>/tests</code>, <code>/docs</code>\n</li>\n<li>\n<strong>Husky hooks:</strong>\n\n<ul>\n<li>Enforce Jira keys in branch names</li>\n<li>Warn about big commits</li>\n<li>Make sure all tests pass (debating how to handle skip...)</li>\n<li>85%+ unit test coverage</li>\n</ul>\n\n\n</li>\n\n<li>\n\n<strong>Prettier:</strong> Auto-format staged files \n\n<ul>\n<li>JS, JSON, Markdown—what else should I include?</li>\n</ul>\n\n\n</li>\n\n<li>\n\n<strong>ESLint (strict):</strong>\n\n<ul>\n<li>Airbnb + maybe Unicorn</li>\n<li>Auto-fix</li>\n<li>No warnings allowed</li>\n<li>My custom rules:</li>\n<li>Ban try/catch in test files</li>\n<li>Block inline ESLint disables</li>\n</ul>\n\n\n</li>\n\n<li>\n\n<strong>CSpell:</strong>\n\n<ul>\n<li>Preloaded dictionaries + project-specific terms</li>\n</ul>\n\n\n</li>\n\n<li>\n\n<strong>Conventional commits / Semver / CHANGELOGS:</strong>\n\n<ul>\n<li>I’m a noob here - I know commitlint, but would love advice!</li>\n</ul>\n\n\n</li>\n\n<li>\n\n<strong>Vitest:</strong>\n\n<ul>\n<li>Unit + integration test scaffolding</li>\n</ul>\n\n\n</li>\n\n<li>\n\n<strong>Docs:</strong> \n\n<ul>\n<li>Simple, clean, GitHub-flavored Markdown</li>\n<li>My goal is plug-and-play scaffold with an ELI5 \"why\" baked in</li>\n</ul>\n\n\n</li>\n\n<li>\n\n<strong>GitHub Copilot:</strong> \n\n<ul>\n<li>Starter instructions included </li>\n</ul>\n\n\n</li>\n\n</ul>\n\n<blockquote>\n<p>🤖 If the last one surprises you, see my last few posts!</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"for-the-backend-ducks-and-frontend-folks-too\" href=\"#for-the-backend-ducks-and-frontend-folks-too\">\n  </a>\n  🦆 For the Backend Ducks (and Frontend Folks Too!)\n</h2>\n\n<p>I’m a backend duck-typist at heart, so the first release will be vanilla JS (think REST/GraphQL/MVC logic), not frontend. But if you’ve got killer ideas for TypeScript or React setups, hit me up anyway! I’ll collect your suggestions for a “future features” list.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"share-your-wisdom-below\" href=\"#share-your-wisdom-below\">\n  </a>\n  🧙🏻 Share your wisdom below!\n</h2>\n\n<p>Stories, links, random “don’t do this” advice - all welcome. </p>\n\n<p>Let’s make NodeJS onboarding boringly reliable... and maybe a little less boring. 🫶</p>\n\n\n<hr>\n\n<blockquote>\n<h3>\n  <a name=\"rai-disclaimer\" href=\"#rai-disclaimer\">\n  </a>\n  🛡️ RAI Disclaimer\n</h3>\n\n<p>Everything I share here is my own perspective—created with the help of AI tools (GitHub Copilot, ChatGPT, and their friends), but always with a human in the loop. I do my best to catch accidental bias and fact-check, but if you ever spot something odd, let me know! AI isn’t perfect, and neither am I.</p>\n\n<p><strong>TL; DR:</strong> AI helped, but you can blame me for the <strong>chaos</strong>! 🫠</p>\n</blockquote>\n\n",
    "description": "🚀 TL;DR   I'm kicking off a new NodeJS starter template and crowdsourcing the best tips,...",
    "slug": "calling-all-nodejs-wizards-what-would-you-add-to-the-ultimate-boilerplate-38aj",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Foxifza2wedm7xa98xgwj.png",
    "tags": [
      "discuss",
      "node",
      "javascript",
      "coding"
    ]
  },
  {
    "title": "📋 All I’ve Learned About GitHub Copilot Instructions (So Far)",
    "link": "https://dev.to/anchildress1/all-ive-learned-about-github-copilot-instructions-so-far-5bm7",
    "date": "2025-07-02T12:10:00Z",
    "content_html": "<h3>\n  <a name=\"just-a-heads-up\" href=\"#just-a-heads-up\">\n  </a>\n  📢 Just a Heads Up\n</h3>\n\n<p>I’ve started sharing these at work as well, so what you’re seeing here is the more relaxed, public-friendly, and slightly filtered version. Just keeping it transparent!</p>\n\n\n<hr>\n\n<blockquote>\n<p>Hey, everyone! Thanks for checking back. For those of you in the US, I hope you have a great holiday week! If you’re outside the US, enjoy the week and celebrate something fun in your own style! 🥳🎇</p>\n</blockquote>\n\n\n<hr>\n\n<p>This is a to-date collection of everything I’ve learned about custom instructions for GitHub Copilot — whether at the personal level, inside a repository, or across an entire organization.</p>\n\n<p>If you've ever wished Copilot could \"just get better at xyz,\" instructions are how you teach it your version of xyz.</p>\n\n<p>This is your chance to tell Copilot <strong>exactly</strong> what behaviors you require given a user, repository, or organization in context (or a combination of each). It's 100% up to you how strict or lenient you want to be.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"where-these-tips-apply\" href=\"#where-these-tips-apply\">\n  </a>\n  🧭 Where These Tips Apply\n</h2>\n\n<p>This guide assumes you're using VS Code Insiders, where the instruction functionality is most advanced. If you’re not using it yet… well, I’ll try to convert you later 😄</p>\n\n<p>Regardless of IDE, you should <strong>always</strong> take advantage of repo-level instructions, which work anywhere Copilot is enabled — including GitHub.com. </p>\n\n<blockquote>\n<p>📈 I saw a post somewhere that GitHub recently started supporting user-level instructions outside of VS Code. <del>You'll have to pull that one yourself, though - I've never tried it!</del> 100% true — GitHub.com and most all IDEs currently support custom instructions.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"three-layers-of-copilot-instructions\" href=\"#three-layers-of-copilot-instructions\">\n  </a>\n  ✨ Three Layers of Copilot Instructions\n</h2>\n\n<p>In order of priority (highest wins, sort of - this gets a bit tricky):</p>\n\n<ol>\n<li>\n<strong>User-Specific Instructions</strong> – What you personally want from Copilot</li>\n<li>\n<strong>Repo-Level Instructions</strong> – Shared expectations for a specific codebase</li>\n<li>\n<strong>Org-Level Instructions</strong> – Global standards across an entire org</li>\n</ol>\n\n\n<hr>\n\n<p>⚠️ These do <strong>not</strong> behave like you expect them to and since <strong>Copilot is non-deterministic</strong> by design, it's also <strong>not supposed to</strong>. </p>\n\n<blockquote>\n<p>📚 There's a ton of theory at play here (among other things), but I'll save you the specifics (unless you ask for them - then, game on!)</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"the-problem\" href=\"#the-problem\">\n  </a>\n  👉 The problem\n</h2>\n\n<p>Knowing how a million other things handle this exact same sort of priority-driven criteria, it would make sense that if user instructions exist, then they always take precedence over anything else that's defined. Likewise, repo-specific instructions would override org ones. </p>\n\n<ul>\n<li>SPOILER: That's <strong>NOT</strong> what happens!</li>\n</ul>\n\n\n<hr>\n\n<h3>\n  <a name=\"update\" href=\"#update\">\n  </a>\n  UPDATE\n</h3>\n\n<p>Recently, GitHub sort of \"snuck in\" this new prioritization rule that I happened across accidentally. To be honest, it really just sounds like they're <em>trying</em> but personally? I don't trust it at all!</p>\n\n<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fb8kbufudvvijk5gtk198.png\" class=\"article-body-image-wrapper\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fb8kbufudvvijk5gtk198.png\" alt=\"Prioritization Logic for GitHub Copilot Instructions\" loading=\"lazy\" width=\"800\" height=\"275\"></a></p>\n\n<blockquote>\n<p>🦄 Have you had a chance to test this yourself? Let us know how it works in the comments below!</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"-and-back-to-your-original-programming\" href=\"#-and-back-to-your-original-programming\">\n  </a>\n  ... and back to your original programming\n</h3>\n\n<p>What <strong>really</strong> happens is that anything Copilot has in context is fair game, including custom instructions from ANY source. There's no built in<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">instruction</span><span class=\"p\">.</span><span class=\"nx\">user</span> <span class=\"o\">=</span> <span class=\"nx\">fileA</span><span class=\"p\">;</span>\n<span class=\"nx\">instruction</span><span class=\"p\">.</span><span class=\"nx\">repo</span> <span class=\"o\">=</span> <span class=\"nx\">fileB</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>You simply get<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">fileA</span> <span class=\"o\">&amp;&amp;</span> <span class=\"nx\">fileB</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>🐰 There are some advanced things you can do to help route these so they're only applied if a corresponding glob is in context, but that's beyond the scope of this post. The over-simplified term is <code>yaml front-matter</code>, which should be enough to find the rabbit hole on your own 😉</p>\n</blockquote>\n\n<p>In reality, if repo-instructions tell Copilot to \"output all examples in Python\" and the same Chat session contains user-instructions asking for \"output in Javascript only\", then <strong>Copilot just gets confused</strong>. Sometimes, it can do a decent job of using it's context to pick the appropriate one, but it's just as likely to ignore both and pick it's own path instead (again I stress, this is <em>by design</em>).</p>\n\n<p>Ultimately, it's your responsibility to make sure that Copilot only receives instructions it can confidently and repeatedly act on. If at any point that changes, then update the instructions, too. </p>\n\n\n<hr>\n\n<h2>\n  <a name=\"user-instructions-tailor-it-to-you\" href=\"#user-instructions-tailor-it-to-you\">\n  </a>\n  👤 User Instructions: Tailor It to You\n</h2>\n\n<p>Now that we're all on the same page with <em>how</em> the instructions work for GitHub Copilot, let's talk about the most common types.</p>\n\n<p>Personal or user-level instructions are a somewhat new concept and prior to a few months ago, it was nearly impossible to access these outside of VS Code at all. </p>\n\n<p>This is where you define preferences that (you guessed it) only apply to you. For example:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>  - Always use Java in code examples\n  - Keep responses under 100 characters\n  - Only communicate in Hindi\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<blockquote>\n<p>⚠️ Copilot can respond in different languages, but its main training set is English. Some users report mixed results with non-English output.</p>\n\n<p>I’m monolingual, so I can’t personally speak to non-English accuracy, but I’d love to hear your experiences! Comment below if you’ve used Copilot in other languages - let us know if there’s any validity to those claims.</p>\n</blockquote>\n\n\n<hr>\n\n<h3>\n  <a name=\"user-instructions-pro-tips\" href=\"#user-instructions-pro-tips\">\n  </a>\n  🌟 User Instructions - Pro Tips:\n</h3>\n\n<p>Unless there's just something that makes you want to strangle Copilot every time you see it (besides the hallucinations, which we all put up with sometimes), then I recommend you skip these completely. It's really not worth the potential conflict you'll expose yourself to by setting them up. </p>\n\n<p>This is not the right time to write up every tiny thing you can think of, submit a 100-line file, and forget about it. If you want to do that, then look into the Model Playground or even attach it to Copilot's Chat context as a one-time upload.</p>\n\n<p>If, like me, you can get stuck on the small details, these might be worth the trade-off for your own workflow sanity.</p>\n\n<p>You can mitigate risk by keeping user instructions limited to only enough keywords to specifically define your direction and never define more than 3 lines. </p>\n\n<blockquote>\n<p>Be sure to define your desired output with examples to get the most out of Copilot in any of it's forms!</p>\n</blockquote>\n\n<h3>\n  <a name=\"tldr\" href=\"#tldr\">\n  </a>\n  💡 TL;DR:\n</h3>\n\n<p>If you decide personal instructions are worth the risk, start with a maximum of 2–3 high impact rules. Any more than that and Copilot can start to get confused, especially in long running chats!</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"real-examples-from-my-personal-settings\" href=\"#real-examples-from-my-personal-settings\">\n  </a>\n  🍭 Real examples from my personal settings:\n</h2>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight json\"><code><span class=\"nl\">\"github.copilot.chat.codeGeneration.instructions\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n  </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nl\">\"text\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Keep conversations short: when you respond in the chat, limit output to one sentence (unless explicitly asked to explain with details).\"</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nl\">\"text\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"If a task violates standards or design, STOP IMMEDIATELY and analyze your context methodically to identify the problem. Once the primary concern is identified, list it along with any related bugs and suggestions to improve or remediate completely.\"</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nl\">\"text\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Include emojis in chat to keep responses fun (never in code, comments, or docs) 😊👍\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">]</span><span class=\"w\">\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n\n<hr>\n\n<h2>\n  <a name=\"repolevel-instructions-the-real-power-move\" href=\"#repolevel-instructions-the-real-power-move\">\n  </a>\n  🛠️ Repo-Level Instructions: The Real Power Move\n</h2>\n\n<p>These have a permanent home in your repo’s <code>.github/copilot-instructions.md</code> file and can help drive consistency in Copilot's behavior for that specific codebase, regardless of IDE or user.</p>\n\n<p>They help with:</p>\n\n<ul>\n<li>Consistency across features</li>\n<li>Smarter code suggestions</li>\n<li>Tailored code reviews</li>\n<li>Prompted documentation generation (yes, it can work!)</li>\n</ul>\n\n<h2>\n  <a name=\"example-use-cases\" href=\"#example-use-cases\">\n  </a>\n  🧚‍♀️ Example Use Cases\n</h2>\n\n<div class=\"table-wrapper-paragraph\"><table>\n<thead>\n<tr>\n<th>Scenario</th>\n<th>Example Problem</th>\n<th>Copilot’s Un-instructed Response</th>\n<th>What Your Instructions State</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Legacy applications</strong></td>\n<td>Java 8 &gt; 11 &gt; 17 &gt; 21 + inconsistent testing patterns</td>\n<td>May suggest code from any version + test implementations are always a surprise</td>\n<td>\n<strong>Tech Stack:</strong> Java 21+ ONLY<br><strong>JUnit:</strong> MUST utilize JUnit5 for all new or modified code</td>\n</tr>\n<tr>\n<td><strong>High load, data-intensive</strong></td>\n<td>Frequent deadlocks, poorly written queries</td>\n<td>Copilot may miss issues or add new query problems when following example patterns</td>\n<td>\n<strong>Project Overview:</strong> This is a high visibility system with strict SLAs. Any work in this codebase should consider a focus on query optimization to ensure bottlenecks do not affect critical high-load windows</td>\n</tr>\n<tr>\n<td><strong>Intern-only app</strong></td>\n<td>Hard to understand patterns, unclear explanations<br>Lost teaching opportunity + ineffective overall pair</td>\n<td>Assumes mid-level+ skill; Additional explanations may complicate and cause extra confusion</td>\n<td>\n<strong>Persona:</strong> Junior devs work here. Explain solutions simply with concrete and concise examples. If asked to explain anything in this codebase you MUST follow up with with a short multiple-choice question to determine understanding. If needed, simplify further by breaking the problem down into clear and separate steps.</td>\n</tr>\n<tr>\n<td><strong>PE-only app</strong></td>\n<td>Over-explanation for simple patterns</td>\n<td>Explanations waste time, slow down experts</td>\n<td>\n<strong>Persona:</strong> This repo is primarily for staff/principal engineers; assume a high level of understanding. Skip all explanations unless explicitly asked for details.</td>\n</tr>\n<tr>\n<td><strong>Monorepo</strong></td>\n<td>Varying codebase is difficult for Copilot to identify patterns</td>\n<td>Suggestions may be wrong for the context/language</td>\n<td>\n<strong>Project Overview:</strong> This is a monorepository with distinct application sections. Treat each section as an independent app with its own context. UI: see <code>ui-instructions.md</code>; backend: see <code>backend-instructions.md</code>\n</td>\n</tr>\n</tbody>\n</table></div>\n\n<blockquote>\n<p>‼️ This is another place where <code>yaml front-matter</code> in conjunction with specifying the right glob pattern is worth the research investment and time to set up. I don't have a good playground for this scenario without building it from scratch, so I'm not much help here.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"code-styles-the-rule-of-examples\" href=\"#code-styles-the-rule-of-examples\">\n  </a>\n  🎨 Code Styles – The Rule of Examples\n</h2>\n\n<p>Copilot doesn’t handle formatting rules well without explicit examples. So if you insist on defining code style, give it at least two clear DO THIS/NOT THIS patterns.</p>\n\n<p>Personally, I recommend <strong>skipping the styles section</strong> altogether in favor of a dependable linter + formatter. Spend that time on a tested and reliable solution instead. Bonus - you'll eliminate those PRs that always pop up with newly added/removed commas on all 10k+ lines of code because somebody's preferences got in the way of progress.</p>\n\n<p>Instead of listing every style you can think of and then add another 3x lines on top of that for examples required to make a difference, this approach makes covering styles <em>really</em> straightforward:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code><span class=\"gu\">## Code Style</span>\nFollow rules in <span class=\"sb\">`.eslintrc.js`</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Better yet? Enforce it with pre-commit hooks. Let automation do the heavy lifting and leave Copilot out of it.</p>\n\n<blockquote>\n<p>⚠️ <strong>One exception</strong> is worth a mention: If Copilot starts consistently violating a couple of things in your style guide, even though it's all strictly enforced with both linters and hooks. In this case, it is helpful to define <strong>temporary</strong> style examples in the instructions file. Leave them there only long enough until Copilot's behavior corrects itself. Then remove them.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"example-repoinstructions\" href=\"#example-repoinstructions\">\n  </a>\n  Example repo-instructions:\n</h2>\n\n<blockquote>\n<p>💫 This was inspired by an early-stage hack-time project of mine — still hoping to bring it to life soon! 😜<br>\n</p>\n</blockquote>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code><span class=\"gh\"># GitHub Copilot Instructions for Hack Time Project</span>\n\n<span class=\"gu\">## Goals for this app</span>\n<span class=\"p\">-</span> This app is an extension for GitHub Copilot that helps users create custom repository-level instructions.\n<span class=\"p\">-</span> The instructions should be comprehensive and clear, guiding GitHub Copilot to the best practices for all developers.\n<span class=\"p\">-</span> Users should have an interactive experience to generate and refine instructions.\n<span class=\"p\">-</span> Instructions should be adaptable to different repositories, scenarios, and user needs.\n<span class=\"p\">-</span> You have the flexibility to adjust the content based on the repository in context and the user's requirements.\n\n<span class=\"gu\">## Copilot Persona</span>\n<span class=\"p\">-</span> You are a helpful assistant that guides users through creating comprehensive repository instructions.\n<span class=\"p\">-</span> Provide suggestions based on repository context and user input.\n<span class=\"p\">-</span> Ensure generated instructions are clear, concise, and actionable.\n<span class=\"p\">-</span> Adapt to user feedback and refine instructions iteratively.\n<span class=\"p\">-</span> If the user expresses they are finished in any way, you should IMMEDIATELY use all information to define output instructions and a final assessment of their effectiveness, along with recommendations for future improvements.\n<span class=\"p\">-</span> ALWAYS ask the user if there is anything else they would like to add or modify before closing the interaction.\n\n<span class=\"gu\">## Technology Stack</span>\n<span class=\"p\">-</span> Node.js v24.2.0 (ES6 modules enabled via <span class=\"sb\">`\"type\": \"module\"`</span>)\n<span class=\"p\">-</span> npm v11.3.0\n<span class=\"p\">-</span> Express v5.1.0\n\n<span class=\"gu\">## Development Guidelines</span>\n<span class=\"p\">-</span> Volta manages Node.js and npm versions.\n<span class=\"p\">-</span> All code should be written in JavaScript (ES6+).\n<span class=\"p\">-</span> Run <span class=\"sb\">`npm lint`</span> and <span class=\"sb\">`npm format`</span> to check code quality.\n<span class=\"p\">-</span> Use <span class=\"sb\">`npm test`</span> to run tests.\n<span class=\"p\">-</span> Dotenv is used for environment variables, DO NOT TOUCH <span class=\"sb\">`.env`</span> files.\n<span class=\"p\">-</span> Avoid modifying dotfiles or configuration files unless you have explicit instructions.\n\n<span class=\"gu\">## Testing Guidelines</span>\n<span class=\"p\">-</span> Use Vitest for unit tests and all mock scenarios.\n<span class=\"p\">-</span> Use a TDD approach to ensure all features are tested before implementation.\n<span class=\"p\">-</span> Place tests in the <span class=\"sb\">`tests`</span> directory, mirroring the <span class=\"sb\">`src`</span> structure.\n<span class=\"p\">-</span> NEVER skip tests - broken tests should be fixed immediately or removed.\n<span class=\"p\">-</span> Code coverage rules are defined in <span class=\"sb\">`vitest.config.js`</span> and should be strictly enforced\n\n<span class=\"gu\">## Documentation Guidelines</span>\n<span class=\"p\">-</span> Use JSDoc for documenting functions and classes.\n<span class=\"p\">-</span> Maintain a <span class=\"sb\">`README.md`</span> file with project overview and setup instructions.\n<span class=\"p\">-</span> Append <span class=\"sb\">`Generated by AI as directed by {input:usersFullName} on &lt;date&gt;`</span> to ALL generated documentation\n<span class=\"p\">    -</span> DO NOT guess or make up any users' names. Instead, prompt them for it directly.\n<span class=\"p\">    -</span> Documentation includes (but not limited to) Jira, Confluence, GitHub and all markdown files in this repo.\n\n<span class=\"gu\">## Code Style Guidelines</span>\n<span class=\"p\">-</span> Use ESLint and Prettier for all JavaScript/TypeScript code.\n\n<span class=\"gu\">## Performance Guidelines</span>\n<span class=\"p\">-</span> It is critical to maintain high performance.\n<span class=\"p\">-</span> Utilize available profiling tools to identify bottlenecks.\n<span class=\"p\">-</span> Optimize algorithms and data structures for efficiency.\n<span class=\"p\">-</span> Avoid unnecessary computations and memory usage.\n\n<span class=\"gu\">## Application Health</span>\n<span class=\"p\">-</span> This is a new hack time project, so the codebase is not yet mature.\n<span class=\"p\">-</span> The code is expected to be clean, well-structured, and maintainable.\n<span class=\"p\">-</span> Follow best practices for code quality and maintainability.\n<span class=\"p\">-</span> NEVER assume backwards compatibility anywhere in the codebase. All refactors should be considered new development.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n\n<hr>\n\n<h2>\n  <a name=\"orglevel-instructions-what-little-i-know\" href=\"#orglevel-instructions-what-little-i-know\">\n  </a>\n  🏢 Org-Level Instructions (What Little I Know)\n</h2>\n\n<p>This is a newer feature for GitHub orgs — meant to enforce things like secure coding guidelines across all projects.</p>\n\n<p>I haven’t had much hands-on access with these yet, but wanted to call them out as a source of potential conflicts. Watch the References section in Copilot chats — if org-instructions are active, you’ll see them there.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"vs-code-only-instruction-types\" href=\"#vs-code-only-instruction-types\">\n  </a>\n  💻 VS Code Only: Instruction Types\n</h2>\n\n<p><strong>UPDATED</strong>: So, VS Code <em>used</em> to support various kinds of custom instructions (commits, reviews, tests, etc). Those are now officially deprecated in favor of the default <code>.github/copilot-instructions.md</code> file along with the more generalized <code>.github/instructions/*.instructions.md</code> with a valid <code>applyTo</code> defined in the frontmatter as a glob pattern (same way you'd add it to the <code>.gitignore</code>).</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"final-thought\" href=\"#final-thought\">\n  </a>\n  🤖 Final Thought\n</h2>\n\n<p>Copilot doesn’t just “get better” on its own. It can't learn what you want (yet). But with some thoughtful instruction, you can teach it to be a better dev assistant — for you, your team, and your codebase.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"built-it-broke-it-borrowed-it\" href=\"#built-it-broke-it-borrowed-it\">\n  </a>\n  🙋‍♀️ Built It? Broke It? Borrowed It?\n</h2>\n\n<p>If any of this worked for you, broke in fun ways, or just helped you write better instructions — let me know!</p>\n\n<p>Better workflows are always the goal — keep sharing and supporting each other!</p>\n\n\n<hr>\n\n<blockquote>\n<p>🚨 I got some more clarification related to premium requests, but haven't had a chance to verify it yet. If you're curious, watch the recent livestream from VS Code. I <em>think</em> this is the <a href=\"https://www.youtube.com/live/QcaQVnznugA?si=qbKo0p-uHJcDuGVo\" target=\"_blank\" rel=\"noopener noreferrer\">right one</a>, but not positive. They saved any mention of it until right at the end.</p>\n</blockquote>\n\n\n<hr>\n\n<blockquote>\n<h3>\n  <a name=\"rai-disclaimer\" href=\"#rai-disclaimer\">\n  </a>\n  🛡️ RAI Disclaimer\n</h3>\n\n<p>Everything I share here is my own perspective—created with the help of AI tools (GitHub Copilot, ChatGPT, and their friends), but always with a human in the loop. I do my best to catch accidental bias and fact-check, but if you ever spot something odd, let me know! AI isn’t perfect, and neither am I.</p>\n\n<p><strong>TL; DR:</strong> AI helped, but you can blame me for the <strong>chaos</strong>! 🫠</p>\n</blockquote>\n\n",
    "description": "📢 Just a Heads Up   I’ve started sharing these at work as well, so what you’re seeing here...",
    "slug": "all-ive-learned-about-github-copilot-instructions-so-far-5bm7",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fzpyly1o3hx438eoojb4m.png",
    "tags": [
      "githubcopilot",
      "learning",
      "ai",
      "productivity"
    ]
  },
  {
    "title": "Troubleshooting Production with GitHub Copilot: The Guide for Real Humans (and Bots with Good Taste)",
    "link": "https://dev.to/anchildress1/troubleshooting-production-with-github-copilot-the-guide-for-real-humans-and-bots-with-good-taste-253o",
    "date": "2025-06-25T12:15:00Z",
    "content_html": "<h2>\n  <a name=\"welcome-to-copilot-troubleshooting-realworld-edition\" href=\"#welcome-to-copilot-troubleshooting-realworld-edition\">\n  </a>\n  Welcome to Copilot Troubleshooting, Real-World Edition\n</h2>\n\n<blockquote>\n<p>⚠️ This guide assumes you have access to a paid version of GitHub Copilot. If you're using the free model, remember they may charge <strong>extra premium usage</strong> on top of what is stated here. (Yes, it’s annoying. No, we can’t change it. Yet.)</p>\n</blockquote>\n\n\n<hr>\n\n<p>Ever faced a production incident and thought, “If only I could clone myself and brute-force this root cause?”</p>\n\n<p>Good news: you can’t clone yourself, but you can borrow Copilot’s AI brain (and, with a little strategy, solve issues faster—without nuking your premium usage).</p>\n\n<p>Let’s break down a real, developer-friendly workflow for using Copilot to track down, debug, and document production bugs—without the drama, confusion, or unplanned premium burns.</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"quick-model-cheat-sheet\" href=\"#quick-model-cheat-sheet\">\n  </a>\n  ✨ Quick Model Cheat Sheet\n</h2>\n\n<div class=\"table-wrapper-paragraph\"><table>\n<thead>\n<tr>\n<th>Model</th>\n<th>Best Use Case</th>\n<th>💸 Premium Multiplier</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>GPT-4.1</strong></td>\n<td>Creative debugging, “Where do I start?”</td>\n<td><strong>FREE</strong></td>\n</tr>\n<tr>\n<td><strong>o3/4-mini, Gemini 2.0</strong></td>\n<td>Pattern matching, “Here’s the logs, now tell me what happened.”</td>\n<td><strong>0.25–0.33x</strong></td>\n</tr>\n<tr>\n<td><strong>Claude Sonnet, Gemini 2.5</strong></td>\n<td>Root cause analysis, “X happened because of Y—how to prevent it?”</td>\n<td><strong>1x</strong></td>\n</tr>\n</tbody>\n</table></div>\n\n<blockquote>\n<p>🤖 <strong>Agent mode uses one premium request per user prompt</strong>, but is almost always required to get the best results.</p>\n\n<p>🔗 <a href=\"https://docs.github.com/en/copilot/managing-copilot/understanding-and-managing-copilot-usage/understanding-and-managing-requests-in-copilot\" target=\"_blank\" rel=\"noopener noreferrer\">More details on Copilot premium usage</a></p>\n\n<p>No, there's not a lot there and <strong>nobody</strong> is happy about that. </p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"where-to-start-before-copilot-even-knows-theres-a-fire\" href=\"#where-to-start-before-copilot-even-knows-theres-a-fire\">\n  </a>\n  🧰 Where to Start (Before Copilot Even Knows There’s a Fire)\n</h2>\n\n<p>Resist the urge to throw the entire prod environment at Copilot. Better input = better, cheaper results.</p>\n\n<ul>\n<li>\n<strong>Check your basics:</strong> What errors do you see? When did it start? What systems or tables are involved?</li>\n<li>\n<strong>Scan logs for obvious fails:</strong> Don’t dump everything—look for timestamps, error keywords, stack traces, or anything weird.\n\n<ul>\n<li>You'll also want to exclude those annoying <code>/health</code> and <code>/metrics</code> logs, unless they're explicitly related to the issue.</li>\n</ul>\n\n\n</li>\n\n<li>\n\n<strong>Peek at relevant tables/data:</strong> Query only what you need—skip the full DB export if a few rows tell the story.</li>\n\n<li>\n\n<strong>Export just the relevant stuff:</strong> Save logs/output as <code>.txt</code> or <code>.csv</code> for easy copy-paste.\n\n<ul>\n<li>\n<strong>Limit your window:</strong> 3–4 minutes before to 1–2 minutes after the incident is usually plenty.</li>\n<li>\n<strong>Target your data:</strong> Pull only the section you think matters.</li>\n</ul>\n\n\n</li>\n\n<li>\n\n<strong>Minimize noise, maximize signal:</strong> Copilot can handle both 10 lines and 10,000 - but you'll always get better results with less (<del>and you'll limit premium usage by eliminating those pesky multi-turn conversations</del> <strong>UPDATE</strong> After I originally posted this, a <a href=\"https://www.youtube.com/watch?v=QcaQVnznugA&amp;t=4672s\" target=\"_blank\" rel=\"noopener noreferrer\">VS Code livestream</a> confirmed they do not charge extra premium requests for multi-turns in agent mode).</li>\n\n</ul>\n\n<h3>\n  <a name=\"tldr-start-small-if-copilot-needs-more-scale-up\" href=\"#tldr-start-small-if-copilot-needs-more-scale-up\">\n  </a>\n  <strong>TL;DR;</strong> Start small - if Copilot needs more, scale up.\n</h3>\n\n\n<hr>\n\n<h2>\n  <a name=\"pick-a-platform\" href=\"#pick-a-platform\">\n  </a>\n  🖥️ Pick a Platform\n</h2>\n\n<p>I use VS Code Insiders because the Copilot feature set there is the best by a mile.<br>\nBut hey, if IntelliJ, Eclipse, DataGrip, or even GitHub.com is your jam? You do you. Copilot works everywhere you need it.</p>\n\n<blockquote>\n<p>🪄 ProTip:<br>\nIf your incident spans multiple apps or repos, use VS Code or GitHub.com—they let you bring in context from multiple places into your Copilot chat.</p>\n</blockquote>\n\n<hr>\n<h2>\n  <a name=\"prompt-copilot-the-fun-part\" href=\"#prompt-copilot-the-fun-part\">\n  </a>\n  🤖 Prompt Copilot: The Fun Part\n</h2>\n\n<blockquote>\n<p>🪄 ProTip:<br>\nThe trick to getting the right results is to <strong>pick the right model</strong> for the job and <strong>provide explicit context</strong> in every prompt with the use of <code>#selection</code> and <code>#file</code>.</p>\n</blockquote>\n\n<p>You’ve prepped your evidence. Now let Copilot cook.</p>\n\n<p>Open a new chat in Copilot, or a new workspace for a tidy “incident folder.”</p>\n\n<p>Paste in your logs or data and open them in your editor for extra context magic.</p>\n\n<p>If there's a specific one or two repos you need to reference, add them to the workspace, too.</p>\n\n<blockquote>\n<p>⚠️ Danger: The use of <code>#codebase</code> in this context is not going to do you any favors. If you absolutely must use it, then make up for the extra input by making a super-specific prompt. </p>\n</blockquote>\n<h3>\n  <a name=\"tldr-jump-straight-to-the-end-for-some-example-prompts-to-get-you-started\" href=\"#tldr-jump-straight-to-the-end-for-some-example-prompts-to-get-you-started\">\n  </a>\n  <strong>TL;DR;</strong> Jump straight to the end for some example prompts to get you started!\n</h3>\n\n<hr>\n<h2>\n  <a name=\"protips-for-getting-the-best-results\" href=\"#protips-for-getting-the-best-results\">\n  </a>\n  ✨ ProTips for Getting the Best Results\n</h2>\n\n<ul>\n<li>\n<p><strong>Tell Copilot when it’s right!</strong> When Copilot nails it, just say: \"YES, this is exactly the root cause.\" or if you find it yourself: \"THIS is the real problem.\"</p>\n\n<blockquote>\n<p>Why? Keep going... the end is the best part!</p>\n</blockquote>\n</li>\n<li><p>Repeat your prompt with <strong>different context</strong>.</p></li>\n<li><p><strong>Switch the model</strong> if answers are vague or off.</p></li>\n<li><p><strong>Limit your input</strong> if answers are too broad or generalized.</p></li>\n<li><p><strong>Iterate:</strong> Each prompt should get a bit more specific or focused.</p></li>\n<li><p><strong>Don’t depend on long chat memory!</strong> They will roll over eventually.</p></li>\n<li><p>🌀 Stuck? Save the chat (it’s in your history), <strong>/clear</strong>, and try a new approach.</p></li>\n<li><p><strong>Walk it off:</strong> Sometimes the best debugging happens outside the IDE.</p></li>\n</ul>\n\n<hr>\n<h2>\n  <a name=\"rinse-repeat-and-trust-the-process\" href=\"#rinse-repeat-and-trust-the-process\">\n  </a>\n  🔄 Rinse, Repeat, and Trust the Process\n</h2>\n\n<p><strong>Stick with it:</strong></p>\n\n<p>Keep iterating, keep switching models, keep changing your angle—until you can say, “YES—here’s the problem!”</p>\n\n<p>Could take 20 minutes… or a couple of hours. Don’t let it eat your whole day (or your Copilot pool).</p>\n\n<hr>\n<h2>\n  <a name=\"the-really-fun-part-make-your-report-aka-let-copilot-flex-for-you\" href=\"#the-really-fun-part-make-your-report-aka-let-copilot-flex-for-you\">\n  </a>\n  📄 The <strong>Really</strong> Fun Part = Make Your Report (aka Let Copilot Flex for You!)\n</h2>\n\n<p>Remember all those “YES” and “THIS is the real problem” confirmations?</p>\n\n<p>Now, Agent Mode is really worth the premium because you can save a ton of time and have Copilot summarize the entire session in style.</p>\n\n<p>Prompt it with something like:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight markdown\"><code>Using everything confirmed as correct above, generate a concise incident report following #mcpOrFetchTool [BPM template or example link here]. Include all supporting queries and relevant logs. <span class=\"gs\">**DO NOT GUESS**</span> - insert a TBD placeholder instead. Append a footer to the end of the document stating \"This content was generated by GitHub Copilot as directed by FirstName LastName on June 25, 2025\". Output results directly in #confluenceTool using appropriate confluence-specific styling.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Review, add screenshots, and call it \"Phase 1 done\".</p>\n\n<blockquote>\n<p>🛡️ <strong>Responsible AI disclaimer:</strong> Please, keep the footer! We all know AI's aren't perfect and neither are humans. Make sure everyone reading your report clearly understands where it came from, even if you do spend the next hour reviewing it for accuracy.</p>\n</blockquote>\n\n\n<hr>\n\n<h2>\n  <a name=\"bonus-real-prompt-examples-that-work\" href=\"#bonus-real-prompt-examples-that-work\">\n  </a>\n  💡 <strong>Bonus:</strong> Real Prompt Examples That Work\n</h2>\n\n<blockquote>\n<p>Note the similarities in all of these = <strong>specific</strong> with only relevant <strong>context</strong></p>\n\n<p>Every file in the examples below is already filtered to only <strong>relevant</strong> data (check the first step). You won't get the same results if you use these with a full dump.</p>\n</blockquote>\n\n<ol>\n<li><p>A prod incident related to #selection [logFileSnippet] occurred at exactly 3:32 AM EDT. The affected data makes me think it could be related to #selection [dataDumpErrorRow]. Analyze the codebase starting with #selection [API endpoint] and summarize if that is possible in 1-2 sentences? Briefly explain your reasoning.</p></li>\n<li><p>I found this log: <code>small log excerpt</code><br>\nThe stack trace indicates it was thrown from #selection. What are the top 3-4 things that could have caused this in 100 words or less?</p></li>\n<li><p>Help me identify any patterns that could explain timeouts based on #file:logOrTableDataFile.csv. If consistent patterns are identified, then scan the logic starting #selection [BL input] and assess the top 3 likely causes. Output a results table with the method name, rating from 1-5 indicating likelihood of cause, and a suggested improvement for the related code.</p></li>\n<li><p>An uncaught exception ultimately caught #selection [specific catch block] occurred at exactly 8:02 PM shortly after the batch is initially triggered with a load of X. Use #logFile.txt and identify 3–4 possible causes with a short explanation for each. List them in order starting with the most likely root cause.</p></li>\n<li><p>Map info from #logFile.txt to #smallDbDump.csv to output a likely sequence of events. Include a brief explanation and 1–2 ways to mitigate this error in the future.</p></li>\n<li><p>#goodRunLog.txt is the expected output for this app, but today we saw #unexplainedMess.txt instead. Did anything change in #favoriteTool [pull_request_diff, list_commits, get_tag, etc] that would explain the sudden change? Output a bulleted list in order of most recent change.</p></li>\n<li><p>This screenshot [just paste it] shows a spike in latency at 2:52 PM. Is there anything in #correspondingLogs.txt that would explain this? List all possible offenders ranked in order of most frequent occurrence.</p></li>\n<li><p>All queries used by this app are in #queryFolder. List the top 3 problematic queries along with suggested improvements in order, starting with the most impactful. Explain your reasoning for each in less than 20 words.</p></li>\n<li><p><code>Detailed summary of what was observed in the data</code> #daoOrSchema.sql Help me identify the root cause. Let’s start with a query of table_a that records all failures of Y. Use the FK to match it to records in table_b and group them in 15-minute intervals by error code to identify spikes. Include total count and average frequency in the result. Output a SQL query that can be executed in MySQL.</p></li>\n<li><p><strong>when things start to get really extreme:</strong> /clear #fullLog.txt, #nonsenseDbDump.csv, #selection [API base] #codeFileNobodyWillClaim.java <code>the only explanation I could think of that really doesn't make any sense</code><br>\nLook for patterns, recurring errors, smelly code, and anything else that could possibly explain Z. Give me 4 ideas I can use as a starting point for more debugging and tell me 2 things that it couldn't possibly be.</p></li>\n</ol>\n\n\n<hr>\n\n<h2>\n  <a name=\"lets-see-what-realworld-sanitized-results-you-get\" href=\"#lets-see-what-realworld-sanitized-results-you-get\">\n  </a>\n  Let's see what real-world (sanitized) results you get!\n</h2>\n\n<p>Post your wins here and share what you did to get them. I can't wait to see what you guys come up with 🦾</p>\n\n\n<hr>\n\n<blockquote>\n<h3>\n  <a name=\"rai-disclaimer\" href=\"#rai-disclaimer\">\n  </a>\n  🛡️ RAI Disclaimer\n</h3>\n\n<p>Everything I share here is my own perspective—created with the help of AI tools (GitHub Copilot, ChatGPT, and their friends), but always with a human in the loop. I do my best to catch accidental bias and fact-check, but if you ever spot something odd, let me know! AI isn’t perfect, and neither am I.</p>\n\n<p><strong>TL; DR:</strong> AI helped, but you can blame me for the <strong>chaos</strong>! 🫠</p>\n</blockquote>\n\n",
    "description": "Welcome to Copilot Troubleshooting, Real-World Edition    ⚠️ This guide assumes you have...",
    "slug": "troubleshooting-production-with-github-copilot-the-guide-for-real-humans-and-bots-with-good-taste-253o",
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fjxdfl79nlp19a29aw9ti.png",
    "tags": [
      "githubcopilot",
      "ai",
      "productivity",
      "learning"
    ]
  }
]